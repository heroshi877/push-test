{
  "version": 3,
  "sources": ["../../@web3-onboard/common/dist/index.js", "../../@web3-onboard/common/dist/errors.js", "../../@web3-onboard/common/dist/eip-1193.js", "../../@web3-onboard/common/dist/fonts.js", "../../@web3-onboard/common/dist/utils.js", "../../@web3-onboard/common/dist/types.js", "../../@web3-onboard/common/dist/validation.js"],
  "sourcesContent": ["export { ProviderRpcError } from './errors.js';\nexport { createEIP1193Provider } from './eip-1193.js';\nexport { InterVar } from './fonts.js';\nexport { weiHexToEth, weiToEth, isAddress, bigIntToHex, ethToWeiBigInt, createDownloadMessage, chainIdToViemImport } from './utils.js';\nexport * from './types.js';\nexport * from './validation.js';\nexport { parseEther, isHex, toHex, fromHex } from 'viem';\n", "export class ProviderRpcError extends Error {\n    constructor(error) {\n        super(error.message);\n        this.message = error.message;\n        this.code = error.code;\n        this.data = error.data;\n    }\n}\n", "import { ProviderRpcError } from './errors.js';\n/**\n * Takes a provider instance along with events\n * and requests to override and returns an EIP1193 provider\n *\n *  ## Example:\n *\n * *Overriding events: *\n * ```typescript\n * ```\n *\n * @param provider The provider to patch\n * @param requestPatch An `object` with the method to patch\n * and the implementation with which to patch\n * @param events Events to patch\n * @returns An EIP1193 Provider\n */\nexport const createEIP1193Provider = (provider, requestPatch) => {\n    let baseRequest;\n    if (provider.request) {\n        // Copy the original request method and bind the provider context to it\n        baseRequest = provider.request.bind(provider);\n    }\n    else if (provider.sendAsync) {\n        baseRequest = createRequest(provider);\n    }\n    const request = async ({ method, params }) => {\n        const key = method;\n        // If the request method is set to null\n        // this indicates this method is not supported\n        if (requestPatch && requestPatch[key] === null) {\n            throw new ProviderRpcError({\n                code: 4200,\n                message: `The Provider does not support the requested method: ${method}`\n            });\n        }\n        if (requestPatch && requestPatch[key]) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore // @TODO - Fix this type error\n            return requestPatch[key]({ baseRequest, params });\n        }\n        else if (baseRequest) {\n            return baseRequest({ method, params });\n        }\n        else {\n            throw new ProviderRpcError({\n                code: 4200,\n                message: `The Provider does not support the requested method: ${method}`\n            });\n        }\n    };\n    provider.request = request;\n    return provider;\n};\nconst createRequest = (provider) => (({ method, params }) => new Promise((resolve, reject) => {\n    provider.sendAsync({\n        id: 0,\n        jsonrpc: '2.0',\n        method,\n        params\n    }, (error, { result }) => {\n        if (error) {\n            reject(JSON.parse(error));\n        }\n        else {\n            resolve(result == undefined ? null : result);\n        }\n    });\n}));\n", "export const InterVar = `\n@font-face {\n  font-family: 'Inter';\n  font-style:  normal;\n  font-weight: 300 600;\n  font-display: swap;\n  src: url(\"https://rsms.me/inter/font-files/InterVariable.woff2\") format(\"woff2-variations\");\n}\n`;\n", "import { formatEther, fromHex, hexToBigInt, numberToHex, parseEther } from 'viem';\nexport const isAddress = (address) => {\n    return isAddress(address);\n};\nexport const weiHexToEth = (wei) => {\n    const weiBigInt = hexToBigInt(wei);\n    return formatEther(weiBigInt);\n};\nexport const weiToEth = (wei) => {\n    if (!wei)\n        return wei;\n    const weiBigInt = fromHex(wei, 'bigint');\n    return formatEther(weiBigInt);\n};\nexport const ethToWeiBigInt = (eth) => {\n    if (typeof eth !== 'string' && typeof eth !== 'number') {\n        throw new Error('eth must be a string or number value');\n    }\n    const ethString = typeof eth === 'number' ? eth.toString() : eth;\n    return parseEther(ethString);\n};\nexport const bigIntToHex = (value) => {\n    return numberToHex(value);\n};\nexport const createDownloadMessage = (walletLabel, download) => {\n    if (!download)\n        return `Please switch to ${walletLabel} to continue`;\n    if (typeof download === 'function') {\n        return `Please <a href=\"#\" onclick=\"${() => download()}\">install</a> or enable to ${walletLabel} to continue`;\n    }\n    else {\n        return `Please <a href=\"${download}\" target=\"_blank\">install</a> or enable to ${walletLabel} to continue`;\n    }\n};\nexport const chainIdToViemImport = async (w3oChain) => {\n    const viemChains = await import('viem/chains');\n    const { id, label, token, publicRpcUrl, blockExplorerUrl, rpcUrl } = w3oChain;\n    switch (id) {\n        case '0x89': {\n            const { polygon } = viemChains;\n            return polygon;\n        }\n        case '0xa': {\n            const { optimism } = viemChains;\n            return optimism;\n        }\n        case '0xa4b1': {\n            const { arbitrum } = viemChains;\n            return arbitrum;\n        }\n        case '0x144': {\n            const { zkSync } = viemChains;\n            return zkSync;\n        }\n        case '0x38': {\n            const { bsc } = viemChains;\n            return bsc;\n        }\n        case '0x1': {\n            const { mainnet } = viemChains;\n            return mainnet;\n        }\n        case '0xaa36a7': {\n            const { sepolia } = viemChains;\n            return sepolia;\n        }\n        case '0xfa': {\n            const { fantom } = viemChains;\n            return fantom;\n        }\n        case '0xa86a': {\n            const { avalanche } = viemChains;\n            return avalanche;\n        }\n        case '0xa4ec': {\n            const { celo } = viemChains;\n            return celo;\n        }\n        case '0x2105': {\n            const { base } = viemChains;\n            return base;\n        }\n        case '0x14a33': {\n            const { baseGoerli } = viemChains;\n            return baseGoerli;\n        }\n        case '0x64': {\n            const { gnosis } = viemChains;\n            return gnosis;\n        }\n        case '0x63564C40': {\n            const { harmonyOne } = viemChains;\n            return harmonyOne;\n        }\n        case '0x27bc86aa': {\n            const { degen } = viemChains;\n            return degen;\n        }\n        default: {\n            const { extractChain, defineChain } = await import('viem');\n            const nonNativeChain = extractChain({\n                chains: Object.values(viemChains),\n                id: fromHex(id, 'number')\n            });\n            if (nonNativeChain)\n                return nonNativeChain;\n            return defineChain({\n                id: fromHex(id, 'number'),\n                name: label !== null && label !== void 0 ? label : '',\n                nativeCurrency: {\n                    decimals: 18,\n                    name: token !== null && token !== void 0 ? token : '',\n                    symbol: token !== null && token !== void 0 ? token : ''\n                },\n                rpcUrls: {\n                    default: {\n                        http: [rpcUrl !== null && rpcUrl !== void 0 ? rpcUrl : '', publicRpcUrl !== null && publicRpcUrl !== void 0 ? publicRpcUrl : '']\n                    }\n                },\n                blockExplorers: {\n                    default: { name: 'Explorer', url: blockExplorerUrl !== null && blockExplorerUrl !== void 0 ? blockExplorerUrl : '' }\n                }\n            });\n        }\n    }\n};\n", "export var ProviderRpcErrorCode;\n(function (ProviderRpcErrorCode) {\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"ACCOUNT_ACCESS_REJECTED\"] = 4001] = \"ACCOUNT_ACCESS_REJECTED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"ACCOUNT_ACCESS_ALREADY_REQUESTED\"] = -32002] = \"ACCOUNT_ACCESS_ALREADY_REQUESTED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"UNAUTHORIZED\"] = 4100] = \"UNAUTHORIZED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"UNSUPPORTED_METHOD\"] = 4200] = \"UNSUPPORTED_METHOD\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"DISCONNECTED\"] = 4900] = \"DISCONNECTED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"CHAIN_DISCONNECTED\"] = 4901] = \"CHAIN_DISCONNECTED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"CHAIN_NOT_ADDED\"] = 4902] = \"CHAIN_NOT_ADDED\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"DOES_NOT_EXIST\"] = -32601] = \"DOES_NOT_EXIST\";\n    ProviderRpcErrorCode[ProviderRpcErrorCode[\"UNRECOGNIZED_CHAIN_ID\"] = -32603] = \"UNRECOGNIZED_CHAIN_ID\";\n})(ProviderRpcErrorCode || (ProviderRpcErrorCode = {}));\n", "import Joi from 'joi';\nexport function validate(validator, data) {\n    const result = validator.validate(data);\n    return result.error ? result : null;\n}\nexport const chainIdValidation = Joi.alternatives().try(Joi.string().pattern(/^0x[0-9a-fA-F]+$/), Joi.number().positive());\nexport const chainNamespaceValidation = Joi.string().valid('evm');\nconst secondaryTokenValidation = Joi.object({\n    address: Joi.string().required(),\n    icon: Joi.string().optional()\n});\nexport const chainValidation = Joi.object({\n    namespace: chainNamespaceValidation,\n    id: chainIdValidation.required(),\n    rpcUrl: Joi.string(),\n    label: Joi.string(),\n    token: Joi.string(),\n    secondaryTokens: Joi.array()\n        .max(5)\n        .items(secondaryTokenValidation)\n        .optional(),\n    icon: Joi.string(),\n    color: Joi.string(),\n    publicRpcUrl: Joi.string(),\n    protectedRpcUrl: Joi.string(),\n    blockExplorerUrl: Joi.string()\n});\n"],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "ProviderRpcErrorCode", "import_dist", "Joi"]
}
