{
  "version": 3,
  "sources": ["../../openpgp/node_modules/bn.js/lib/bn.js"],
  "sourcesContent": ["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],
  "mappings": "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",
  "names": ["module", "exports", "assert", "val", "msg", "Error", "inherits", "ctor", "superCtor", "super_", "TempCtor", "prototype", "constructor", "BN", "number", "base", "endian", "isBN", "this", "negative", "words", "length", "red", "_init", "Buffer", "wordSize", "e", "parseHex", "str", "start", "end", "r", "len", "Math", "min", "i", "c", "charCodeAt", "parseBase", "mul", "num", "Array", "isArray", "max", "left", "right", "cmp", "_initNumber", "_initArray", "toString", "replace", "_parseHex", "_parseBase", "strip", "toArray", "ceil", "j", "w", "off", "limbLen", "limbPow", "total", "mod", "word", "imuln", "_iaddn", "pow", "copy", "dest", "clone", "_expand", "size", "_normSign", "inspect", "zeros", "groupSizes", "groupBases", "smallMulTo", "self", "out", "a", "b", "lo", "carry", "k", "ncarry", "rword", "maxJ", "padding", "groupSize", "groupBase", "isZero", "modn", "idivn", "toNumber", "ret", "toJSON", "toBuffer", "toArrayLike", "ArrayType", "byteLength", "reqLength", "littleEndian", "res", "q", "andln", "iushrn", "_countBits", "clz32", "t", "_zeroBits", "bitLength", "hi", "zeroBits", "toTwos", "width", "abs", "inotn", "iaddn", "fromTwos", "testn", "notn", "ineg", "isNeg", "neg", "iuor", "ior", "or", "uor", "iuand", "iand", "and", "uand", "iuxor", "ixor", "xor", "uxor", "bytesNeeded", "bitsLeft", "setn", "bit", "wbit", "iadd", "isub", "add", "sub", "comb10MulTo", "mid", "o", "a0", "al0", "ah0", "a1", "al1", "ah1", "a2", "al2", "ah2", "a3", "al3", "ah3", "a4", "al4", "ah4", "a5", "al5", "ah5", "a6", "al6", "ah6", "a7", "al7", "ah7", "a8", "al8", "ah8", "a9", "al9", "ah9", "b0", "bl0", "bh0", "b1", "bl1", "bh1", "b2", "bl2", "bh2", "b3", "bl3", "bh3", "b4", "bl4", "bh4", "b5", "bl5", "bh5", "b6", "bl6", "bh6", "b7", "bl7", "bh7", "b8", "bl8", "bh8", "b9", "bl9", "bh9", "w0", "imul", "w1", "w2", "w3", "w4", "w5", "w6", "w7", "w8", "w9", "w10", "w11", "w12", "w13", "w14", "w15", "w16", "w17", "w18", "jumboMulTo", "FFTM", "mulp", "x", "y", "mulTo", "hncarry", "makeRBT", "N", "l", "revBin", "rb", "permute", "rbt", "rws", "iws", "rtws", "itws", "transform", "s", "rtwdf", "cos", "PI", "itwdf", "sin", "p", "rtwdf_", "itwdf_", "re", "ie", "ro", "io", "rx", "guessLen13b", "n", "m", "odd", "conjugate", "normalize13b", "ws", "round", "convert13b", "stub", "ph", "_", "rwst", "iwst", "nrws", "nrwst", "niwst", "rmws", "mulf", "muln", "sqr", "isqr", "iushln", "bits", "carryMask", "newCarry", "ishln", "hint", "extended", "h", "mask", "maskedWords", "ishrn", "shln", "ushln", "shrn", "ushrn", "imaskn", "maskn", "isubn", "addn", "subn", "iabs", "_ishlnsubmul", "shift", "_wordDiv", "mode", "bhi", "diff", "qj", "div", "divmod", "positive", "divn", "umod", "divRound", "dm", "half", "r2", "acc", "egcd", "A", "B", "C", "D", "g", "isEven", "yp", "xp", "im", "isOdd", "jm", "gcd", "_invmp", "x1", "x2", "delta", "cmpn", "invm", "bincn", "ucmp", "gtn", "gt", "gten", "gte", "ltn", "lt", "lten", "lte", "eqn", "eq", "Red", "toRed", "ctx", "convertTo", "_forceRed", "fromRed", "convertFrom", "forceRed", "redAdd", "redIAdd", "redSub", "redISub", "redShl", "shl", "redMul", "_verify2", "redIMul", "redSqr", "_verify1", "redISqr", "redSqrt", "sqrt", "redInvm", "redNeg", "redPow", "primes", "k256", "p224", "p192", "p25519", "MPrime", "name", "tmp", "_tmp", "K256", "call", "P224", "P192", "P25519", "prime", "_prime", "Mont", "imod", "rinv", "minv", "ireduce", "rlen", "split", "imulK", "input", "output", "outLen", "prev", "next", "mod3", "one", "nOne", "lpow", "z", "inv", "wnd", "current", "currentLen", "mont", "u"]
}
