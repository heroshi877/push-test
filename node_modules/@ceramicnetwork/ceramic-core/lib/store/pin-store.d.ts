import { StateStore } from "./state-store";
import { Pinning } from "../pinning/pinning";
import { Doctype, DocState } from "@ceramicnetwork/ceramic-common";
import CID from "cids";
import DocID from '@ceramicnetwork/docid';
export declare class PinStore {
    readonly stateStore: StateStore;
    readonly pinning: Pinning;
    readonly retrieve: (cid: CID) => Promise<any | null>;
    readonly resolve: (path: string) => Promise<CID>;
    constructor(stateStore: StateStore, pinning: Pinning, retrieve: (cid: CID) => Promise<any | null>, resolve: (path: string) => Promise<CID>);
    open(): Promise<void>;
    close(): Promise<void>;
    add(document: Doctype): Promise<void>;
    rm(docId: DocID): Promise<void>;
    ls(docId?: DocID): Promise<string[]>;
    protected pointsOfInterest(state: DocState): Promise<Array<CID>>;
}
//# sourceMappingURL=pin-store.d.ts.map