import { Pinning } from "./pinning";
import { Context } from "@ceramicnetwork/ceramic-common";
import { ffsTypes } from "@textile/powergate-client";
import CID from 'cids';
export declare class EmptyTokenError extends Error {
    constructor(address: string);
}
export declare enum JobStatus {
    JOB_STATUS_UNSPECIFIED = 0,
    JOB_STATUS_QUEUED = 1,
    JOB_STATUS_EXECUTING = 2,
    JOB_STATUS_FAILED = 3,
    JOB_STATUS_CANCELED = 4,
    JOB_STATUS_SUCCESS = 5
}
export declare class PowergatePinning implements Pinning {
    #private;
    static designator: string;
    readonly endpoint: string;
    readonly token: string;
    constructor(connectionString: string, context: Context);
    get pow(): any;
    open(): Promise<void>;
    close(): Promise<void>;
    pin(cid: CID): Promise<void>;
    unpin(cid: CID): Promise<void>;
    protected waitForJobStatus(jobId: string, status: ffsTypes.JobStatusMap[keyof ffsTypes.JobStatusMap]): Promise<void>;
}
//# sourceMappingURL=powergate-pinning.d.ts.map