import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'

globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
globalThis.global = globalThis.global || __global_polyfill
globalThis.process = globalThis.process || __process_polyfill

import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-O6J7OYVY.js";

// node_modules/@ensdomains/ens-validation/dist/ens-validation.es6.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
var maxInt = 2147483647;
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128;
var delimiter = "-";
var regexPunycode = /^xn--/;
var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
var errors = {
  "overflow": "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
};
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;
function error(type) {
  throw new RangeError(errors[type]);
}
function map(array, fn) {
  var length = array.length;
  var result = [];
  while (length--) {
    result[length] = fn(array[length]);
  }
  return result;
}
function mapDomain(string, fn) {
  var parts = string.split("@");
  var result = "";
  if (parts.length > 1) {
    result = parts[0] + "@";
    string = parts[1];
  }
  string = string.replace(regexSeparators, ".");
  var labels = string.split(".");
  var encoded = map(labels, fn).join(".");
  return result + encoded;
}
function ucs2encode(array) {
  return map(array, function(value) {
    var output = "";
    if (value > 65535) {
      value -= 65536;
      output += stringFromCharCode(value >>> 10 & 1023 | 55296);
      value = 56320 | value & 1023;
    }
    output += stringFromCharCode(value);
    return output;
  }).join("");
}
function basicToDigit(codePoint) {
  if (codePoint - 48 < 10) {
    return codePoint - 22;
  }
  if (codePoint - 65 < 26) {
    return codePoint - 65;
  }
  if (codePoint - 97 < 26) {
    return codePoint - 97;
  }
  return base;
}
function adapt(delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
}
function decode(input) {
  var output = [], inputLength = input.length, out, i = 0, n = initialN, bias = initialBias, basic, j, index, oldi, w, k, digit, t, baseMinusT;
  basic = input.lastIndexOf(delimiter);
  if (basic < 0) {
    basic = 0;
  }
  for (j = 0; j < basic; ++j) {
    if (input.charCodeAt(j) >= 128) {
      error("not-basic");
    }
    output.push(input.charCodeAt(j));
  }
  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
    for (oldi = i, w = 1, k = base; ; k += base) {
      if (index >= inputLength) {
        error("invalid-input");
      }
      digit = basicToDigit(input.charCodeAt(index++));
      if (digit >= base || digit > floor((maxInt - i) / w)) {
        error("overflow");
      }
      i += digit * w;
      t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
      if (digit < t) {
        break;
      }
      baseMinusT = base - t;
      if (w > floor(maxInt / baseMinusT)) {
        error("overflow");
      }
      w *= baseMinusT;
    }
    out = output.length + 1;
    bias = adapt(i - oldi, out, oldi == 0);
    if (floor(i / out) > maxInt - n) {
      error("overflow");
    }
    n += floor(i / out);
    i %= out;
    output.splice(i++, 0, n);
  }
  return ucs2encode(output);
}
function toUnicode(input) {
  return mapDomain(input, function(string) {
    return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
  });
}
var Domain = class {
  constructor(hostname) {
    this.hostname = hostname;
    this.labels = this.hostname.split(".").map(toUnicode);
    this.isTldAscii = !this.hostname.substring(this.hostname.lastIndexOf(".")).startsWith(".xn--");
    this.isEthTld = this.hostname.substring(this.hostname.lastIndexOf(".")) === ".eth";
  }
};
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2[ErrorCode2["ZERO_ERROR"] = 0] = "ZERO_ERROR";
  ErrorCode2[ErrorCode2["SUCCESS"] = 1] = "SUCCESS";
  ErrorCode2[ErrorCode2["FAILURE"] = 2] = "FAILURE";
  ErrorCode2[ErrorCode2["INVALID_FORMAT_ERROR"] = 3] = "INVALID_FORMAT_ERROR";
  ErrorCode2[ErrorCode2["ILLEGAL_ARGUMENT_ERROR"] = 4] = "ILLEGAL_ARGUMENT_ERROR";
  ErrorCode2[ErrorCode2["MEMORY_ALLOCATION_ERROR"] = 5] = "MEMORY_ALLOCATION_ERROR";
})(ErrorCode || (ErrorCode = {}));
var RestrictionLevel;
(function(RestrictionLevel2) {
  RestrictionLevel2[RestrictionLevel2["ASCII"] = 268435456] = "ASCII";
  RestrictionLevel2[RestrictionLevel2["SINGLE_SCRIPT_RESTRICTIVE"] = 536870912] = "SINGLE_SCRIPT_RESTRICTIVE";
  RestrictionLevel2[RestrictionLevel2["HIGHLY_RESTRICTIVE"] = 805306368] = "HIGHLY_RESTRICTIVE";
  RestrictionLevel2[RestrictionLevel2["MODERATELY_RESTRICTIVE"] = 1073741824] = "MODERATELY_RESTRICTIVE";
  RestrictionLevel2[RestrictionLevel2["MINIMALLY_RESTRICTIVE"] = 1342177280] = "MINIMALLY_RESTRICTIVE";
  RestrictionLevel2[RestrictionLevel2["UNRESTRICTIVE"] = 1610612736] = "UNRESTRICTIVE";
  RestrictionLevel2[RestrictionLevel2["RESTRICTION_LEVEL_MASK"] = 2130706432] = "RESTRICTION_LEVEL_MASK";
  RestrictionLevel2[RestrictionLevel2["UNDEFINED_RESTRICTIVE"] = -1] = "UNDEFINED_RESTRICTIVE";
})(RestrictionLevel || (RestrictionLevel = {}));
var SpoofChecks;
(function(SpoofChecks2) {
  SpoofChecks2[SpoofChecks2["SINGLE_SCRIPT_CONFUSABLE"] = 1] = "SINGLE_SCRIPT_CONFUSABLE";
  SpoofChecks2[SpoofChecks2["MIXED_SCRIPT_CONFUSABLE"] = 2] = "MIXED_SCRIPT_CONFUSABLE";
  SpoofChecks2[SpoofChecks2["WHOLE_SCRIPT_CONFUSABLE"] = 4] = "WHOLE_SCRIPT_CONFUSABLE";
  SpoofChecks2[SpoofChecks2["CONFUSABLE"] = 7] = "CONFUSABLE";
  SpoofChecks2[SpoofChecks2["RESTRICTION_LEVEL"] = 16] = "RESTRICTION_LEVEL";
  SpoofChecks2[SpoofChecks2["INVISIBLE"] = 32] = "INVISIBLE";
  SpoofChecks2[SpoofChecks2["CHAR_LIMIT"] = 64] = "CHAR_LIMIT";
  SpoofChecks2[SpoofChecks2["MIXED_NUMBERS"] = 128] = "MIXED_NUMBERS";
  SpoofChecks2[SpoofChecks2["ALL_CHECKS"] = 65535] = "ALL_CHECKS";
})(SpoofChecks || (SpoofChecks = {}));
var CheckResult = class {
  constructor() {
    this.checks = SpoofChecks.ALL_CHECKS;
    this.numerics = [];
    this.restrictionLevel = RestrictionLevel.HIGHLY_RESTRICTIVE;
  }
  toCombinedBitmask(enabledChecks) {
    if (enabledChecks !== 0 && this.restrictionLevel !== RestrictionLevel.UNDEFINED_RESTRICTIVE) {
      return this.checks | this.restrictionLevel;
    } else {
      return this.checks;
    }
  }
};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function unwrapExports(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function createCommonjsModule(fn, module) {
  return module = { exports: {} }, fn(module, module.exports), module.exports;
}
var interopRequireDefault = createCommonjsModule(function(module) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  module.exports = _interopRequireDefault;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(interopRequireDefault);
var check = function(it) {
  return it && it.Math == Math && it;
};
var global_1 = (
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == "object" && self) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
  /* @__PURE__ */ function() {
    return this;
  }() || Function("return this")()
);
var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var functionApply = typeof Reflect == "object" && Reflect.apply || (bind ? call.bind(apply) : function() {
  return call.apply(apply, arguments);
});
var FunctionPrototype$1 = Function.prototype;
var bind$1 = FunctionPrototype$1.bind;
var call$1 = FunctionPrototype$1.call;
var callBind = bind$1 && bind$1.bind(call$1);
var functionUncurryThis = bind$1 ? function(fn) {
  return fn && callBind(call$1, fn);
} : function(fn) {
  return fn && function() {
    return call$1.apply(fn, arguments);
  };
};
var isCallable = function(argument) {
  return typeof argument == "function";
};
var fails = function(exec2) {
  try {
    return !!exec2();
  } catch (error2) {
    return true;
  }
};
var descriptors = !fails(function() {
  return Object.defineProperty({}, 1, { get: function() {
    return 7;
  } })[1] != 7;
});
var call$2 = Function.prototype.call;
var functionCall = call$2.bind ? call$2.bind(call$2) : function() {
  return call$2.apply(call$2, arguments);
};
var $propertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);
var f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;
var objectPropertyIsEnumerable = {
  f
};
var createPropertyDescriptor = function(bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value
  };
};
var toString = functionUncurryThis({}.toString);
var stringSlice = functionUncurryThis("".slice);
var classofRaw = function(it) {
  return stringSlice(toString(it), 8, -1);
};
var Object$1 = global_1.Object;
var split = functionUncurryThis("".split);
var indexedObject = fails(function() {
  return !Object$1("z").propertyIsEnumerable(0);
}) ? function(it) {
  return classofRaw(it) == "String" ? split(it, "") : Object$1(it);
} : Object$1;
var TypeError$1 = global_1.TypeError;
var requireObjectCoercible = function(it) {
  if (it == void 0) throw TypeError$1("Can't call method on " + it);
  return it;
};
var toIndexedObject = function(it) {
  return indexedObject(requireObjectCoercible(it));
};
var isObject = function(it) {
  return typeof it == "object" ? it !== null : isCallable(it);
};
var path = {};
var aFunction = function(variable) {
  return isCallable(variable) ? variable : void 0;
};
var getBuiltIn = function(namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace]) : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
};
var objectIsPrototypeOf = functionUncurryThis({}.isPrototypeOf);
var engineUserAgent = getBuiltIn("navigator", "userAgent") || "";
var process = global_1.process;
var Deno = global_1.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match;
var version$1;
if (v8) {
  match = v8.split(".");
  version$1 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}
if (!version$1 && engineUserAgent) {
  match = engineUserAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = engineUserAgent.match(/Chrome\/(\d+)/);
    if (match) version$1 = +match[1];
  }
}
var engineV8Version = version$1;
var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function() {
  var symbol2 = Symbol();
  return !String(symbol2) || !(Object(symbol2) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
  !Symbol.sham && engineV8Version && engineV8Version < 41;
});
var useSymbolAsUid = nativeSymbol && !Symbol.sham && typeof Symbol.iterator == "symbol";
var Object$2 = global_1.Object;
var isSymbol = useSymbolAsUid ? function(it) {
  return typeof it == "symbol";
} : function(it) {
  var $Symbol2 = getBuiltIn("Symbol");
  return isCallable($Symbol2) && objectIsPrototypeOf($Symbol2.prototype, Object$2(it));
};
var String$1 = global_1.String;
var tryToString = function(argument) {
  try {
    return String$1(argument);
  } catch (error2) {
    return "Object";
  }
};
var TypeError$2 = global_1.TypeError;
var aCallable = function(argument) {
  if (isCallable(argument)) return argument;
  throw TypeError$2(tryToString(argument) + " is not a function");
};
var getMethod = function(V, P) {
  var func = V[P];
  return func == null ? void 0 : aCallable(func);
};
var TypeError$3 = global_1.TypeError;
var ordinaryToPrimitive = function(input, pref) {
  var fn, val;
  if (pref === "string" && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = functionCall(fn, input))) return val;
  if (pref !== "string" && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
  throw TypeError$3("Can't convert object to primitive value");
};
var isPure = true;
var defineProperty = Object.defineProperty;
var setGlobal = function(key, value) {
  try {
    defineProperty(global_1, key, { value, configurable: true, writable: true });
  } catch (error2) {
    global_1[key] = value;
  }
  return value;
};
var SHARED = "__core-js_shared__";
var store = global_1[SHARED] || setGlobal(SHARED, {});
var sharedStore = store;
var shared = createCommonjsModule(function(module) {
  (module.exports = function(key, value) {
    return sharedStore[key] || (sharedStore[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: "3.18.3",
    mode: isPure ? "pure" : "global",
    copyright: "© 2021 Denis Pushkarev (zloirock.ru)"
  });
});
var Object$3 = global_1.Object;
var toObject = function(argument) {
  return Object$3(requireObjectCoercible(argument));
};
var hasOwnProperty = functionUncurryThis({}.hasOwnProperty);
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};
var id = 0;
var postfix = Math.random();
var toString$1 = functionUncurryThis(1 .toString);
var uid = function(key) {
  return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$1(++id + postfix, 36);
};
var WellKnownSymbolsStore = shared("wks");
var Symbol$1 = global_1.Symbol;
var symbolFor = Symbol$1 && Symbol$1["for"];
var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;
var wellKnownSymbol = function(name) {
  if (!hasOwnProperty_1(WellKnownSymbolsStore, name) || !(nativeSymbol || typeof WellKnownSymbolsStore[name] == "string")) {
    var description = "Symbol." + name;
    if (nativeSymbol && hasOwnProperty_1(Symbol$1, name)) {
      WellKnownSymbolsStore[name] = Symbol$1[name];
    } else if (useSymbolAsUid && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  }
  return WellKnownSymbolsStore[name];
};
var TypeError$4 = global_1.TypeError;
var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
var toPrimitive = function(input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === void 0) pref = "default";
    result = functionCall(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError$4("Can't convert object to primitive value");
  }
  if (pref === void 0) pref = "number";
  return ordinaryToPrimitive(input, pref);
};
var toPropertyKey = function(argument) {
  var key = toPrimitive(argument, "string");
  return isSymbol(key) ? key : key + "";
};
var document$1 = global_1.document;
var EXISTS = isObject(document$1) && isObject(document$1.createElement);
var documentCreateElement = function(it) {
  return EXISTS ? document$1.createElement(it) : {};
};
var ie8DomDefine = !descriptors && !fails(function() {
  return Object.defineProperty(documentCreateElement("div"), "a", {
    get: function() {
      return 7;
    }
  }).a != 7;
});
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var f$1 = descriptors ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor2(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (ie8DomDefine) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error2) {
  }
  if (hasOwnProperty_1(O, P)) return createPropertyDescriptor(!functionCall(objectPropertyIsEnumerable.f, O, P), O[P]);
};
var objectGetOwnPropertyDescriptor = {
  f: f$1
};
var replacement = /#|\.prototype\./;
var isForced = function(feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
};
var normalize = isForced.normalize = function(string) {
  return String(string).replace(replacement, ".").toLowerCase();
};
var data = isForced.data = {};
var NATIVE = isForced.NATIVE = "N";
var POLYFILL = isForced.POLYFILL = "P";
var isForced_1 = isForced;
var bind$2 = functionUncurryThis(functionUncurryThis.bind);
var functionBindContext = function(fn, that) {
  aCallable(fn);
  return that === void 0 ? fn : bind$2 ? bind$2(fn, that) : function() {
    return fn.apply(that, arguments);
  };
};
var String$2 = global_1.String;
var TypeError$5 = global_1.TypeError;
var anObject = function(argument) {
  if (isObject(argument)) return argument;
  throw TypeError$5(String$2(argument) + " is not an object");
};
var TypeError$6 = global_1.TypeError;
var $defineProperty = Object.defineProperty;
var f$2 = descriptors ? $defineProperty : function defineProperty2(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (ie8DomDefine) try {
    return $defineProperty(O, P, Attributes);
  } catch (error2) {
  }
  if ("get" in Attributes || "set" in Attributes) throw TypeError$6("Accessors not supported");
  if ("value" in Attributes) O[P] = Attributes.value;
  return O;
};
var objectDefineProperty = {
  f: f$2
};
var createNonEnumerableProperty = descriptors ? function(object, key, value) {
  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
} : function(object, key, value) {
  object[key] = value;
  return object;
};
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var wrapConstructor = function(NativeConstructor) {
  var Wrapper = function(a, b, c) {
    if (this instanceof Wrapper) {
      switch (arguments.length) {
        case 0:
          return new NativeConstructor();
        case 1:
          return new NativeConstructor(a);
        case 2:
          return new NativeConstructor(a, b);
      }
      return new NativeConstructor(a, b, c);
    }
    return functionApply(NativeConstructor, this, arguments);
  };
  Wrapper.prototype = NativeConstructor.prototype;
  return Wrapper;
};
var _export = function(options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var PROTO = options.proto;
  var nativeSource = GLOBAL ? global_1 : STATIC ? global_1[TARGET] : (global_1[TARGET] || {}).prototype;
  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];
  var targetPrototype = target.prototype;
  var FORCED2, USE_NATIVE, VIRTUAL_PROTOTYPE;
  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;
  for (key in source) {
    FORCED2 = isForced_1(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
    USE_NATIVE = !FORCED2 && nativeSource && hasOwnProperty_1(nativeSource, key);
    targetProperty = target[key];
    if (USE_NATIVE) if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor$1(nativeSource, key);
      nativeProperty = descriptor && descriptor.value;
    } else nativeProperty = nativeSource[key];
    sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;
    if (options.bind && USE_NATIVE) resultProperty = functionBindContext(sourceProperty, global_1);
    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);
    else if (PROTO && isCallable(sourceProperty)) resultProperty = functionUncurryThis(sourceProperty);
    else resultProperty = sourceProperty;
    if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty(resultProperty, "sham", true);
    }
    createNonEnumerableProperty(target, key, resultProperty);
    if (PROTO) {
      VIRTUAL_PROTOTYPE = TARGET + "Prototype";
      if (!hasOwnProperty_1(path, VIRTUAL_PROTOTYPE)) {
        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
      }
      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);
      if (options.real && targetPrototype && !targetPrototype[key]) {
        createNonEnumerableProperty(targetPrototype, key, sourceProperty);
      }
    }
  }
};
_export({ target: "Object", stat: true, forced: !descriptors, sham: !descriptors }, {
  defineProperty: objectDefineProperty.f
});
var defineProperty_1 = createCommonjsModule(function(module) {
  var Object2 = path.Object;
  var defineProperty4 = module.exports = function defineProperty5(it, key, desc) {
    return Object2.defineProperty(it, key, desc);
  };
  if (Object2.defineProperty.sham) defineProperty4.sham = true;
});
var defineProperty$1 = defineProperty_1;
var defineProperty$2 = defineProperty$1;
var iterators = {};
var functionToString = functionUncurryThis(Function.toString);
if (!isCallable(sharedStore.inspectSource)) {
  sharedStore.inspectSource = function(it) {
    return functionToString(it);
  };
}
var inspectSource = sharedStore.inspectSource;
var WeakMap = global_1.WeakMap;
var nativeWeakMap = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));
var keys = shared("keys");
var sharedKey = function(key) {
  return keys[key] || (keys[key] = uid(key));
};
var hiddenKeys = {};
var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
var TypeError$7 = global_1.TypeError;
var WeakMap$1 = global_1.WeakMap;
var set;
var get;
var has;
var enforce = function(it) {
  return has(it) ? get(it) : set(it, {});
};
var getterFor = function(TYPE) {
  return function(it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$7("Incompatible receiver, " + TYPE + " required");
    }
    return state;
  };
};
if (nativeWeakMap || sharedStore.state) {
  store$1 = sharedStore.state || (sharedStore.state = new WeakMap$1());
  wmget = functionUncurryThis(store$1.get);
  wmhas = functionUncurryThis(store$1.has);
  wmset = functionUncurryThis(store$1.set);
  set = function(it, metadata) {
    if (wmhas(store$1, it)) throw new TypeError$7(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset(store$1, it, metadata);
    return metadata;
  };
  get = function(it) {
    return wmget(store$1, it) || {};
  };
  has = function(it) {
    return wmhas(store$1, it);
  };
} else {
  STATE = sharedKey("state");
  hiddenKeys[STATE] = true;
  set = function(it, metadata) {
    if (hasOwnProperty_1(it, STATE)) throw new TypeError$7(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function(it) {
    return hasOwnProperty_1(it, STATE) ? it[STATE] : {};
  };
  has = function(it) {
    return hasOwnProperty_1(it, STATE);
  };
}
var store$1;
var wmget;
var wmhas;
var wmset;
var STATE;
var internalState = {
  set,
  get,
  has,
  enforce,
  getterFor
};
var FunctionPrototype$2 = Function.prototype;
var getDescriptor = descriptors && Object.getOwnPropertyDescriptor;
var EXISTS$1 = hasOwnProperty_1(FunctionPrototype$2, "name");
var PROPER = EXISTS$1 && function something() {
}.name === "something";
var CONFIGURABLE = EXISTS$1 && (!descriptors || descriptors && getDescriptor(FunctionPrototype$2, "name").configurable);
var functionName = {
  EXISTS: EXISTS$1,
  PROPER,
  CONFIGURABLE
};
var ceil = Math.ceil;
var floor$1 = Math.floor;
var toIntegerOrInfinity = function(argument) {
  var number2 = +argument;
  return number2 !== number2 || number2 === 0 ? 0 : (number2 > 0 ? floor$1 : ceil)(number2);
};
var max = Math.max;
var min = Math.min;
var toAbsoluteIndex = function(index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};
var min$1 = Math.min;
var toLength = function(argument) {
  return argument > 0 ? min$1(toIntegerOrInfinity(argument), 9007199254740991) : 0;
};
var lengthOfArrayLike = function(obj) {
  return toLength(obj.length);
};
var createMethod = function(IS_INCLUDES) {
  return function($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      if (value != value) return true;
    }
    else for (; length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};
var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};
var indexOf = arrayIncludes.indexOf;
var push = functionUncurryThis([].push);
var objectKeysInternal = function(object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwnProperty_1(hiddenKeys, key) && hasOwnProperty_1(O, key) && push(result, key);
  while (names.length > i) if (hasOwnProperty_1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};
var enumBugKeys = [
  "constructor",
  "hasOwnProperty",
  "isPrototypeOf",
  "propertyIsEnumerable",
  "toLocaleString",
  "toString",
  "valueOf"
];
var objectKeys = Object.keys || function keys2(O) {
  return objectKeysInternal(O, enumBugKeys);
};
var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys3 = objectKeys(Properties);
  var length = keys3.length;
  var index = 0;
  var key;
  while (length > index) objectDefineProperty.f(O, key = keys3[index++], props[key]);
  return O;
};
var html = getBuiltIn("document", "documentElement");
var GT = ">";
var LT = "<";
var PROTOTYPE = "prototype";
var SCRIPT = "script";
var IE_PROTO = sharedKey("IE_PROTO");
var EmptyConstructor = function() {
};
var scriptTag = function(content) {
  return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
};
var NullProtoObjectViaActiveX = function(activeXDocument2) {
  activeXDocument2.write(scriptTag(""));
  activeXDocument2.close();
  var temp = activeXDocument2.parentWindow.Object;
  activeXDocument2 = null;
  return temp;
};
var NullProtoObjectViaIFrame = function() {
  var iframe = documentCreateElement("iframe");
  var JS = "java" + SCRIPT + ":";
  var iframeDocument;
  iframe.style.display = "none";
  html.appendChild(iframe);
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag("document.F=Object"));
  iframeDocument.close();
  return iframeDocument.F;
};
var activeXDocument;
var NullProtoObject = function() {
  try {
    activeXDocument = new ActiveXObject("htmlfile");
  } catch (error2) {
  }
  NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};
hiddenKeys[IE_PROTO] = true;
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === void 0 ? result : objectDefineProperties(result, Properties);
};
var correctPrototypeGetter = !fails(function() {
  function F() {
  }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});
var IE_PROTO$1 = sharedKey("IE_PROTO");
var Object$4 = global_1.Object;
var ObjectPrototype = Object$4.prototype;
var objectGetPrototypeOf = correctPrototypeGetter ? Object$4.getPrototypeOf : function(O) {
  var object = toObject(O);
  if (hasOwnProperty_1(object, IE_PROTO$1)) return object[IE_PROTO$1];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  }
  return object instanceof Object$4 ? ObjectPrototype : null;
};
var redefine = function(target, key, value, options) {
  if (options && options.enumerable) target[key] = value;
  else createNonEnumerableProperty(target, key, value);
};
var ITERATOR = wellKnownSymbol("iterator");
var BUGGY_SAFARI_ITERATORS = false;
var IteratorPrototype;
var PrototypeOfArrayIteratorPrototype;
var arrayIterator;
if ([].keys) {
  arrayIterator = [].keys();
  if (!("next" in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}
var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == void 0 || fails(function() {
  var test2 = {};
  return IteratorPrototype[ITERATOR].call(test2) !== test2;
});
if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (isPure) IteratorPrototype = objectCreate(IteratorPrototype);
if (!isCallable(IteratorPrototype[ITERATOR])) {
  redefine(IteratorPrototype, ITERATOR, function() {
    return this;
  });
}
var iteratorsCore = {
  IteratorPrototype,
  BUGGY_SAFARI_ITERATORS
};
var TO_STRING_TAG = wellKnownSymbol("toStringTag");
var test = {};
test[TO_STRING_TAG] = "z";
var toStringTagSupport = String(test) === "[object z]";
var TO_STRING_TAG$1 = wellKnownSymbol("toStringTag");
var Object$5 = global_1.Object;
var CORRECT_ARGUMENTS = classofRaw(/* @__PURE__ */ function() {
  return arguments;
}()) == "Arguments";
var tryGet = function(it, key) {
  try {
    return it[key];
  } catch (error2) {
  }
};
var classof = toStringTagSupport ? classofRaw : function(it) {
  var O, tag, result;
  return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = Object$5(it), TO_STRING_TAG$1)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == "Object" && isCallable(O.callee) ? "Arguments" : result;
};
var objectToString = toStringTagSupport ? {}.toString : function toString2() {
  return "[object " + classof(this) + "]";
};
var defineProperty$3 = objectDefineProperty.f;
var TO_STRING_TAG$2 = wellKnownSymbol("toStringTag");
var setToStringTag = function(it, TAG, STATIC, SET_METHOD) {
  if (it) {
    var target = STATIC ? it : it.prototype;
    if (!hasOwnProperty_1(target, TO_STRING_TAG$2)) {
      defineProperty$3(target, TO_STRING_TAG$2, { configurable: true, value: TAG });
    }
    if (SET_METHOD && !toStringTagSupport) {
      createNonEnumerableProperty(target, "toString", objectToString);
    }
  }
};
var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var returnThis = function() {
  return this;
};
var createIteratorConstructor = function(IteratorConstructor, NAME, next2) {
  var TO_STRING_TAG2 = NAME + " Iterator";
  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(1, next2) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG2, false, true);
  iterators[TO_STRING_TAG2] = returnThis;
  return IteratorConstructor;
};
var String$3 = global_1.String;
var TypeError$8 = global_1.TypeError;
var aPossiblePrototype = function(argument) {
  if (typeof argument == "object" || isCallable(argument)) return argument;
  throw TypeError$8("Can't set " + String$3(argument) + " as a prototype");
};
var objectSetPrototypeOf = Object.setPrototypeOf || ("__proto__" in {} ? function() {
  var CORRECT_SETTER = false;
  var test2 = {};
  var setter;
  try {
    setter = functionUncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set);
    setter(test2, []);
    CORRECT_SETTER = test2 instanceof Array;
  } catch (error2) {
  }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : void 0);
var PROPER_FUNCTION_NAME = functionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var IteratorPrototype$2 = iteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol("iterator");
var KEYS = "keys";
var VALUES = "values";
var ENTRIES = "entries";
var returnThis$1 = function() {
  return this;
};
var defineIterator = function(Iterable, NAME, IteratorConstructor, next2, DEFAULT, IS_SET, FORCED2) {
  createIteratorConstructor(IteratorConstructor, NAME, next2);
  var getIterationMethod = function(KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS:
        return function keys3() {
          return new IteratorConstructor(this, KIND);
        };
      case VALUES:
        return function values() {
          return new IteratorConstructor(this, KIND);
        };
      case ENTRIES:
        return function entries() {
          return new IteratorConstructor(this, KIND);
        };
    }
    return function() {
      return new IteratorConstructor(this);
    };
  };
  var TO_STRING_TAG2 = NAME + " Iterator";
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;
  if (anyNativeIterator) {
    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!isPure && objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {
        if (objectSetPrototypeOf) {
          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR$1])) {
          redefine(CurrentIteratorPrototype, ITERATOR$1, returnThis$1);
        }
      }
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG2, true, true);
      if (isPure) iterators[TO_STRING_TAG2] = returnThis$1;
    }
  }
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!isPure && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, "name", VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() {
        return functionCall(nativeIterator, this);
      };
    }
  }
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED2) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    }
    else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME }, methods);
  }
  if ((!isPure || FORCED2) && IterablePrototype[ITERATOR$1] !== defaultIterator) {
    redefine(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  iterators[NAME] = defaultIterator;
  return methods;
};
var ARRAY_ITERATOR = "Array Iterator";
var setInternalState = internalState.set;
var getInternalState = internalState.getterFor(ARRAY_ITERATOR);
var es_array_iterator = defineIterator(Array, "Array", function(iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated),
    // target
    index: 0,
    // next index
    kind
    // kind
  });
}, function() {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = void 0;
    return { value: void 0, done: true };
  }
  if (kind == "keys") return { value: index, done: false };
  if (kind == "values") return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, "values");
iterators.Arguments = iterators.Array;
var String$4 = global_1.String;
var toString_1 = function(argument) {
  if (classof(argument) === "Symbol") throw TypeError("Cannot convert a Symbol value to a string");
  return String$4(argument);
};
var charAt = functionUncurryThis("".charAt);
var charCodeAt = functionUncurryThis("".charCodeAt);
var stringSlice$1 = functionUncurryThis("".slice);
var createMethod$1 = function(CONVERT_TO_STRING) {
  return function($this, pos) {
    var S = toString_1(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? "" : void 0;
    first = charCodeAt(S, position);
    return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice$1(S, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
  };
};
var stringMultibyte = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod$1(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod$1(true)
};
var charAt$1 = stringMultibyte.charAt;
var STRING_ITERATOR = "String Iterator";
var setInternalState$1 = internalState.set;
var getInternalState$1 = internalState.getterFor(STRING_ITERATOR);
defineIterator(String, "String", function(iterated) {
  setInternalState$1(this, {
    type: STRING_ITERATOR,
    string: toString_1(iterated),
    index: 0
  });
}, function next() {
  var state = getInternalState$1(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: void 0, done: true };
  point = charAt$1(string, index);
  state.index += point.length;
  return { value: point, done: false };
});
var ITERATOR$2 = wellKnownSymbol("iterator");
var getIteratorMethod = function(it) {
  if (it != void 0) return getMethod(it, ITERATOR$2) || getMethod(it, "@@iterator") || iterators[classof(it)];
};
var TypeError$9 = global_1.TypeError;
var getIterator = function(argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(functionCall(iteratorMethod, argument));
  throw TypeError$9(tryToString(argument) + " is not iterable");
};
var getIterator_1 = getIterator;
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};
var TO_STRING_TAG$3 = wellKnownSymbol("toStringTag");
for (COLLECTION_NAME in domIterables) {
  Collection = global_1[COLLECTION_NAME];
  CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG$3) {
    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG$3, COLLECTION_NAME);
  }
  iterators[COLLECTION_NAME] = iterators.Array;
}
var Collection;
var CollectionPrototype;
var COLLECTION_NAME;
var getIterator$1 = getIterator_1;
var getIterator$2 = getIterator$1;
var getIterator$3 = getIterator$2;
var isArray = Array.isArray || function isArray2(argument) {
  return classofRaw(argument) == "Array";
};
_export({ target: "Array", stat: true }, {
  isArray
});
var isArray$1 = path.Array.isArray;
var isArray$2 = isArray$1;
var isArray$3 = isArray$2;
var getIteratorMethod_1 = getIteratorMethod;
var getIteratorMethod$1 = getIteratorMethod_1;
var getIteratorMethod$2 = getIteratorMethod$1;
var getIteratorMethod$3 = getIteratorMethod$2;
var createProperty = function(object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};
var noop = function() {
};
var empty = [];
var construct = getBuiltIn("Reflect", "construct");
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = functionUncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
var isConstructorModern = function(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error2) {
    return false;
  }
};
var isConstructorLegacy = function(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case "AsyncFunction":
    case "GeneratorFunction":
    case "AsyncGeneratorFunction":
      return false;
  }
  return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
};
var isConstructor = !construct || fails(function() {
  var called;
  return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
    called = true;
  }) || called;
}) ? isConstructorLegacy : isConstructorModern;
var SPECIES = wellKnownSymbol("species");
var Array$1 = global_1.Array;
var arraySpeciesConstructor = function(originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    if (isConstructor(C) && (C === Array$1 || isArray(C.prototype))) C = void 0;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = void 0;
    }
  }
  return C === void 0 ? Array$1 : C;
};
var arraySpeciesCreate = function(originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};
var SPECIES$1 = wellKnownSymbol("species");
var arrayMethodHasSpeciesSupport = function(METHOD_NAME) {
  return engineV8Version >= 51 || !fails(function() {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES$1] = function() {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};
var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
var MAX_SAFE_INTEGER = 9007199254740991;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = "Maximum allowed index exceeded";
var TypeError$10 = global_1.TypeError;
var IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function() {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});
var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");
var isConcatSpreadable = function(O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== void 0 ? !!spreadable : isArray(O);
};
var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;
_export({ target: "Array", proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike(E);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError$10(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError$10(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});
var hiddenKeys$1 = enumBugKeys.concat("length", "prototype");
var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal(O, hiddenKeys$1);
};
var objectGetOwnPropertyNames = {
  f: f$3
};
var arraySlice = functionUncurryThis([].slice);
var $getOwnPropertyNames = objectGetOwnPropertyNames.f;
var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function(it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error2) {
    return arraySlice(windowNames);
  }
};
var f$4 = function getOwnPropertyNames2(it) {
  return windowNames && classofRaw(it) == "Window" ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
};
var objectGetOwnPropertyNamesExternal = {
  f: f$4
};
var f$5 = Object.getOwnPropertySymbols;
var objectGetOwnPropertySymbols = {
  f: f$5
};
var f$6 = wellKnownSymbol;
var wellKnownSymbolWrapped = {
  f: f$6
};
var defineProperty$4 = objectDefineProperty.f;
var defineWellKnownSymbol = function(NAME) {
  var Symbol2 = path.Symbol || (path.Symbol = {});
  if (!hasOwnProperty_1(Symbol2, NAME)) defineProperty$4(Symbol2, NAME, {
    value: wellKnownSymbolWrapped.f(NAME)
  });
};
var push$1 = functionUncurryThis([].push);
var createMethod$2 = function(TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self2 = indexedObject(O);
    var boundFunction = functionBindContext(callbackfn, that);
    var length = lengthOfArrayLike(self2);
    var index = 0;
    var create5 = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create5($this, length) : IS_FILTER || IS_FILTER_REJECT ? create5($this, 0) : void 0;
    var value, result;
    for (; length > index; index++) if (NO_HOLES || index in self2) {
      value = self2[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result;
        else if (result) switch (TYPE) {
          case 3:
            return true;
          case 5:
            return value;
          case 6:
            return index;
          case 2:
            push$1(target, value);
        }
        else switch (TYPE) {
          case 4:
            return false;
          case 7:
            push$1(target, value);
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};
var arrayIteration = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod$2(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod$2(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod$2(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod$2(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod$2(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod$2(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod$2(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod$2(7)
};
var $forEach = arrayIteration.forEach;
var HIDDEN = sharedKey("hidden");
var SYMBOL = "Symbol";
var PROTOTYPE$1 = "prototype";
var TO_PRIMITIVE$1 = wellKnownSymbol("toPrimitive");
var setInternalState$2 = internalState.set;
var getInternalState$2 = internalState.getterFor(SYMBOL);
var ObjectPrototype$1 = Object[PROTOTYPE$1];
var $Symbol = global_1.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE$1];
var TypeError$11 = global_1.TypeError;
var QObject = global_1.QObject;
var $stringify = getBuiltIn("JSON", "stringify");
var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var nativeDefineProperty = objectDefineProperty.f;
var nativeGetOwnPropertyNames = objectGetOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = objectPropertyIsEnumerable.f;
var push$2 = functionUncurryThis([].push);
var AllSymbols = shared("symbols");
var ObjectPrototypeSymbols = shared("op-symbols");
var StringToSymbolRegistry = shared("string-to-symbol-registry");
var SymbolToStringRegistry = shared("symbol-to-string-registry");
var WellKnownSymbolsStore$1 = shared("wks");
var USE_SETTER = !QObject || !QObject[PROTOTYPE$1] || !QObject[PROTOTYPE$1].findChild;
var setSymbolDescriptor = descriptors && fails(function() {
  return objectCreate(nativeDefineProperty({}, "a", {
    get: function() {
      return nativeDefineProperty(this, "a", { value: 7 }).a;
    }
  })).a != 7;
}) ? function(O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype$1, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype$1[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$1) {
    nativeDefineProperty(ObjectPrototype$1, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;
var wrap = function(tag, description) {
  var symbol2 = AllSymbols[tag] = objectCreate(SymbolPrototype);
  setInternalState$2(symbol2, {
    type: SYMBOL,
    tag,
    description
  });
  if (!descriptors) symbol2.description = description;
  return symbol2;
};
var $defineProperty$1 = function defineProperty3(O, P, Attributes) {
  if (O === ObjectPrototype$1) $defineProperty$1(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (hasOwnProperty_1(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwnProperty_1(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwnProperty_1(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = objectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    }
    return setSymbolDescriptor(O, key, Attributes);
  }
  return nativeDefineProperty(O, key, Attributes);
};
var $defineProperties = function defineProperties2(O, Properties) {
  anObject(O);
  var properties2 = toIndexedObject(Properties);
  var keys3 = objectKeys(properties2).concat($getOwnPropertySymbols(properties2));
  $forEach(keys3, function(key) {
    if (!descriptors || functionCall($propertyIsEnumerable$1, properties2, key)) $defineProperty$1(O, key, properties2[key]);
  });
  return O;
};
var $create = function create2(O, Properties) {
  return Properties === void 0 ? objectCreate(O) : $defineProperties(objectCreate(O), Properties);
};
var $propertyIsEnumerable$1 = function propertyIsEnumerable2(V) {
  var P = toPropertyKey(V);
  var enumerable = functionCall(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype$1 && hasOwnProperty_1(AllSymbols, P) && !hasOwnProperty_1(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwnProperty_1(this, P) || !hasOwnProperty_1(AllSymbols, P) || hasOwnProperty_1(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};
var $getOwnPropertyDescriptor$1 = function getOwnPropertyDescriptor3(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype$1 && hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && hasOwnProperty_1(AllSymbols, key) && !(hasOwnProperty_1(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};
var $getOwnPropertyNames$1 = function getOwnPropertyNames3(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function(key) {
    if (!hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(hiddenKeys, key)) push$2(result, key);
  });
  return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$1;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function(key) {
    if (hasOwnProperty_1(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwnProperty_1(ObjectPrototype$1, key))) {
      push$2(result, AllSymbols[key]);
    }
  });
  return result;
};
if (!nativeSymbol) {
  $Symbol = function Symbol2() {
    if (objectIsPrototypeOf(SymbolPrototype, this)) throw TypeError$11("Symbol is not a constructor");
    var description = !arguments.length || arguments[0] === void 0 ? void 0 : toString_1(arguments[0]);
    var tag = uid(description);
    var setter = function(value) {
      if (this === ObjectPrototype$1) functionCall(setter, ObjectPrototypeSymbols, value);
      if (hasOwnProperty_1(this, HIDDEN) && hasOwnProperty_1(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (descriptors && USE_SETTER) setSymbolDescriptor(ObjectPrototype$1, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };
  SymbolPrototype = $Symbol[PROTOTYPE$1];
  redefine(SymbolPrototype, "toString", function toString3() {
    return getInternalState$2(this).tag;
  });
  redefine($Symbol, "withoutSetter", function(description) {
    return wrap(uid(description), description);
  });
  objectPropertyIsEnumerable.f = $propertyIsEnumerable$1;
  objectDefineProperty.f = $defineProperty$1;
  objectGetOwnPropertyDescriptor.f = $getOwnPropertyDescriptor$1;
  objectGetOwnPropertyNames.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames$1;
  objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;
  wellKnownSymbolWrapped.f = function(name) {
    return wrap(wellKnownSymbol(name), name);
  };
  if (descriptors) {
    nativeDefineProperty(SymbolPrototype, "description", {
      configurable: true,
      get: function description() {
        return getInternalState$2(this).description;
      }
    });
    if (!isPure) {
      redefine(ObjectPrototype$1, "propertyIsEnumerable", $propertyIsEnumerable$1, { unsafe: true });
    }
  }
}
_export({ global: true, wrap: true, forced: !nativeSymbol, sham: !nativeSymbol }, {
  Symbol: $Symbol
});
$forEach(objectKeys(WellKnownSymbolsStore$1), function(name) {
  defineWellKnownSymbol(name);
});
_export({ target: SYMBOL, stat: true, forced: !nativeSymbol }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  "for": function(key) {
    var string = toString_1(key);
    if (hasOwnProperty_1(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol2 = $Symbol(string);
    StringToSymbolRegistry[string] = symbol2;
    SymbolToStringRegistry[symbol2] = string;
    return symbol2;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError$11(sym + " is not a symbol");
    if (hasOwnProperty_1(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function() {
    USE_SETTER = true;
  },
  useSimple: function() {
    USE_SETTER = false;
  }
});
_export({ target: "Object", stat: true, forced: !nativeSymbol, sham: !descriptors }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty$1,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor$1
});
_export({ target: "Object", stat: true, forced: !nativeSymbol }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames$1,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});
_export({ target: "Object", stat: true, forced: fails(function() {
  objectGetOwnPropertySymbols.f(1);
}) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols2(it) {
    return objectGetOwnPropertySymbols.f(toObject(it));
  }
});
if ($stringify) {
  FORCED_JSON_STRINGIFY = !nativeSymbol || fails(function() {
    var symbol2 = $Symbol();
    return $stringify([symbol2]) != "[null]" || $stringify({ a: symbol2 }) != "{}" || $stringify(Object(symbol2)) != "{}";
  });
  _export({ target: "JSON", stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var $replacer = replacer;
      if (!isObject(replacer) && it === void 0 || isSymbol(it)) return;
      if (!isArray(replacer)) replacer = function(key, value) {
        if (isCallable($replacer)) value = functionCall($replacer, this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return functionApply($stringify, null, args);
    }
  });
}
var FORCED_JSON_STRINGIFY;
if (!SymbolPrototype[TO_PRIMITIVE$1]) {
  valueOf = SymbolPrototype.valueOf;
  redefine(SymbolPrototype, TO_PRIMITIVE$1, function(hint) {
    return functionCall(valueOf, this);
  });
}
var valueOf;
setToStringTag($Symbol, SYMBOL);
hiddenKeys[HIDDEN] = true;
defineWellKnownSymbol("asyncIterator");
defineWellKnownSymbol("hasInstance");
defineWellKnownSymbol("isConcatSpreadable");
defineWellKnownSymbol("iterator");
defineWellKnownSymbol("match");
defineWellKnownSymbol("matchAll");
defineWellKnownSymbol("replace");
defineWellKnownSymbol("search");
defineWellKnownSymbol("species");
defineWellKnownSymbol("split");
defineWellKnownSymbol("toPrimitive");
defineWellKnownSymbol("toStringTag");
defineWellKnownSymbol("unscopables");
setToStringTag(global_1.JSON, "JSON", true);
var symbol = path.Symbol;
var symbol$1 = symbol;
var symbol$2 = symbol$1;
var iteratorClose = function(iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, "return");
    if (!innerResult) {
      if (kind === "throw") throw value;
      return value;
    }
    innerResult = functionCall(innerResult, iterator);
  } catch (error2) {
    innerError = true;
    innerResult = error2;
  }
  if (kind === "throw") throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};
var callWithSafeIterationClosing = function(iterator, fn, value, ENTRIES2) {
  try {
    return ENTRIES2 ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error2) {
    iteratorClose(iterator, "throw", error2);
  }
};
var ITERATOR$3 = wellKnownSymbol("iterator");
var ArrayPrototype = Array.prototype;
var isArrayIteratorMethod = function(it) {
  return it !== void 0 && (iterators.Array === it || ArrayPrototype[ITERATOR$3] === it);
};
var Array$2 = global_1.Array;
var arrayFrom = function from(arrayLike) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
  var mapping = mapfn !== void 0;
  if (mapping) mapfn = functionBindContext(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next2, value;
  if (iteratorMethod && !(this == Array$2 && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next2 = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (; !(step = functionCall(next2, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : Array$2(length);
    for (; length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};
var ITERATOR$4 = wellKnownSymbol("iterator");
var SAFE_CLOSING = false;
var checkCorrectnessOfIteration = function(exec2, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$4] = function() {
      return {
        next: function() {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec2(object);
  } catch (error2) {
  }
  return ITERATION_SUPPORT;
};
var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function(iterable) {
});
_export({ target: "Array", stat: true, forced: INCORRECT_ITERATION }, {
  from: arrayFrom
});
var from_1 = path.Array.from;
var from_1$1 = from_1;
var from_1$2 = from_1$1;
var entryVirtual = function(CONSTRUCTOR) {
  return path[CONSTRUCTOR + "Prototype"];
};
var concat2 = entryVirtual("Array").concat;
var ArrayPrototype$1 = Array.prototype;
var concat$1 = function(it) {
  var own = it.concat;
  return it === ArrayPrototype$1 || objectIsPrototypeOf(ArrayPrototype$1, it) && own === ArrayPrototype$1.concat ? concat2 : own;
};
var concat$2 = concat$1;
var concat$3 = concat$2;
var arrayMethodIsStrict = function(METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function() {
    method.call(null, argument || function() {
      throw 1;
    }, 1);
  });
};
var $IndexOf = arrayIncludes.indexOf;
var un$IndexOf = functionUncurryThis([].indexOf);
var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict("indexOf");
_export({ target: "Array", proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
  indexOf: function indexOf2(searchElement) {
    var fromIndex = arguments.length > 1 ? arguments[1] : void 0;
    return NEGATIVE_ZERO ? un$IndexOf(this, searchElement, fromIndex) || 0 : $IndexOf(this, searchElement, fromIndex);
  }
});
var indexOf$1 = entryVirtual("Array").indexOf;
var ArrayPrototype$2 = Array.prototype;
var indexOf$2 = function(it) {
  var own = it.indexOf;
  return it === ArrayPrototype$2 || objectIsPrototypeOf(ArrayPrototype$2, it) && own === ArrayPrototype$2.indexOf ? indexOf$1 : own;
};
var indexOf$3 = indexOf$2;
var indexOf$4 = indexOf$3;
_export({ target: "Object", stat: true, sham: !descriptors }, {
  create: objectCreate
});
var Object$6 = path.Object;
var create3 = function create4(P, D) {
  return Object$6.create(P, D);
};
var create$1 = create3;
var create$2 = create$1;
var isArray$4 = isArray$2;
var isArray$5 = isArray$4;
var arrayWithHoles = createCommonjsModule(function(module) {
  function _arrayWithHoles(arr) {
    if (isArray$5(arr)) return arr;
  }
  module.exports = _arrayWithHoles;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(arrayWithHoles);
defineWellKnownSymbol("asyncDispose");
defineWellKnownSymbol("dispose");
defineWellKnownSymbol("matcher");
defineWellKnownSymbol("metadata");
defineWellKnownSymbol("observable");
defineWellKnownSymbol("patternMatch");
defineWellKnownSymbol("replaceAll");
var symbol$3 = symbol$1;
var symbol$4 = symbol$3;
var iterableToArrayLimit = createCommonjsModule(function(module) {
  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof symbol$4 !== "undefined" && getIteratorMethod$3(arr) || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  module.exports = _iterableToArrayLimit;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(iterableToArrayLimit);
var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");
var SPECIES$2 = wellKnownSymbol("species");
var Array$3 = global_1.Array;
var max$1 = Math.max;
_export({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      if (isConstructor(Constructor) && (Constructor === Array$3 || isArray(Constructor.prototype))) {
        Constructor = void 0;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES$2];
        if (Constructor === null) Constructor = void 0;
      }
      if (Constructor === Array$3 || Constructor === void 0) {
        return arraySlice(O, k, fin);
      }
    }
    result = new (Constructor === void 0 ? Array$3 : Constructor)(max$1(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});
var slice2 = entryVirtual("Array").slice;
var ArrayPrototype$3 = Array.prototype;
var slice$1 = function(it) {
  var own = it.slice;
  return it === ArrayPrototype$3 || objectIsPrototypeOf(ArrayPrototype$3, it) && own === ArrayPrototype$3.slice ? slice2 : own;
};
var slice$2 = slice$1;
var slice$3 = slice$2;
var slice$4 = slice$3;
var from_1$3 = from_1$1;
var from_1$4 = from_1$3;
var arrayLikeToArray = createCommonjsModule(function(module) {
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  module.exports = _arrayLikeToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(arrayLikeToArray);
var unsupportedIterableToArray = createCommonjsModule(function(module) {
  function _unsupportedIterableToArray(o, minLen) {
    var _context;
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = slice$4(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return from_1$4(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
  }
  module.exports = _unsupportedIterableToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(unsupportedIterableToArray);
var nonIterableRest = createCommonjsModule(function(module) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  module.exports = _nonIterableRest;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(nonIterableRest);
var slicedToArray = createCommonjsModule(function(module) {
  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
  }
  module.exports = _slicedToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
});
unwrapExports(slicedToArray);
var $forEach$1 = arrayIteration.forEach;
var STRICT_METHOD$1 = arrayMethodIsStrict("forEach");
var arrayForEach = !STRICT_METHOD$1 ? function forEach(callbackfn) {
  return $forEach$1(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
} : [].forEach;
_export({ target: "Array", proto: true, forced: [].forEach != arrayForEach }, {
  forEach: arrayForEach
});
var forEach2 = entryVirtual("Array").forEach;
var forEach$1 = forEach2;
var ArrayPrototype$4 = Array.prototype;
var DOMIterables = {
  DOMTokenList: true,
  NodeList: true
};
var forEach$2 = function(it) {
  var own = it.forEach;
  return it === ArrayPrototype$4 || objectIsPrototypeOf(ArrayPrototype$4, it) && own === ArrayPrototype$4.forEach || hasOwnProperty_1(DOMIterables, classof(it)) ? forEach$1 : own;
};
var forEach$3 = forEach$2;
var $includes = arrayIncludes.includes;
_export({ target: "Array", proto: true }, {
  includes: function includes(el) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
  }
});
var includes2 = entryVirtual("Array").includes;
var MATCH = wellKnownSymbol("match");
var isRegexp = function(it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== void 0 ? !!isRegExp : classofRaw(it) == "RegExp");
};
var TypeError$12 = global_1.TypeError;
var notARegexp = function(it) {
  if (isRegexp(it)) {
    throw TypeError$12("The method doesn't accept regular expressions");
  }
  return it;
};
var MATCH$1 = wellKnownSymbol("match");
var correctIsRegexpLogic = function(METHOD_NAME) {
  var regexp = /./;
  try {
    "/./"[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH$1] = false;
      return "/./"[METHOD_NAME](regexp);
    } catch (error2) {
    }
  }
  return false;
};
var stringIndexOf = functionUncurryThis("".indexOf);
_export({ target: "String", proto: true, forced: !correctIsRegexpLogic("includes") }, {
  includes: function includes3(searchString) {
    return !!~stringIndexOf(
      toString_1(requireObjectCoercible(this)),
      toString_1(notARegexp(searchString)),
      arguments.length > 1 ? arguments[1] : void 0
    );
  }
});
var includes$1 = entryVirtual("String").includes;
var ArrayPrototype$5 = Array.prototype;
var StringPrototype = String.prototype;
var includes$2 = function(it) {
  var own = it.includes;
  if (it === ArrayPrototype$5 || objectIsPrototypeOf(ArrayPrototype$5, it) && own === ArrayPrototype$5.includes) return includes2;
  if (typeof it == "string" || it === StringPrototype || objectIsPrototypeOf(StringPrototype, it) && own === StringPrototype.includes) {
    return includes$1;
  }
  return own;
};
var includes$3 = includes$2;
var includes$4 = includes$3;
var whitespaces = "	\n\v\f\r                　\u2028\u2029\uFEFF";
var replace = functionUncurryThis("".replace);
var whitespace = "[" + whitespaces + "]";
var ltrim = RegExp("^" + whitespace + whitespace + "*");
var rtrim = RegExp(whitespace + whitespace + "*$");
var createMethod$3 = function(TYPE) {
  return function($this) {
    var string = toString_1(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, "");
    if (TYPE & 2) string = replace(string, rtrim, "");
    return string;
  };
};
var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod$3(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod$3(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod$3(3)
};
var trim = stringTrim.trim;
var $parseInt = global_1.parseInt;
var Symbol$2 = global_1.Symbol;
var ITERATOR$5 = Symbol$2 && Symbol$2.iterator;
var hex = /^[+-]?0x/i;
var exec$1 = functionUncurryThis(hex.exec);
var FORCED$1 = $parseInt(whitespaces + "08") !== 8 || $parseInt(whitespaces + "0x16") !== 22 || ITERATOR$5 && !fails(function() {
  $parseInt(Object(ITERATOR$5));
});
var numberParseInt = FORCED$1 ? function parseInt2(string, radix) {
  var S = trim(toString_1(string));
  return $parseInt(S, radix >>> 0 || (exec$1(hex, S) ? 16 : 10));
} : $parseInt;
_export({ global: true, forced: parseInt != numberParseInt }, {
  parseInt: numberParseInt
});
var _parseInt = path.parseInt;
var _parseInt$1 = _parseInt;
var _parseInt$2 = _parseInt$1;
var slice$5 = slice$2;
var floor$2 = Math.floor;
var mergeSort = function(array, comparefn) {
  var length = array.length;
  var middle = floor$2(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};
var insertionSort = function(array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;
  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  }
  return array;
};
var merge = function(array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;
  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
  }
  return array;
};
var arraySort = mergeSort;
var firefox = engineUserAgent.match(/firefox\/(\d+)/i);
var engineFfVersion = !!firefox && +firefox[1];
var engineIsIeOrEdge = /MSIE|Trident/.test(engineUserAgent);
var webkit = engineUserAgent.match(/AppleWebKit\/(\d+)\./);
var engineWebkitVersion = !!webkit && +webkit[1];
var test$1 = [];
var un$Sort = functionUncurryThis(test$1.sort);
var push$3 = functionUncurryThis(test$1.push);
var FAILS_ON_UNDEFINED = fails(function() {
  test$1.sort(void 0);
});
var FAILS_ON_NULL = fails(function() {
  test$1.sort(null);
});
var STRICT_METHOD$2 = arrayMethodIsStrict("sort");
var STABLE_SORT = !fails(function() {
  if (engineV8Version) return engineV8Version < 70;
  if (engineFfVersion && engineFfVersion > 3) return;
  if (engineIsIeOrEdge) return true;
  if (engineWebkitVersion) return engineWebkitVersion < 603;
  var result = "";
  var code, chr, value, index;
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);
    switch (code) {
      case 66:
      case 69:
      case 70:
      case 72:
        value = 3;
        break;
      case 68:
      case 71:
        value = 4;
        break;
      default:
        value = 2;
    }
    for (index = 0; index < 47; index++) {
      test$1.push({ k: chr + index, v: value });
    }
  }
  test$1.sort(function(a, b) {
    return b.v - a.v;
  });
  for (index = 0; index < test$1.length; index++) {
    chr = test$1[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }
  return result !== "DGBEFHACIJK";
});
var FORCED$2 = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$2 || !STABLE_SORT;
var getSortCompare = function(comparefn) {
  return function(x, y) {
    if (y === void 0) return -1;
    if (x === void 0) return 1;
    if (comparefn !== void 0) return +comparefn(x, y) || 0;
    return toString_1(x) > toString_1(y) ? 1 : -1;
  };
};
_export({ target: "Array", proto: true, forced: FORCED$2 }, {
  sort: function sort(comparefn) {
    if (comparefn !== void 0) aCallable(comparefn);
    var array = toObject(this);
    if (STABLE_SORT) return comparefn === void 0 ? un$Sort(array) : un$Sort(array, comparefn);
    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;
    for (index = 0; index < arrayLength; index++) {
      if (index in array) push$3(items, array[index]);
    }
    arraySort(items, getSortCompare(comparefn));
    itemsLength = items.length;
    index = 0;
    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) delete array[index++];
    return array;
  }
});
var sort2 = entryVirtual("Array").sort;
var ArrayPrototype$6 = Array.prototype;
var sort$1 = function(it) {
  var own = it.sort;
  return it === ArrayPrototype$6 || objectIsPrototypeOf(ArrayPrototype$6, it) && own === ArrayPrototype$6.sort ? sort2 : own;
};
var sort$2 = sort$1;
var sort$3 = sort$2;
var regexpFlags = function() {
  var that = anObject(this);
  var result = "";
  if (that.global) result += "g";
  if (that.ignoreCase) result += "i";
  if (that.multiline) result += "m";
  if (that.dotAll) result += "s";
  if (that.unicode) result += "u";
  if (that.sticky) result += "y";
  return result;
};
var flags = functionUncurryThis(regexpFlags);
var RegExpPrototype = RegExp.prototype;
var flags_1 = function(it) {
  return it === RegExpPrototype || objectIsPrototypeOf(RegExpPrototype, it) ? flags(it) : it.flags;
};
var flags$1 = flags_1;
var flags$2 = flags$1;
var xregexp = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _getIterator2 = interopRequireDefault(getIterator$3);
  var _isArray = interopRequireDefault(isArray$3);
  var _getIteratorMethod2 = interopRequireDefault(getIteratorMethod$3);
  var _symbol = interopRequireDefault(symbol$2);
  var _from = interopRequireDefault(from_1$2);
  var _concat = interopRequireDefault(concat$3);
  var _indexOf = interopRequireDefault(indexOf$4);
  var _create = interopRequireDefault(create$2);
  var _slicedToArray2 = interopRequireDefault(slicedToArray);
  var _forEach = interopRequireDefault(forEach$3);
  var _includes = interopRequireDefault(includes$4);
  var _parseInt2 = interopRequireDefault(_parseInt$2);
  var _slice = interopRequireDefault(slice$5);
  var _sort = interopRequireDefault(sort$3);
  var _flags = interopRequireDefault(flags$2);
  function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof _symbol["default"] === "undefined" || (0, _getIteratorMethod2["default"])(o) == null) {
      if ((0, _isArray["default"])(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F2() {
        };
        return { s: F, n: function n() {
          if (i >= o.length) return { done: true };
          return { done: false, value: o[i++] };
        }, e: function e(_e) {
          throw _e;
        }, f: F };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return { s: function s() {
      it = (0, _getIterator2["default"])(o);
    }, n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    }, e: function e(_e2) {
      didErr = true;
      err = _e2;
    }, f: function f2() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    } };
  }
  function _unsupportedIterableToArray(o, minLen) {
    var _context9;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = (0, _slice["default"])(_context9 = Object.prototype.toString.call(o)).call(_context9, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return (0, _from["default"])(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  var REGEX_DATA = "xregexp";
  var features = {
    astral: false,
    namespacing: false
  };
  var nativ = {
    exec: RegExp.prototype.exec,
    test: RegExp.prototype.test,
    match: String.prototype.match,
    replace: String.prototype.replace,
    split: String.prototype.split
  };
  var fixed = {};
  var regexCache = {};
  var patternCache = {};
  var tokens = [];
  var defaultScope = "default";
  var classScope = "class";
  var nativeTokens = {
    // Any native multicharacter token in default scope, or any single character
    "default": /\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,
    // Any native multicharacter token in character class scope, or any single character
    "class": /\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/
  };
  var replacementToken = /\$(?:{([\w$]+)}|<([\w$]+)>|(\d\d?|[\s\S]))/g;
  var correctExecNpcg = nativ.exec.call(/()??/, "")[1] === void 0;
  var hasFlagsProp = (0, _flags["default"])(/x/) !== void 0;
  var _ref = {}, toString3 = _ref.toString;
  function hasNativeFlag(flag) {
    var isSupported = true;
    try {
      if (flag === "y") {
        var gy = /* @__PURE__ */ function() {
          return "gy";
        }();
        var incompleteY = ".a".replace(new RegExp("a", gy), ".") === "..";
        if (incompleteY) {
          isSupported = false;
        }
      }
    } catch (exception) {
      isSupported = false;
    }
    return isSupported;
  }
  var hasNativeU = hasNativeFlag("u");
  var hasNativeY = hasNativeFlag("y");
  var registeredFlags = {
    g: true,
    i: true,
    m: true,
    u: hasNativeU,
    y: hasNativeY
  };
  function augment(regex, captureNames, xSource, xFlags, isInternalOnly) {
    var _context;
    regex[REGEX_DATA] = {
      captureNames
    };
    if (isInternalOnly) {
      return regex;
    }
    if (regex.__proto__) {
      regex.__proto__ = XRegExp.prototype;
    } else {
      for (var p in XRegExp.prototype) {
        regex[p] = XRegExp.prototype[p];
      }
    }
    regex[REGEX_DATA].source = xSource;
    regex[REGEX_DATA].flags = xFlags ? (0, _sort["default"])(_context = xFlags.split("")).call(_context).join("") : xFlags;
    return regex;
  }
  function clipDuplicates(str) {
    return nativ.replace.call(str, /([\s\S])(?=[\s\S]*\1)/g, "");
  }
  function copyRegex(regex, options) {
    var _context2;
    if (!XRegExp.isRegExp(regex)) {
      throw new TypeError("Type RegExp expected");
    }
    var xData = regex[REGEX_DATA] || {};
    var flags2 = getNativeFlags(regex);
    var flagsToAdd = "";
    var flagsToRemove = "";
    var xregexpSource = null;
    var xregexpFlags = null;
    options = options || {};
    if (options.removeG) {
      flagsToRemove += "g";
    }
    if (options.removeY) {
      flagsToRemove += "y";
    }
    if (flagsToRemove) {
      flags2 = nativ.replace.call(flags2, new RegExp("[".concat(flagsToRemove, "]+"), "g"), "");
    }
    if (options.addG) {
      flagsToAdd += "g";
    }
    if (options.addY) {
      flagsToAdd += "y";
    }
    if (flagsToAdd) {
      flags2 = clipDuplicates(flags2 + flagsToAdd);
    }
    if (!options.isInternalOnly) {
      if (xData.source !== void 0) {
        xregexpSource = xData.source;
      }
      if ((0, _flags["default"])(xData) != null) {
        xregexpFlags = flagsToAdd ? clipDuplicates((0, _flags["default"])(xData) + flagsToAdd) : (0, _flags["default"])(xData);
      }
    }
    regex = augment(new RegExp(options.source || regex.source, flags2), hasNamedCapture(regex) ? (0, _slice["default"])(_context2 = xData.captureNames).call(_context2, 0) : null, xregexpSource, xregexpFlags, options.isInternalOnly);
    return regex;
  }
  function dec(hex3) {
    return (0, _parseInt2["default"])(hex3, 16);
  }
  function getContextualTokenSeparator(match2, scope, flags2) {
    if (
      // No need to separate tokens if at the beginning or end of a group
      match2.input[match2.index - 1] === "(" || match2.input[match2.index + match2[0].length] === ")" || // No need to separate tokens if before or after a `|`
      match2.input[match2.index - 1] === "|" || match2.input[match2.index + match2[0].length] === "|" || // No need to separate tokens if at the beginning or end of the pattern
      match2.index < 1 || match2.index + match2[0].length >= match2.input.length || // No need to separate tokens if at the beginning of a noncapturing group or lookahead.
      // The way this is written relies on:
      // - The search regex matching only 3-char strings.
      // - Although `substr` gives chars from the end of the string if given a negative index,
      //   the resulting substring will be too short to match. Ex: `'abcd'.substr(-1, 3) === 'd'`
      nativ.test.call(/^\(\?[:=!]/, match2.input.substr(match2.index - 3, 3)) || // Avoid separating tokens when the following token is a quantifier
      isQuantifierNext(match2.input, match2.index + match2[0].length, flags2)
    ) {
      return "";
    }
    return "(?:)";
  }
  function getNativeFlags(regex) {
    return hasFlagsProp ? (0, _flags["default"])(regex) : (
      // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation
      // with an empty string) allows this to continue working predictably when
      // `XRegExp.proptotype.toString` is overridden
      nativ.exec.call(/\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1]
    );
  }
  function hasNamedCapture(regex) {
    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);
  }
  function hex2(dec2) {
    return (0, _parseInt2["default"])(dec2, 10).toString(16);
  }
  function isQuantifierNext(pattern, pos, flags2) {
    return nativ.test.call((0, _includes["default"])(flags2).call(flags2, "x") ? (
      // Ignore any leading whitespace, line comments, and inline comments
      /^(?:\s|#[^#\n]*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/
    ) : (
      // Ignore any leading inline comments
      /^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/
    ), (0, _slice["default"])(pattern).call(pattern, pos));
  }
  function isType(value, type) {
    return toString3.call(value) === "[object ".concat(type, "]");
  }
  function pad4(str) {
    while (str.length < 4) {
      str = "0".concat(str);
    }
    return str;
  }
  function prepareFlags(pattern, flags2) {
    if (clipDuplicates(flags2) !== flags2) {
      throw new SyntaxError("Invalid duplicate regex flag ".concat(flags2));
    }
    pattern = nativ.replace.call(pattern, /^\(\?([\w$]+)\)/, function($0, $1) {
      if (nativ.test.call(/[gy]/, $1)) {
        throw new SyntaxError("Cannot use flag g or y in mode modifier ".concat($0));
      }
      flags2 = clipDuplicates(flags2 + $1);
      return "";
    });
    var _iterator = _createForOfIteratorHelper(flags2), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var flag = _step.value;
        if (!registeredFlags[flag]) {
          throw new SyntaxError("Unknown regex flag ".concat(flag));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return {
      pattern,
      flags: flags2
    };
  }
  function prepareOptions(value) {
    var options = {};
    if (isType(value, "String")) {
      (0, _forEach["default"])(XRegExp).call(XRegExp, value, /[^\s,]+/, function(match2) {
        options[match2] = true;
      });
      return options;
    }
    return value;
  }
  function registerFlag(flag) {
    if (!/^[\w$]$/.test(flag)) {
      throw new Error("Flag must be a single character A-Za-z0-9_$");
    }
    registeredFlags[flag] = true;
  }
  function runTokens(pattern, flags2, pos, scope, context) {
    var i = tokens.length;
    var leadChar = pattern[pos];
    var result = null;
    var match2;
    var t;
    while (i--) {
      t = tokens[i];
      if (t.leadChar && t.leadChar !== leadChar || t.scope !== scope && t.scope !== "all" || t.flag && !(0, _includes["default"])(flags2).call(flags2, t.flag)) {
        continue;
      }
      match2 = XRegExp.exec(pattern, t.regex, pos, "sticky");
      if (match2) {
        result = {
          matchLength: match2[0].length,
          output: t.handler.call(context, match2, scope, flags2),
          reparse: t.reparse
        };
        break;
      }
    }
    return result;
  }
  function setAstral(on) {
    features.astral = on;
  }
  function setNamespacing(on) {
    features.namespacing = on;
  }
  function toObject2(value) {
    if (value == null) {
      throw new TypeError("Cannot convert null or undefined to object");
    }
    return value;
  }
  function XRegExp(pattern, flags2) {
    if (XRegExp.isRegExp(pattern)) {
      if (flags2 !== void 0) {
        throw new TypeError("Cannot supply flags when copying a RegExp");
      }
      return copyRegex(pattern);
    }
    pattern = pattern === void 0 ? "" : String(pattern);
    flags2 = flags2 === void 0 ? "" : String(flags2);
    if (XRegExp.isInstalled("astral") && !(0, _includes["default"])(flags2).call(flags2, "A")) {
      flags2 += "A";
    }
    if (!patternCache[pattern]) {
      patternCache[pattern] = {};
    }
    if (!patternCache[pattern][flags2]) {
      var context = {
        hasNamedCapture: false,
        captureNames: []
      };
      var scope = defaultScope;
      var output = "";
      var pos = 0;
      var result;
      var applied = prepareFlags(pattern, flags2);
      var appliedPattern = applied.pattern;
      var appliedFlags = (0, _flags["default"])(applied);
      while (pos < appliedPattern.length) {
        do {
          result = runTokens(appliedPattern, appliedFlags, pos, scope, context);
          if (result && result.reparse) {
            appliedPattern = (0, _slice["default"])(appliedPattern).call(appliedPattern, 0, pos) + result.output + (0, _slice["default"])(appliedPattern).call(appliedPattern, pos + result.matchLength);
          }
        } while (result && result.reparse);
        if (result) {
          output += result.output;
          pos += result.matchLength || 1;
        } else {
          var _XRegExp$exec = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, "sticky"), _XRegExp$exec2 = (0, _slicedToArray2["default"])(_XRegExp$exec, 1), token = _XRegExp$exec2[0];
          output += token;
          pos += token.length;
          if (token === "[" && scope === defaultScope) {
            scope = classScope;
          } else if (token === "]" && scope === classScope) {
            scope = defaultScope;
          }
        }
      }
      patternCache[pattern][flags2] = {
        // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty
        // groups are sometimes inserted during regex transpilation in order to keep tokens
        // separated. However, more than one empty group in a row is never needed.
        pattern: nativ.replace.call(output, /(?:\(\?:\))+/g, "(?:)"),
        // Strip all but native flags
        flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ""),
        // `context.captureNames` has an item for each capturing group, even if unnamed
        captures: context.hasNamedCapture ? context.captureNames : null
      };
    }
    var generated = patternCache[pattern][flags2];
    return augment(new RegExp(generated.pattern, (0, _flags["default"])(generated)), generated.captures, pattern, flags2);
  }
  XRegExp.prototype = /(?:)/;
  XRegExp.version = "4.4.1";
  XRegExp._clipDuplicates = clipDuplicates;
  XRegExp._hasNativeFlag = hasNativeFlag;
  XRegExp._dec = dec;
  XRegExp._hex = hex2;
  XRegExp._pad4 = pad4;
  XRegExp.addToken = function(regex, handler, options) {
    options = options || {};
    var _options = options, optionalFlags = _options.optionalFlags;
    if (options.flag) {
      registerFlag(options.flag);
    }
    if (optionalFlags) {
      optionalFlags = nativ.split.call(optionalFlags, "");
      var _iterator2 = _createForOfIteratorHelper(optionalFlags), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var flag = _step2.value;
          registerFlag(flag);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    tokens.push({
      regex: copyRegex(regex, {
        addG: true,
        addY: hasNativeY,
        isInternalOnly: true
      }),
      handler,
      scope: options.scope || defaultScope,
      flag: options.flag,
      reparse: options.reparse,
      leadChar: options.leadChar
    });
    XRegExp.cache.flush("patterns");
  };
  XRegExp.cache = function(pattern, flags2) {
    if (!regexCache[pattern]) {
      regexCache[pattern] = {};
    }
    return regexCache[pattern][flags2] || (regexCache[pattern][flags2] = XRegExp(pattern, flags2));
  };
  XRegExp.cache.flush = function(cacheName) {
    if (cacheName === "patterns") {
      patternCache = {};
    } else {
      regexCache = {};
    }
  };
  XRegExp.escape = function(str) {
    return nativ.replace.call(toObject2(str), /[-\[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
  };
  XRegExp.exec = function(str, regex, pos, sticky) {
    var cacheKey = "g";
    var addY = false;
    var fakeY = false;
    var match2;
    addY = hasNativeY && !!(sticky || regex.sticky && sticky !== false);
    if (addY) {
      cacheKey += "y";
    } else if (sticky) {
      fakeY = true;
      cacheKey += "FakeY";
    }
    regex[REGEX_DATA] = regex[REGEX_DATA] || {};
    var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {
      addG: true,
      addY,
      source: fakeY ? "".concat(regex.source, "|()") : void 0,
      removeY: sticky === false,
      isInternalOnly: true
    }));
    pos = pos || 0;
    r2.lastIndex = pos;
    match2 = fixed.exec.call(r2, str);
    if (fakeY && match2 && match2.pop() === "") {
      match2 = null;
    }
    if (regex.global) {
      regex.lastIndex = match2 ? r2.lastIndex : 0;
    }
    return match2;
  };
  XRegExp.forEach = function(str, regex, callback) {
    var pos = 0;
    var i = -1;
    var match2;
    while (match2 = XRegExp.exec(str, regex, pos)) {
      callback(match2, ++i, str, regex);
      pos = match2.index + (match2[0].length || 1);
    }
  };
  XRegExp.globalize = function(regex) {
    return copyRegex(regex, {
      addG: true
    });
  };
  XRegExp.install = function(options) {
    options = prepareOptions(options);
    if (!features.astral && options.astral) {
      setAstral(true);
    }
    if (!features.namespacing && options.namespacing) {
      setNamespacing(true);
    }
  };
  XRegExp.isInstalled = function(feature) {
    return !!features[feature];
  };
  XRegExp.isRegExp = function(value) {
    return toString3.call(value) === "[object RegExp]";
  };
  XRegExp.match = function(str, regex, scope) {
    var global2 = regex.global && scope !== "one" || scope === "all";
    var cacheKey = (global2 ? "g" : "") + (regex.sticky ? "y" : "") || "noGY";
    regex[REGEX_DATA] = regex[REGEX_DATA] || {};
    var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {
      addG: !!global2,
      removeG: scope === "one",
      isInternalOnly: true
    }));
    var result = nativ.match.call(toObject2(str), r2);
    if (regex.global) {
      regex.lastIndex = scope === "one" && result ? (
        // Can't use `r2.lastIndex` since `r2` is nonglobal in this case
        result.index + result[0].length
      ) : 0;
    }
    return global2 ? result || [] : result && result[0];
  };
  XRegExp.matchChain = function(str, chain) {
    return function recurseChain(values, level) {
      var item = chain[level].regex ? chain[level] : {
        regex: chain[level]
      };
      var matches = [];
      function addMatch(match2) {
        if (item.backref) {
          var ERR_UNDEFINED_GROUP = "Backreference to undefined group: ".concat(item.backref);
          var isNamedBackref = isNaN(item.backref);
          if (isNamedBackref && XRegExp.isInstalled("namespacing")) {
            if (!(item.backref in match2.groups)) {
              throw new ReferenceError(ERR_UNDEFINED_GROUP);
            }
          } else if (!match2.hasOwnProperty(item.backref)) {
            throw new ReferenceError(ERR_UNDEFINED_GROUP);
          }
          var backrefValue = isNamedBackref && XRegExp.isInstalled("namespacing") ? match2.groups[item.backref] : match2[item.backref];
          matches.push(backrefValue || "");
        } else {
          matches.push(match2[0]);
        }
      }
      var _iterator3 = _createForOfIteratorHelper(values), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var value = _step3.value;
          (0, _forEach["default"])(XRegExp).call(XRegExp, value, item.regex, addMatch);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return level === chain.length - 1 || !matches.length ? matches : recurseChain(matches, level + 1);
    }([str], 0);
  };
  XRegExp.replace = function(str, search, replacement2, scope) {
    var isRegex = XRegExp.isRegExp(search);
    var global2 = search.global && scope !== "one" || scope === "all";
    var cacheKey = (global2 ? "g" : "") + (search.sticky ? "y" : "") || "noGY";
    var s2 = search;
    if (isRegex) {
      search[REGEX_DATA] = search[REGEX_DATA] || {};
      s2 = search[REGEX_DATA][cacheKey] || (search[REGEX_DATA][cacheKey] = copyRegex(search, {
        addG: !!global2,
        removeG: scope === "one",
        isInternalOnly: true
      }));
    } else if (global2) {
      s2 = new RegExp(XRegExp.escape(String(search)), "g");
    }
    var result = fixed.replace.call(toObject2(str), s2, replacement2);
    if (isRegex && search.global) {
      search.lastIndex = 0;
    }
    return result;
  };
  XRegExp.replaceEach = function(str, replacements) {
    var _iterator4 = _createForOfIteratorHelper(replacements), _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
        var r = _step4.value;
        str = XRegExp.replace(str, r[0], r[1], r[2]);
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return str;
  };
  XRegExp.split = function(str, separator2, limit) {
    return fixed.split.call(toObject2(str), separator2, limit);
  };
  XRegExp.test = function(str, regex, pos, sticky) {
    return !!XRegExp.exec(str, regex, pos, sticky);
  };
  XRegExp.uninstall = function(options) {
    options = prepareOptions(options);
    if (features.astral && options.astral) {
      setAstral(false);
    }
    if (features.namespacing && options.namespacing) {
      setNamespacing(false);
    }
  };
  XRegExp.union = function(patterns, flags2, options) {
    options = options || {};
    var conjunction = options.conjunction || "or";
    var numCaptures = 0;
    var numPriorCaptures;
    var captureNames;
    function rewrite(match2, paren, backref) {
      var name = captureNames[numCaptures - numPriorCaptures];
      if (paren) {
        ++numCaptures;
        if (name) {
          return "(?<".concat(name, ">");
        }
      } else if (backref) {
        return "\\".concat(+backref + numPriorCaptures);
      }
      return match2;
    }
    if (!(isType(patterns, "Array") && patterns.length)) {
      throw new TypeError("Must provide a nonempty array of patterns to merge");
    }
    var parts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g;
    var output = [];
    var _iterator5 = _createForOfIteratorHelper(patterns), _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
        var pattern = _step5.value;
        if (XRegExp.isRegExp(pattern)) {
          numPriorCaptures = numCaptures;
          captureNames = pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames || [];
          output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));
        } else {
          output.push(XRegExp.escape(pattern));
        }
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    var separator2 = conjunction === "none" ? "" : "|";
    return XRegExp(output.join(separator2), flags2);
  };
  fixed.exec = function(str) {
    var origLastIndex = this.lastIndex;
    var match2 = nativ.exec.apply(this, arguments);
    if (match2) {
      if (!correctExecNpcg && match2.length > 1 && (0, _includes["default"])(match2).call(match2, "")) {
        var _context3;
        var r2 = copyRegex(this, {
          removeG: true,
          isInternalOnly: true
        });
        nativ.replace.call((0, _slice["default"])(_context3 = String(str)).call(_context3, match2.index), r2, function() {
          var len = arguments.length;
          for (var i2 = 1; i2 < len - 2; ++i2) {
            if ((i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2]) === void 0) {
              match2[i2] = void 0;
            }
          }
        });
      }
      var groupsObject = match2;
      if (XRegExp.isInstalled("namespacing")) {
        match2.groups = (0, _create["default"])(null);
        groupsObject = match2.groups;
      }
      if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {
        for (var i = 1; i < match2.length; ++i) {
          var name = this[REGEX_DATA].captureNames[i - 1];
          if (name) {
            groupsObject[name] = match2[i];
          }
        }
      }
      if (this.global && !match2[0].length && this.lastIndex > match2.index) {
        this.lastIndex = match2.index;
      }
    }
    if (!this.global) {
      this.lastIndex = origLastIndex;
    }
    return match2;
  };
  fixed.test = function(str) {
    return !!fixed.exec.call(this, str);
  };
  fixed.match = function(regex) {
    if (!XRegExp.isRegExp(regex)) {
      regex = new RegExp(regex);
    } else if (regex.global) {
      var result = nativ.match.apply(this, arguments);
      regex.lastIndex = 0;
      return result;
    }
    return fixed.exec.call(regex, toObject2(this));
  };
  fixed.replace = function(search, replacement2) {
    var isRegex = XRegExp.isRegExp(search);
    var origLastIndex;
    var captureNames;
    var result;
    if (isRegex) {
      if (search[REGEX_DATA]) {
        captureNames = search[REGEX_DATA].captureNames;
      }
      origLastIndex = search.lastIndex;
    } else {
      search += "";
    }
    if (isType(replacement2, "Function")) {
      result = nativ.replace.call(String(this), search, function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (captureNames) {
          var groupsObject;
          if (XRegExp.isInstalled("namespacing")) {
            groupsObject = (0, _create["default"])(null);
            args.push(groupsObject);
          } else {
            args[0] = new String(args[0]);
            groupsObject = args[0];
          }
          for (var i = 0; i < captureNames.length; ++i) {
            if (captureNames[i]) {
              groupsObject[captureNames[i]] = args[i + 1];
            }
          }
        }
        return replacement2.apply(void 0, args);
      });
    } else {
      result = nativ.replace.call(this == null ? this : String(this), search, function() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return nativ.replace.call(String(replacement2), replacementToken, replacer);
        function replacer($0, bracketed, angled, dollarToken) {
          bracketed = bracketed || angled;
          if (bracketed) {
            var n = +bracketed;
            if (n <= args.length - 3) {
              return args[n] || "";
            }
            n = captureNames ? (0, _indexOf["default"])(captureNames).call(captureNames, bracketed) : -1;
            if (n < 0) {
              throw new SyntaxError("Backreference to undefined group ".concat($0));
            }
            return args[n + 1] || "";
          }
          if (dollarToken === "$") {
            return "$";
          }
          if (dollarToken === "&" || +dollarToken === 0) {
            return args[0];
          }
          if (dollarToken === "`") {
            var _context4;
            return (0, _slice["default"])(_context4 = args[args.length - 1]).call(_context4, 0, args[args.length - 2]);
          }
          if (dollarToken === "'") {
            var _context5;
            return (0, _slice["default"])(_context5 = args[args.length - 1]).call(_context5, args[args.length - 2] + args[0].length);
          }
          dollarToken = +dollarToken;
          if (!isNaN(dollarToken)) {
            if (dollarToken > args.length - 3) {
              throw new SyntaxError("Backreference to undefined group ".concat($0));
            }
            return args[dollarToken] || "";
          }
          throw new SyntaxError("Invalid token ".concat($0));
        }
      });
    }
    if (isRegex) {
      if (search.global) {
        search.lastIndex = 0;
      } else {
        search.lastIndex = origLastIndex;
      }
    }
    return result;
  };
  fixed.split = function(separator2, limit) {
    if (!XRegExp.isRegExp(separator2)) {
      return nativ.split.apply(this, arguments);
    }
    var str = String(this);
    var output = [];
    var origLastIndex = separator2.lastIndex;
    var lastLastIndex = 0;
    var lastLength;
    limit = (limit === void 0 ? -1 : limit) >>> 0;
    (0, _forEach["default"])(XRegExp).call(XRegExp, str, separator2, function(match2) {
      if (match2.index + match2[0].length > lastLastIndex) {
        output.push((0, _slice["default"])(str).call(str, lastLastIndex, match2.index));
        if (match2.length > 1 && match2.index < str.length) {
          Array.prototype.push.apply(output, (0, _slice["default"])(match2).call(match2, 1));
        }
        lastLength = match2[0].length;
        lastLastIndex = match2.index + lastLength;
      }
    });
    if (lastLastIndex === str.length) {
      if (!nativ.test.call(separator2, "") || lastLength) {
        output.push("");
      }
    } else {
      output.push((0, _slice["default"])(str).call(str, lastLastIndex));
    }
    separator2.lastIndex = origLastIndex;
    return output.length > limit ? (0, _slice["default"])(output).call(output, 0, limit) : output;
  };
  XRegExp.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/, function(match2, scope) {
    if (match2[1] === "B" && scope === defaultScope) {
      return match2[0];
    }
    throw new SyntaxError("Invalid escape ".concat(match2[0]));
  }, {
    scope: "all",
    leadChar: "\\"
  });
  XRegExp.addToken(/\\u{([\dA-Fa-f]+)}/, function(match2, scope, flags2) {
    var code = dec(match2[1]);
    if (code > 1114111) {
      throw new SyntaxError("Invalid Unicode code point ".concat(match2[0]));
    }
    if (code <= 65535) {
      return "\\u".concat(pad4(hex2(code)));
    }
    if (hasNativeU && (0, _includes["default"])(flags2).call(flags2, "u")) {
      return match2[0];
    }
    throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u");
  }, {
    scope: "all",
    leadChar: "\\"
  });
  XRegExp.addToken(
    /\[(\^?)\]/,
    // For cross-browser compatibility with ES3, convert [] to \b\B and [^] to [\s\S].
    // (?!) should work like \b\B, but is unreliable in some versions of Firefox
    /* eslint-disable no-confusing-arrow */
    function(match2) {
      return match2[1] ? "[\\s\\S]" : "\\b\\B";
    },
    /* eslint-enable no-confusing-arrow */
    {
      leadChar: "["
    }
  );
  XRegExp.addToken(/\(\?#[^)]*\)/, getContextualTokenSeparator, {
    leadChar: "("
  });
  XRegExp.addToken(/\s+|#[^\n]*\n?/, getContextualTokenSeparator, {
    flag: "x"
  });
  XRegExp.addToken(/\./, function() {
    return "[\\s\\S]";
  }, {
    flag: "s",
    leadChar: "."
  });
  XRegExp.addToken(/\\k<([\w$]+)>/, function(match2) {
    var _context6, _context7;
    var index = isNaN(match2[1]) ? (0, _indexOf["default"])(_context6 = this.captureNames).call(_context6, match2[1]) + 1 : +match2[1];
    var endIndex = match2.index + match2[0].length;
    if (!index || index > this.captureNames.length) {
      throw new SyntaxError("Backreference to undefined group ".concat(match2[0]));
    }
    return (0, _concat["default"])(_context7 = "\\".concat(index)).call(_context7, endIndex === match2.input.length || isNaN(match2.input[endIndex]) ? "" : "(?:)");
  }, {
    leadChar: "\\"
  });
  XRegExp.addToken(/\\(\d+)/, function(match2, scope) {
    if (!(scope === defaultScope && /^[1-9]/.test(match2[1]) && +match2[1] <= this.captureNames.length) && match2[1] !== "0") {
      throw new SyntaxError("Cannot use octal escape or backreference to undefined group ".concat(match2[0]));
    }
    return match2[0];
  }, {
    scope: "all",
    leadChar: "\\"
  });
  XRegExp.addToken(/\(\?P?<([\w$]+)>/, function(match2) {
    var _context8;
    if (!isNaN(match2[1])) {
      throw new SyntaxError("Cannot use integer as capture name ".concat(match2[0]));
    }
    if (!XRegExp.isInstalled("namespacing") && (match2[1] === "length" || match2[1] === "__proto__")) {
      throw new SyntaxError("Cannot use reserved word as capture name ".concat(match2[0]));
    }
    if ((0, _includes["default"])(_context8 = this.captureNames).call(_context8, match2[1])) {
      throw new SyntaxError("Cannot use same name for multiple groups ".concat(match2[0]));
    }
    this.captureNames.push(match2[1]);
    this.hasNamedCapture = true;
    return "(";
  }, {
    leadChar: "("
  });
  XRegExp.addToken(/\((?!\?)/, function(match2, scope, flags2) {
    if ((0, _includes["default"])(flags2).call(flags2, "n")) {
      return "(?:";
    }
    this.captureNames.push(null);
    return "(";
  }, {
    optionalFlags: "n",
    leadChar: "("
  });
  var _default = XRegExp;
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(xregexp);
var $map = arrayIteration.map;
var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport("map");
_export({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
  map: function map2(callbackfn) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
  }
});
var map$1 = entryVirtual("Array").map;
var ArrayPrototype$7 = Array.prototype;
var map$2 = function(it) {
  var own = it.map;
  return it === ArrayPrototype$7 || objectIsPrototypeOf(ArrayPrototype$7, it) && own === ArrayPrototype$7.map ? map$1 : own;
};
var map$3 = map$2;
var map$4 = map$3;
var TypeError$13 = global_1.TypeError;
var createMethod$4 = function(IS_RIGHT) {
  return function(that, callbackfn, argumentsLength, memo) {
    aCallable(callbackfn);
    var O = toObject(that);
    var self2 = indexedObject(O);
    var length = lengthOfArrayLike(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self2) {
        memo = self2[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError$13("Reduce of empty array with no initial value");
      }
    }
    for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self2) {
      memo = callbackfn(memo, self2[index], index, O);
    }
    return memo;
  };
};
var arrayReduce = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod$4(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod$4(true)
};
var engineIsNode = classofRaw(global_1.process) == "process";
var $reduce = arrayReduce.left;
var STRICT_METHOD$3 = arrayMethodIsStrict("reduce");
var CHROME_BUG = !engineIsNode && engineV8Version > 79 && engineV8Version < 83;
_export({ target: "Array", proto: true, forced: !STRICT_METHOD$3 || CHROME_BUG }, {
  reduce: function reduce(callbackfn) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : void 0);
  }
});
var reduce2 = entryVirtual("Array").reduce;
var ArrayPrototype$8 = Array.prototype;
var reduce$1 = function(it) {
  var own = it.reduce;
  return it === ArrayPrototype$8 || objectIsPrototypeOf(ArrayPrototype$8, it) && own === ArrayPrototype$8.reduce ? reduce2 : own;
};
var reduce$2 = reduce$1;
var reduce$3 = reduce$2;
var build = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _concat = interopRequireDefault(concat$3);
  var _includes = interopRequireDefault(includes$4);
  var _map = interopRequireDefault(map$4);
  var _reduce = interopRequireDefault(reduce$3);
  var _default = function _default2(XRegExp) {
    var REGEX_DATA = "xregexp";
    var subParts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g;
    var parts = XRegExp.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/, subParts], "g", {
      conjunction: "or"
    });
    function deanchor(pattern) {
      var leadingAnchor = /^(?:\(\?:\))*\^/;
      var trailingAnchor = /\$(?:\(\?:\))*$/;
      if (leadingAnchor.test(pattern) && trailingAnchor.test(pattern) && // Ensure that the trailing `$` isn't escaped
      trailingAnchor.test(pattern.replace(/\\[\s\S]/g, ""))) {
        return pattern.replace(leadingAnchor, "").replace(trailingAnchor, "");
      }
      return pattern;
    }
    function asXRegExp(value, addFlagX) {
      var flags2 = addFlagX ? "x" : "";
      return XRegExp.isRegExp(value) ? value[REGEX_DATA] && value[REGEX_DATA].captureNames ? (
        // Don't recompile, to preserve capture names
        value
      ) : (
        // Recompile as XRegExp
        XRegExp(value.source, flags2)
      ) : (
        // Compile string as XRegExp
        XRegExp(value, flags2)
      );
    }
    function interpolate(substitution) {
      return substitution instanceof RegExp ? substitution : XRegExp.escape(substitution);
    }
    function reduceToSubpatternsObject(subpatterns, interpolated, subpatternIndex) {
      subpatterns["subpattern".concat(subpatternIndex)] = interpolated;
      return subpatterns;
    }
    function embedSubpatternAfter(raw, subpatternIndex, rawLiterals) {
      var hasSubpattern = subpatternIndex < rawLiterals.length - 1;
      return raw + (hasSubpattern ? "{{subpattern".concat(subpatternIndex, "}}") : "");
    }
    XRegExp.tag = function(flags2) {
      return function(literals) {
        var _context, _context2;
        for (var _len = arguments.length, substitutions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          substitutions[_key - 1] = arguments[_key];
        }
        var subpatterns = (0, _reduce["default"])(_context = (0, _map["default"])(substitutions).call(substitutions, interpolate)).call(_context, reduceToSubpatternsObject, {});
        var pattern = (0, _map["default"])(_context2 = literals.raw).call(_context2, embedSubpatternAfter).join("");
        return XRegExp.build(pattern, subpatterns, flags2);
      };
    };
    XRegExp.build = function(pattern, subs, flags2) {
      flags2 = flags2 || "";
      var addFlagX = (0, _includes["default"])(flags2).call(flags2, "x");
      var inlineFlags = /^\(\?([\w$]+)\)/.exec(pattern);
      if (inlineFlags) {
        flags2 = XRegExp._clipDuplicates(flags2 + inlineFlags[1]);
      }
      var data2 = {};
      for (var p in subs) {
        if (subs.hasOwnProperty(p)) {
          var sub = asXRegExp(subs[p], addFlagX);
          data2[p] = {
            // Deanchoring allows embedding independently useful anchored regexes. If you
            // really need to keep your anchors, double them (i.e., `^^...$$`).
            pattern: deanchor(sub.source),
            names: sub[REGEX_DATA].captureNames || []
          };
        }
      }
      var patternAsRegex = asXRegExp(pattern, addFlagX);
      var numCaps = 0;
      var numPriorCaps;
      var numOuterCaps = 0;
      var outerCapsMap = [0];
      var outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];
      var output = patternAsRegex.source.replace(parts, function($0, $1, $2, $3, $4) {
        var subName = $1 || $2;
        var capName;
        var intro;
        var localCapIndex;
        if (subName) {
          var _context3;
          if (!data2.hasOwnProperty(subName)) {
            throw new ReferenceError("Undefined property ".concat($0));
          }
          if ($1) {
            capName = outerCapNames[numOuterCaps];
            outerCapsMap[++numOuterCaps] = ++numCaps;
            intro = "(?<".concat(capName || subName, ">");
          } else {
            intro = "(?:";
          }
          numPriorCaps = numCaps;
          var rewrittenSubpattern = data2[subName].pattern.replace(subParts, function(match2, paren, backref) {
            if (paren) {
              capName = data2[subName].names[numCaps - numPriorCaps];
              ++numCaps;
              if (capName) {
                return "(?<".concat(capName, ">");
              }
            } else if (backref) {
              localCapIndex = +backref - 1;
              return data2[subName].names[localCapIndex] ? (
                // Need to preserve the backreference name in case using flag `n`
                "\\k<".concat(data2[subName].names[localCapIndex], ">")
              ) : "\\".concat(+backref + numPriorCaps);
            }
            return match2;
          });
          return (0, _concat["default"])(_context3 = "".concat(intro)).call(_context3, rewrittenSubpattern, ")");
        }
        if ($3) {
          capName = outerCapNames[numOuterCaps];
          outerCapsMap[++numOuterCaps] = ++numCaps;
          if (capName) {
            return "(?<".concat(capName, ">");
          }
        } else if ($4) {
          localCapIndex = +$4 - 1;
          return outerCapNames[localCapIndex] ? (
            // Need to preserve the backreference name in case using flag `n`
            "\\k<".concat(outerCapNames[localCapIndex], ">")
          ) : "\\".concat(outerCapsMap[+$4]);
        }
        return $0;
      });
      return XRegExp(output, flags2);
    };
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(build);
var matchrecursive = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _slice = interopRequireDefault(slice$5);
  var _concat = interopRequireDefault(concat$3);
  var _includes = interopRequireDefault(includes$4);
  var _default = function _default2(XRegExp) {
    function row(name, value, start, end) {
      return {
        name,
        value,
        start,
        end
      };
    }
    XRegExp.matchRecursive = function(str, left, right, flags2, options) {
      flags2 = flags2 || "";
      options = options || {};
      var global2 = (0, _includes["default"])(flags2).call(flags2, "g");
      var sticky = (0, _includes["default"])(flags2).call(flags2, "y");
      var basicFlags = flags2.replace(/y/g, "");
      var _options = options, escapeChar = _options.escapeChar;
      var vN = options.valueNames;
      var output = [];
      var openTokens = 0;
      var delimStart = 0;
      var delimEnd = 0;
      var lastOuterEnd = 0;
      var outerStart;
      var innerStart;
      var leftMatch;
      var rightMatch;
      var esc;
      left = XRegExp(left, basicFlags);
      right = XRegExp(right, basicFlags);
      if (escapeChar) {
        var _context, _context2;
        if (escapeChar.length > 1) {
          throw new Error("Cannot use more than one escape character");
        }
        escapeChar = XRegExp.escape(escapeChar);
        esc = new RegExp(
          (0, _concat["default"])(_context = (0, _concat["default"])(_context2 = "(?:".concat(escapeChar, "[\\S\\s]|(?:(?!")).call(
            _context2,
            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.
            // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax
            // transformation resulting from those flags was already applied to `left` and
            // `right` when they were passed through the XRegExp constructor above.
            XRegExp.union([left, right], "", {
              conjunction: "or"
            }).source,
            ")[^"
          )).call(_context, escapeChar, "])+)+"),
          // Flags `gy` not needed here
          flags2.replace(/[^imu]+/g, "")
        );
      }
      while (true) {
        if (escapeChar) {
          delimEnd += (XRegExp.exec(str, esc, delimEnd, "sticky") || [""])[0].length;
        }
        leftMatch = XRegExp.exec(str, left, delimEnd);
        rightMatch = XRegExp.exec(str, right, delimEnd);
        if (leftMatch && rightMatch) {
          if (leftMatch.index <= rightMatch.index) {
            rightMatch = null;
          } else {
            leftMatch = null;
          }
        }
        if (leftMatch || rightMatch) {
          delimStart = (leftMatch || rightMatch).index;
          delimEnd = delimStart + (leftMatch || rightMatch)[0].length;
        } else if (!openTokens) {
          break;
        }
        if (sticky && !openTokens && delimStart > lastOuterEnd) {
          break;
        }
        if (leftMatch) {
          if (!openTokens) {
            outerStart = delimStart;
            innerStart = delimEnd;
          }
          ++openTokens;
        } else if (rightMatch && openTokens) {
          if (!--openTokens) {
            if (vN) {
              if (vN[0] && outerStart > lastOuterEnd) {
                output.push(row(vN[0], (0, _slice["default"])(str).call(str, lastOuterEnd, outerStart), lastOuterEnd, outerStart));
              }
              if (vN[1]) {
                output.push(row(vN[1], (0, _slice["default"])(str).call(str, outerStart, innerStart), outerStart, innerStart));
              }
              if (vN[2]) {
                output.push(row(vN[2], (0, _slice["default"])(str).call(str, innerStart, delimStart), innerStart, delimStart));
              }
              if (vN[3]) {
                output.push(row(vN[3], (0, _slice["default"])(str).call(str, delimStart, delimEnd), delimStart, delimEnd));
              }
            } else {
              output.push((0, _slice["default"])(str).call(str, innerStart, delimStart));
            }
            lastOuterEnd = delimEnd;
            if (!global2) {
              break;
            }
          }
        } else {
          throw new Error("Unbalanced delimiter found in string");
        }
        if (delimStart === delimEnd) {
          ++delimEnd;
        }
      }
      if (global2 && !sticky && vN && vN[0] && str.length > lastOuterEnd) {
        output.push(row(vN[0], (0, _slice["default"])(str).call(str, lastOuterEnd), lastOuterEnd, str.length));
      }
      return output;
    };
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(matchrecursive);
var unicodeBase = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _getIterator2 = interopRequireDefault(getIterator$3);
  var _isArray = interopRequireDefault(isArray$3);
  var _getIteratorMethod2 = interopRequireDefault(getIteratorMethod$3);
  var _symbol = interopRequireDefault(symbol$2);
  var _from = interopRequireDefault(from_1$2);
  var _slice = interopRequireDefault(slice$5);
  var _includes = interopRequireDefault(includes$4);
  var _concat = interopRequireDefault(concat$3);
  var _forEach = interopRequireDefault(forEach$3);
  function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof _symbol["default"] === "undefined" || (0, _getIteratorMethod2["default"])(o) == null) {
      if ((0, _isArray["default"])(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F2() {
        };
        return { s: F, n: function n() {
          if (i >= o.length) return { done: true };
          return { done: false, value: o[i++] };
        }, e: function e(_e) {
          throw _e;
        }, f: F };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return { s: function s() {
      it = (0, _getIterator2["default"])(o);
    }, n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    }, e: function e(_e2) {
      didErr = true;
      err = _e2;
    }, f: function f2() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    } };
  }
  function _unsupportedIterableToArray(o, minLen) {
    var _context4;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = (0, _slice["default"])(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return (0, _from["default"])(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  var _default = function _default2(XRegExp) {
    var unicode = {};
    var dec = XRegExp._dec;
    var hex2 = XRegExp._hex;
    var pad4 = XRegExp._pad4;
    function normalize2(name) {
      return name.replace(/[- _]+/g, "").toLowerCase();
    }
    function charCode(chr) {
      var esc = /^\\[xu](.+)/.exec(chr);
      return esc ? dec(esc[1]) : chr.charCodeAt(chr[0] === "\\" ? 1 : 0);
    }
    function invertBmp(range) {
      var output = "";
      var lastEnd = -1;
      (0, _forEach["default"])(XRegExp).call(XRegExp, range, /(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/, function(m) {
        var start = charCode(m[1]);
        if (start > lastEnd + 1) {
          output += "\\u".concat(pad4(hex2(lastEnd + 1)));
          if (start > lastEnd + 2) {
            output += "-\\u".concat(pad4(hex2(start - 1)));
          }
        }
        lastEnd = charCode(m[2] || m[1]);
      });
      if (lastEnd < 65535) {
        output += "\\u".concat(pad4(hex2(lastEnd + 1)));
        if (lastEnd < 65534) {
          output += "-\\uFFFF";
        }
      }
      return output;
    }
    function cacheInvertedBmp(slug) {
      var prop = "b!";
      return unicode[slug][prop] || (unicode[slug][prop] = invertBmp(unicode[slug].bmp));
    }
    function buildAstral(slug, isNegated) {
      var item = unicode[slug];
      var combined = "";
      if (item.bmp && !item.isBmpLast) {
        var _context;
        combined = (0, _concat["default"])(_context = "[".concat(item.bmp, "]")).call(_context, item.astral ? "|" : "");
      }
      if (item.astral) {
        combined += item.astral;
      }
      if (item.isBmpLast && item.bmp) {
        var _context2;
        combined += (0, _concat["default"])(_context2 = "".concat(item.astral ? "|" : "", "[")).call(_context2, item.bmp, "]");
      }
      return isNegated ? "(?:(?!".concat(combined, ")(?:[\uD800-\uDBFF][\uDC00-\uDFFF]|[\0-￿]))") : "(?:".concat(combined, ")");
    }
    function cacheAstral(slug, isNegated) {
      var prop = isNegated ? "a!" : "a=";
      return unicode[slug][prop] || (unicode[slug][prop] = buildAstral(slug, isNegated));
    }
    XRegExp.addToken(
      // Use `*` instead of `+` to avoid capturing `^` as the token name in `\p{^}`
      /\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/,
      function(match2, scope, flags2) {
        var ERR_DOUBLE_NEG = "Invalid double negation ";
        var ERR_UNKNOWN_NAME = "Unknown Unicode token ";
        var ERR_UNKNOWN_REF = "Unicode token missing data ";
        var ERR_ASTRAL_ONLY = "Astral mode required for Unicode token ";
        var ERR_ASTRAL_IN_CLASS = "Astral mode does not support Unicode tokens within character classes";
        var isNegated = match2[1] === "P" || !!match2[2];
        var isAstralMode = (0, _includes["default"])(flags2).call(flags2, "A");
        var slug = normalize2(match2[4] || match2[3]);
        var item = unicode[slug];
        if (match2[1] === "P" && match2[2]) {
          throw new SyntaxError(ERR_DOUBLE_NEG + match2[0]);
        }
        if (!unicode.hasOwnProperty(slug)) {
          throw new SyntaxError(ERR_UNKNOWN_NAME + match2[0]);
        }
        if (item.inverseOf) {
          slug = normalize2(item.inverseOf);
          if (!unicode.hasOwnProperty(slug)) {
            var _context3;
            throw new ReferenceError((0, _concat["default"])(_context3 = "".concat(ERR_UNKNOWN_REF + match2[0], " -> ")).call(_context3, item.inverseOf));
          }
          item = unicode[slug];
          isNegated = !isNegated;
        }
        if (!(item.bmp || isAstralMode)) {
          throw new SyntaxError(ERR_ASTRAL_ONLY + match2[0]);
        }
        if (isAstralMode) {
          if (scope === "class") {
            throw new SyntaxError(ERR_ASTRAL_IN_CLASS);
          }
          return cacheAstral(slug, isNegated);
        }
        return scope === "class" ? isNegated ? cacheInvertedBmp(slug) : item.bmp : "".concat((isNegated ? "[^" : "[") + item.bmp, "]");
      },
      {
        scope: "all",
        optionalFlags: "A",
        leadChar: "\\"
      }
    );
    XRegExp.addUnicodeData = function(data2) {
      var ERR_NO_NAME = "Unicode token requires name";
      var ERR_NO_DATA = "Unicode token has no character data ";
      var _iterator = _createForOfIteratorHelper(data2), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item = _step.value;
          if (!item.name) {
            throw new Error(ERR_NO_NAME);
          }
          if (!(item.inverseOf || item.bmp || item.astral)) {
            throw new Error(ERR_NO_DATA + item.name);
          }
          unicode[normalize2(item.name)] = item;
          if (item.alias) {
            unicode[normalize2(item.alias)] = item;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      XRegExp.cache.flush("patterns");
    };
    XRegExp._getUnicodeProperty = function(name) {
      var slug = normalize2(name);
      return unicode[slug];
    };
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(unicodeBase);
var blocks = [
  {
    "name": "InAdlam",
    "astral": "\uD83A[\uDD00-\uDD5F]"
  },
  {
    "name": "InAegean_Numbers",
    "astral": "\uD800[\uDD00-\uDD3F]"
  },
  {
    "name": "InAhom",
    "astral": "\uD805[\uDF00-\uDF3F]"
  },
  {
    "name": "InAlchemical_Symbols",
    "astral": "\uD83D[\uDF00-\uDF7F]"
  },
  {
    "name": "InAlphabetic_Presentation_Forms",
    "bmp": "ﬀ-ﭏ"
  },
  {
    "name": "InAnatolian_Hieroglyphs",
    "astral": "\uD811[\uDC00-\uDE7F]"
  },
  {
    "name": "InAncient_Greek_Musical_Notation",
    "astral": "\uD834[\uDE00-\uDE4F]"
  },
  {
    "name": "InAncient_Greek_Numbers",
    "astral": "\uD800[\uDD40-\uDD8F]"
  },
  {
    "name": "InAncient_Symbols",
    "astral": "\uD800[\uDD90-\uDDCF]"
  },
  {
    "name": "InArabic",
    "bmp": "؀-ۿ"
  },
  {
    "name": "InArabic_Extended_A",
    "bmp": "ࢠ-ࣿ"
  },
  {
    "name": "InArabic_Mathematical_Alphabetic_Symbols",
    "astral": "\uD83B[\uDE00-\uDEFF]"
  },
  {
    "name": "InArabic_Presentation_Forms_A",
    "bmp": "ﭐ-﷿"
  },
  {
    "name": "InArabic_Presentation_Forms_B",
    "bmp": "ﹰ-\uFEFF"
  },
  {
    "name": "InArabic_Supplement",
    "bmp": "ݐ-ݿ"
  },
  {
    "name": "InArmenian",
    "bmp": "԰-֏"
  },
  {
    "name": "InArrows",
    "bmp": "←-⇿"
  },
  {
    "name": "InAvestan",
    "astral": "\uD802[\uDF00-\uDF3F]"
  },
  {
    "name": "InBalinese",
    "bmp": "ᬀ-᭿"
  },
  {
    "name": "InBamum",
    "bmp": "ꚠ-꛿"
  },
  {
    "name": "InBamum_Supplement",
    "astral": "\uD81A[\uDC00-\uDE3F]"
  },
  {
    "name": "InBasic_Latin",
    "bmp": "\0-"
  },
  {
    "name": "InBassa_Vah",
    "astral": "\uD81A[\uDED0-\uDEFF]"
  },
  {
    "name": "InBatak",
    "bmp": "ᯀ-᯿"
  },
  {
    "name": "InBengali",
    "bmp": "ঀ-৿"
  },
  {
    "name": "InBhaiksuki",
    "astral": "\uD807[\uDC00-\uDC6F]"
  },
  {
    "name": "InBlock_Elements",
    "bmp": "▀-▟"
  },
  {
    "name": "InBopomofo",
    "bmp": "㄀-ㄯ"
  },
  {
    "name": "InBopomofo_Extended",
    "bmp": "ㆠ-ㆿ"
  },
  {
    "name": "InBox_Drawing",
    "bmp": "─-╿"
  },
  {
    "name": "InBrahmi",
    "astral": "\uD804[\uDC00-\uDC7F]"
  },
  {
    "name": "InBraille_Patterns",
    "bmp": "⠀-⣿"
  },
  {
    "name": "InBuginese",
    "bmp": "ᨀ-᨟"
  },
  {
    "name": "InBuhid",
    "bmp": "ᝀ-᝟"
  },
  {
    "name": "InByzantine_Musical_Symbols",
    "astral": "\uD834[\uDC00-\uDCFF]"
  },
  {
    "name": "InCJK_Compatibility",
    "bmp": "㌀-㏿"
  },
  {
    "name": "InCJK_Compatibility_Forms",
    "bmp": "︰-﹏"
  },
  {
    "name": "InCJK_Compatibility_Ideographs",
    "bmp": "豈-﫿"
  },
  {
    "name": "InCJK_Compatibility_Ideographs_Supplement",
    "astral": "\uD87E[\uDC00-\uDE1F]"
  },
  {
    "name": "InCJK_Radicals_Supplement",
    "bmp": "⺀-⻿"
  },
  {
    "name": "InCJK_Strokes",
    "bmp": "㇀-㇯"
  },
  {
    "name": "InCJK_Symbols_And_Punctuation",
    "bmp": "　-〿"
  },
  {
    "name": "InCJK_Unified_Ideographs",
    "bmp": "一-鿿"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_A",
    "bmp": "㐀-䶿"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_B",
    "astral": "[\uD840-\uD868][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDF]"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_C",
    "astral": "\uD869[\uDF00-\uDFFF]|[\uD86A-\uD86C][\uDC00-\uDFFF]|\uD86D[\uDC00-\uDF3F]"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_D",
    "astral": "\uD86D[\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1F]"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_E",
    "astral": "\uD86E[\uDC20-\uDFFF]|[\uD86F-\uD872][\uDC00-\uDFFF]|\uD873[\uDC00-\uDEAF]"
  },
  {
    "name": "InCJK_Unified_Ideographs_Extension_F",
    "astral": "\uD873[\uDEB0-\uDFFF]|[\uD874-\uD879][\uDC00-\uDFFF]|\uD87A[\uDC00-\uDFEF]"
  },
  {
    "name": "InCarian",
    "astral": "\uD800[\uDEA0-\uDEDF]"
  },
  {
    "name": "InCaucasian_Albanian",
    "astral": "\uD801[\uDD30-\uDD6F]"
  },
  {
    "name": "InChakma",
    "astral": "\uD804[\uDD00-\uDD4F]"
  },
  {
    "name": "InCham",
    "bmp": "ꨀ-꩟"
  },
  {
    "name": "InCherokee",
    "bmp": "Ꭰ-᏿"
  },
  {
    "name": "InCherokee_Supplement",
    "bmp": "ꭰ-ꮿ"
  },
  {
    "name": "InChess_Symbols",
    "astral": "\uD83E[\uDE00-\uDE6F]"
  },
  {
    "name": "InCombining_Diacritical_Marks",
    "bmp": "̀-ͯ"
  },
  {
    "name": "InCombining_Diacritical_Marks_Extended",
    "bmp": "᪰-᫿"
  },
  {
    "name": "InCombining_Diacritical_Marks_For_Symbols",
    "bmp": "⃐-⃿"
  },
  {
    "name": "InCombining_Diacritical_Marks_Supplement",
    "bmp": "᷀-᷿"
  },
  {
    "name": "InCombining_Half_Marks",
    "bmp": "︠-︯"
  },
  {
    "name": "InCommon_Indic_Number_Forms",
    "bmp": "꠰-꠿"
  },
  {
    "name": "InControl_Pictures",
    "bmp": "␀-␿"
  },
  {
    "name": "InCoptic",
    "bmp": "Ⲁ-⳿"
  },
  {
    "name": "InCoptic_Epact_Numbers",
    "astral": "\uD800[\uDEE0-\uDEFF]"
  },
  {
    "name": "InCounting_Rod_Numerals",
    "astral": "\uD834[\uDF60-\uDF7F]"
  },
  {
    "name": "InCuneiform",
    "astral": "\uD808[\uDC00-\uDFFF]"
  },
  {
    "name": "InCuneiform_Numbers_And_Punctuation",
    "astral": "\uD809[\uDC00-\uDC7F]"
  },
  {
    "name": "InCurrency_Symbols",
    "bmp": "₠-⃏"
  },
  {
    "name": "InCypriot_Syllabary",
    "astral": "\uD802[\uDC00-\uDC3F]"
  },
  {
    "name": "InCyrillic",
    "bmp": "Ѐ-ӿ"
  },
  {
    "name": "InCyrillic_Extended_A",
    "bmp": "ⷠ-ⷿ"
  },
  {
    "name": "InCyrillic_Extended_B",
    "bmp": "Ꙁ-ꚟ"
  },
  {
    "name": "InCyrillic_Extended_C",
    "bmp": "ᲀ-᲏"
  },
  {
    "name": "InCyrillic_Supplement",
    "bmp": "Ԁ-ԯ"
  },
  {
    "name": "InDeseret",
    "astral": "\uD801[\uDC00-\uDC4F]"
  },
  {
    "name": "InDevanagari",
    "bmp": "ऀ-ॿ"
  },
  {
    "name": "InDevanagari_Extended",
    "bmp": "꣠-ꣿ"
  },
  {
    "name": "InDingbats",
    "bmp": "✀-➿"
  },
  {
    "name": "InDogra",
    "astral": "\uD806[\uDC00-\uDC4F]"
  },
  {
    "name": "InDomino_Tiles",
    "astral": "\uD83C[\uDC30-\uDC9F]"
  },
  {
    "name": "InDuployan",
    "astral": "\uD82F[\uDC00-\uDC9F]"
  },
  {
    "name": "InEarly_Dynastic_Cuneiform",
    "astral": "\uD809[\uDC80-\uDD4F]"
  },
  {
    "name": "InEgyptian_Hieroglyphs",
    "astral": "\uD80C[\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F]"
  },
  {
    "name": "InElbasan",
    "astral": "\uD801[\uDD00-\uDD2F]"
  },
  {
    "name": "InEmoticons",
    "astral": "\uD83D[\uDE00-\uDE4F]"
  },
  {
    "name": "InEnclosed_Alphanumeric_Supplement",
    "astral": "\uD83C[\uDD00-\uDDFF]"
  },
  {
    "name": "InEnclosed_Alphanumerics",
    "bmp": "①-⓿"
  },
  {
    "name": "InEnclosed_CJK_Letters_And_Months",
    "bmp": "㈀-㋿"
  },
  {
    "name": "InEnclosed_Ideographic_Supplement",
    "astral": "\uD83C[\uDE00-\uDEFF]"
  },
  {
    "name": "InEthiopic",
    "bmp": "ሀ-፿"
  },
  {
    "name": "InEthiopic_Extended",
    "bmp": "ⶀ-⷟"
  },
  {
    "name": "InEthiopic_Extended_A",
    "bmp": "꬀-꬯"
  },
  {
    "name": "InEthiopic_Supplement",
    "bmp": "ᎀ-᎟"
  },
  {
    "name": "InGeneral_Punctuation",
    "bmp": " -⁯"
  },
  {
    "name": "InGeometric_Shapes",
    "bmp": "■-◿"
  },
  {
    "name": "InGeometric_Shapes_Extended",
    "astral": "\uD83D[\uDF80-\uDFFF]"
  },
  {
    "name": "InGeorgian",
    "bmp": "Ⴀ-ჿ"
  },
  {
    "name": "InGeorgian_Extended",
    "bmp": "Ა-Ჿ"
  },
  {
    "name": "InGeorgian_Supplement",
    "bmp": "ⴀ-⴯"
  },
  {
    "name": "InGlagolitic",
    "bmp": "Ⰰ-ⱟ"
  },
  {
    "name": "InGlagolitic_Supplement",
    "astral": "\uD838[\uDC00-\uDC2F]"
  },
  {
    "name": "InGothic",
    "astral": "\uD800[\uDF30-\uDF4F]"
  },
  {
    "name": "InGrantha",
    "astral": "\uD804[\uDF00-\uDF7F]"
  },
  {
    "name": "InGreek_And_Coptic",
    "bmp": "Ͱ-Ͽ"
  },
  {
    "name": "InGreek_Extended",
    "bmp": "ἀ-῿"
  },
  {
    "name": "InGujarati",
    "bmp": "઀-૿"
  },
  {
    "name": "InGunjala_Gondi",
    "astral": "\uD807[\uDD60-\uDDAF]"
  },
  {
    "name": "InGurmukhi",
    "bmp": "਀-੿"
  },
  {
    "name": "InHalfwidth_And_Fullwidth_Forms",
    "bmp": "＀-￯"
  },
  {
    "name": "InHangul_Compatibility_Jamo",
    "bmp": "㄰-㆏"
  },
  {
    "name": "InHangul_Jamo",
    "bmp": "ᄀ-ᇿ"
  },
  {
    "name": "InHangul_Jamo_Extended_A",
    "bmp": "ꥠ-꥿"
  },
  {
    "name": "InHangul_Jamo_Extended_B",
    "bmp": "ힰ-퟿"
  },
  {
    "name": "InHangul_Syllables",
    "bmp": "가-힯"
  },
  {
    "name": "InHanifi_Rohingya",
    "astral": "\uD803[\uDD00-\uDD3F]"
  },
  {
    "name": "InHanunoo",
    "bmp": "ᜠ-᜿"
  },
  {
    "name": "InHatran",
    "astral": "\uD802[\uDCE0-\uDCFF]"
  },
  {
    "name": "InHebrew",
    "bmp": "֐-׿"
  },
  {
    "name": "InHigh_Private_Use_Surrogates",
    "bmp": "\uDB80-\uDBFF"
  },
  {
    "name": "InHigh_Surrogates",
    "bmp": "\uD800-\uDB7F"
  },
  {
    "name": "InHiragana",
    "bmp": "぀-ゟ"
  },
  {
    "name": "InIPA_Extensions",
    "bmp": "ɐ-ʯ"
  },
  {
    "name": "InIdeographic_Description_Characters",
    "bmp": "⿰-⿿"
  },
  {
    "name": "InIdeographic_Symbols_And_Punctuation",
    "astral": "\uD81B[\uDFE0-\uDFFF]"
  },
  {
    "name": "InImperial_Aramaic",
    "astral": "\uD802[\uDC40-\uDC5F]"
  },
  {
    "name": "InIndic_Siyaq_Numbers",
    "astral": "\uD83B[\uDC70-\uDCBF]"
  },
  {
    "name": "InInscriptional_Pahlavi",
    "astral": "\uD802[\uDF60-\uDF7F]"
  },
  {
    "name": "InInscriptional_Parthian",
    "astral": "\uD802[\uDF40-\uDF5F]"
  },
  {
    "name": "InJavanese",
    "bmp": "ꦀ-꧟"
  },
  {
    "name": "InKaithi",
    "astral": "\uD804[\uDC80-\uDCCF]"
  },
  {
    "name": "InKana_Extended_A",
    "astral": "\uD82C[\uDD00-\uDD2F]"
  },
  {
    "name": "InKana_Supplement",
    "astral": "\uD82C[\uDC00-\uDCFF]"
  },
  {
    "name": "InKanbun",
    "bmp": "㆐-㆟"
  },
  {
    "name": "InKangxi_Radicals",
    "bmp": "⼀-⿟"
  },
  {
    "name": "InKannada",
    "bmp": "ಀ-೿"
  },
  {
    "name": "InKatakana",
    "bmp": "゠-ヿ"
  },
  {
    "name": "InKatakana_Phonetic_Extensions",
    "bmp": "ㇰ-ㇿ"
  },
  {
    "name": "InKayah_Li",
    "bmp": "꤀-꤯"
  },
  {
    "name": "InKharoshthi",
    "astral": "\uD802[\uDE00-\uDE5F]"
  },
  {
    "name": "InKhmer",
    "bmp": "ក-៿"
  },
  {
    "name": "InKhmer_Symbols",
    "bmp": "᧠-᧿"
  },
  {
    "name": "InKhojki",
    "astral": "\uD804[\uDE00-\uDE4F]"
  },
  {
    "name": "InKhudawadi",
    "astral": "\uD804[\uDEB0-\uDEFF]"
  },
  {
    "name": "InLao",
    "bmp": "຀-໿"
  },
  {
    "name": "InLatin_1_Supplement",
    "bmp": "-ÿ"
  },
  {
    "name": "InLatin_Extended_A",
    "bmp": "Ā-ſ"
  },
  {
    "name": "InLatin_Extended_Additional",
    "bmp": "Ḁ-ỿ"
  },
  {
    "name": "InLatin_Extended_B",
    "bmp": "ƀ-ɏ"
  },
  {
    "name": "InLatin_Extended_C",
    "bmp": "Ⱡ-Ɀ"
  },
  {
    "name": "InLatin_Extended_D",
    "bmp": "꜠-ꟿ"
  },
  {
    "name": "InLatin_Extended_E",
    "bmp": "ꬰ-꭯"
  },
  {
    "name": "InLepcha",
    "bmp": "ᰀ-ᱏ"
  },
  {
    "name": "InLetterlike_Symbols",
    "bmp": "℀-⅏"
  },
  {
    "name": "InLimbu",
    "bmp": "ᤀ-᥏"
  },
  {
    "name": "InLinear_A",
    "astral": "\uD801[\uDE00-\uDF7F]"
  },
  {
    "name": "InLinear_B_Ideograms",
    "astral": "\uD800[\uDC80-\uDCFF]"
  },
  {
    "name": "InLinear_B_Syllabary",
    "astral": "\uD800[\uDC00-\uDC7F]"
  },
  {
    "name": "InLisu",
    "bmp": "ꓐ-꓿"
  },
  {
    "name": "InLow_Surrogates",
    "bmp": "\uDC00-\uDFFF"
  },
  {
    "name": "InLycian",
    "astral": "\uD800[\uDE80-\uDE9F]"
  },
  {
    "name": "InLydian",
    "astral": "\uD802[\uDD20-\uDD3F]"
  },
  {
    "name": "InMahajani",
    "astral": "\uD804[\uDD50-\uDD7F]"
  },
  {
    "name": "InMahjong_Tiles",
    "astral": "\uD83C[\uDC00-\uDC2F]"
  },
  {
    "name": "InMakasar",
    "astral": "\uD807[\uDEE0-\uDEFF]"
  },
  {
    "name": "InMalayalam",
    "bmp": "ഀ-ൿ"
  },
  {
    "name": "InMandaic",
    "bmp": "ࡀ-࡟"
  },
  {
    "name": "InManichaean",
    "astral": "\uD802[\uDEC0-\uDEFF]"
  },
  {
    "name": "InMarchen",
    "astral": "\uD807[\uDC70-\uDCBF]"
  },
  {
    "name": "InMasaram_Gondi",
    "astral": "\uD807[\uDD00-\uDD5F]"
  },
  {
    "name": "InMathematical_Alphanumeric_Symbols",
    "astral": "\uD835[\uDC00-\uDFFF]"
  },
  {
    "name": "InMathematical_Operators",
    "bmp": "∀-⋿"
  },
  {
    "name": "InMayan_Numerals",
    "astral": "\uD834[\uDEE0-\uDEFF]"
  },
  {
    "name": "InMedefaidrin",
    "astral": "\uD81B[\uDE40-\uDE9F]"
  },
  {
    "name": "InMeetei_Mayek",
    "bmp": "ꯀ-꯿"
  },
  {
    "name": "InMeetei_Mayek_Extensions",
    "bmp": "ꫠ-꫿"
  },
  {
    "name": "InMende_Kikakui",
    "astral": "\uD83A[\uDC00-\uDCDF]"
  },
  {
    "name": "InMeroitic_Cursive",
    "astral": "\uD802[\uDDA0-\uDDFF]"
  },
  {
    "name": "InMeroitic_Hieroglyphs",
    "astral": "\uD802[\uDD80-\uDD9F]"
  },
  {
    "name": "InMiao",
    "astral": "\uD81B[\uDF00-\uDF9F]"
  },
  {
    "name": "InMiscellaneous_Mathematical_Symbols_A",
    "bmp": "⟀-⟯"
  },
  {
    "name": "InMiscellaneous_Mathematical_Symbols_B",
    "bmp": "⦀-⧿"
  },
  {
    "name": "InMiscellaneous_Symbols",
    "bmp": "☀-⛿"
  },
  {
    "name": "InMiscellaneous_Symbols_And_Arrows",
    "bmp": "⬀-⯿"
  },
  {
    "name": "InMiscellaneous_Symbols_And_Pictographs",
    "astral": "\uD83C[\uDF00-\uDFFF]|\uD83D[\uDC00-\uDDFF]"
  },
  {
    "name": "InMiscellaneous_Technical",
    "bmp": "⌀-⏿"
  },
  {
    "name": "InModi",
    "astral": "\uD805[\uDE00-\uDE5F]"
  },
  {
    "name": "InModifier_Tone_Letters",
    "bmp": "꜀-ꜟ"
  },
  {
    "name": "InMongolian",
    "bmp": "᠀-᢯"
  },
  {
    "name": "InMongolian_Supplement",
    "astral": "\uD805[\uDE60-\uDE7F]"
  },
  {
    "name": "InMro",
    "astral": "\uD81A[\uDE40-\uDE6F]"
  },
  {
    "name": "InMultani",
    "astral": "\uD804[\uDE80-\uDEAF]"
  },
  {
    "name": "InMusical_Symbols",
    "astral": "\uD834[\uDD00-\uDDFF]"
  },
  {
    "name": "InMyanmar",
    "bmp": "က-႟"
  },
  {
    "name": "InMyanmar_Extended_A",
    "bmp": "ꩠ-ꩿ"
  },
  {
    "name": "InMyanmar_Extended_B",
    "bmp": "ꧠ-꧿"
  },
  {
    "name": "InNKo",
    "bmp": "߀-߿"
  },
  {
    "name": "InNabataean",
    "astral": "\uD802[\uDC80-\uDCAF]"
  },
  {
    "name": "InNew_Tai_Lue",
    "bmp": "ᦀ-᧟"
  },
  {
    "name": "InNewa",
    "astral": "\uD805[\uDC00-\uDC7F]"
  },
  {
    "name": "InNumber_Forms",
    "bmp": "⅐-↏"
  },
  {
    "name": "InNushu",
    "astral": "\uD82C[\uDD70-\uDEFF]"
  },
  {
    "name": "InOgham",
    "bmp": " -᚟"
  },
  {
    "name": "InOl_Chiki",
    "bmp": "᱐-᱿"
  },
  {
    "name": "InOld_Hungarian",
    "astral": "\uD803[\uDC80-\uDCFF]"
  },
  {
    "name": "InOld_Italic",
    "astral": "\uD800[\uDF00-\uDF2F]"
  },
  {
    "name": "InOld_North_Arabian",
    "astral": "\uD802[\uDE80-\uDE9F]"
  },
  {
    "name": "InOld_Permic",
    "astral": "\uD800[\uDF50-\uDF7F]"
  },
  {
    "name": "InOld_Persian",
    "astral": "\uD800[\uDFA0-\uDFDF]"
  },
  {
    "name": "InOld_Sogdian",
    "astral": "\uD803[\uDF00-\uDF2F]"
  },
  {
    "name": "InOld_South_Arabian",
    "astral": "\uD802[\uDE60-\uDE7F]"
  },
  {
    "name": "InOld_Turkic",
    "astral": "\uD803[\uDC00-\uDC4F]"
  },
  {
    "name": "InOptical_Character_Recognition",
    "bmp": "⑀-⑟"
  },
  {
    "name": "InOriya",
    "bmp": "଀-୿"
  },
  {
    "name": "InOrnamental_Dingbats",
    "astral": "\uD83D[\uDE50-\uDE7F]"
  },
  {
    "name": "InOsage",
    "astral": "\uD801[\uDCB0-\uDCFF]"
  },
  {
    "name": "InOsmanya",
    "astral": "\uD801[\uDC80-\uDCAF]"
  },
  {
    "name": "InPahawh_Hmong",
    "astral": "\uD81A[\uDF00-\uDF8F]"
  },
  {
    "name": "InPalmyrene",
    "astral": "\uD802[\uDC60-\uDC7F]"
  },
  {
    "name": "InPau_Cin_Hau",
    "astral": "\uD806[\uDEC0-\uDEFF]"
  },
  {
    "name": "InPhags_Pa",
    "bmp": "ꡀ-꡿"
  },
  {
    "name": "InPhaistos_Disc",
    "astral": "\uD800[\uDDD0-\uDDFF]"
  },
  {
    "name": "InPhoenician",
    "astral": "\uD802[\uDD00-\uDD1F]"
  },
  {
    "name": "InPhonetic_Extensions",
    "bmp": "ᴀ-ᵿ"
  },
  {
    "name": "InPhonetic_Extensions_Supplement",
    "bmp": "ᶀ-ᶿ"
  },
  {
    "name": "InPlaying_Cards",
    "astral": "\uD83C[\uDCA0-\uDCFF]"
  },
  {
    "name": "InPrivate_Use_Area",
    "bmp": "-"
  },
  {
    "name": "InPsalter_Pahlavi",
    "astral": "\uD802[\uDF80-\uDFAF]"
  },
  {
    "name": "InRejang",
    "bmp": "ꤰ-꥟"
  },
  {
    "name": "InRumi_Numeral_Symbols",
    "astral": "\uD803[\uDE60-\uDE7F]"
  },
  {
    "name": "InRunic",
    "bmp": "ᚠ-᛿"
  },
  {
    "name": "InSamaritan",
    "bmp": "ࠀ-࠿"
  },
  {
    "name": "InSaurashtra",
    "bmp": "ꢀ-꣟"
  },
  {
    "name": "InSharada",
    "astral": "\uD804[\uDD80-\uDDDF]"
  },
  {
    "name": "InShavian",
    "astral": "\uD801[\uDC50-\uDC7F]"
  },
  {
    "name": "InShorthand_Format_Controls",
    "astral": "\uD82F[\uDCA0-\uDCAF]"
  },
  {
    "name": "InSiddham",
    "astral": "\uD805[\uDD80-\uDDFF]"
  },
  {
    "name": "InSinhala",
    "bmp": "඀-෿"
  },
  {
    "name": "InSinhala_Archaic_Numbers",
    "astral": "\uD804[\uDDE0-\uDDFF]"
  },
  {
    "name": "InSmall_Form_Variants",
    "bmp": "﹐-﹯"
  },
  {
    "name": "InSogdian",
    "astral": "\uD803[\uDF30-\uDF6F]"
  },
  {
    "name": "InSora_Sompeng",
    "astral": "\uD804[\uDCD0-\uDCFF]"
  },
  {
    "name": "InSoyombo",
    "astral": "\uD806[\uDE50-\uDEAF]"
  },
  {
    "name": "InSpacing_Modifier_Letters",
    "bmp": "ʰ-˿"
  },
  {
    "name": "InSpecials",
    "bmp": "￰-￿"
  },
  {
    "name": "InSundanese",
    "bmp": "ᮀ-ᮿ"
  },
  {
    "name": "InSundanese_Supplement",
    "bmp": "᳀-᳏"
  },
  {
    "name": "InSuperscripts_And_Subscripts",
    "bmp": "⁰-₟"
  },
  {
    "name": "InSupplemental_Arrows_A",
    "bmp": "⟰-⟿"
  },
  {
    "name": "InSupplemental_Arrows_B",
    "bmp": "⤀-⥿"
  },
  {
    "name": "InSupplemental_Arrows_C",
    "astral": "\uD83E[\uDC00-\uDCFF]"
  },
  {
    "name": "InSupplemental_Mathematical_Operators",
    "bmp": "⨀-⫿"
  },
  {
    "name": "InSupplemental_Punctuation",
    "bmp": "⸀-⹿"
  },
  {
    "name": "InSupplemental_Symbols_And_Pictographs",
    "astral": "\uD83E[\uDD00-\uDDFF]"
  },
  {
    "name": "InSupplementary_Private_Use_Area_A",
    "astral": "[\uDB80-\uDBBF][\uDC00-\uDFFF]"
  },
  {
    "name": "InSupplementary_Private_Use_Area_B",
    "astral": "[\uDBC0-\uDBFF][\uDC00-\uDFFF]"
  },
  {
    "name": "InSutton_SignWriting",
    "astral": "\uD836[\uDC00-\uDEAF]"
  },
  {
    "name": "InSyloti_Nagri",
    "bmp": "ꠀ-꠯"
  },
  {
    "name": "InSyriac",
    "bmp": "܀-ݏ"
  },
  {
    "name": "InSyriac_Supplement",
    "bmp": "ࡠ-࡯"
  },
  {
    "name": "InTagalog",
    "bmp": "ᜀ-ᜟ"
  },
  {
    "name": "InTagbanwa",
    "bmp": "ᝠ-᝿"
  },
  {
    "name": "InTags",
    "astral": "\uDB40[\uDC00-\uDC7F]"
  },
  {
    "name": "InTai_Le",
    "bmp": "ᥐ-᥿"
  },
  {
    "name": "InTai_Tham",
    "bmp": "ᨠ-᪯"
  },
  {
    "name": "InTai_Viet",
    "bmp": "ꪀ-꫟"
  },
  {
    "name": "InTai_Xuan_Jing_Symbols",
    "astral": "\uD834[\uDF00-\uDF5F]"
  },
  {
    "name": "InTakri",
    "astral": "\uD805[\uDE80-\uDECF]"
  },
  {
    "name": "InTamil",
    "bmp": "஀-௿"
  },
  {
    "name": "InTangut",
    "astral": "[\uD81C-\uD821][\uDC00-\uDFFF]"
  },
  {
    "name": "InTangut_Components",
    "astral": "\uD822[\uDC00-\uDEFF]"
  },
  {
    "name": "InTelugu",
    "bmp": "ఀ-౿"
  },
  {
    "name": "InThaana",
    "bmp": "ހ-޿"
  },
  {
    "name": "InThai",
    "bmp": "฀-๿"
  },
  {
    "name": "InTibetan",
    "bmp": "ༀ-࿿"
  },
  {
    "name": "InTifinagh",
    "bmp": "ⴰ-⵿"
  },
  {
    "name": "InTirhuta",
    "astral": "\uD805[\uDC80-\uDCDF]"
  },
  {
    "name": "InTransport_And_Map_Symbols",
    "astral": "\uD83D[\uDE80-\uDEFF]"
  },
  {
    "name": "InUgaritic",
    "astral": "\uD800[\uDF80-\uDF9F]"
  },
  {
    "name": "InUnified_Canadian_Aboriginal_Syllabics",
    "bmp": "᐀-ᙿ"
  },
  {
    "name": "InUnified_Canadian_Aboriginal_Syllabics_Extended",
    "bmp": "ᢰ-᣿"
  },
  {
    "name": "InVai",
    "bmp": "ꔀ-꘿"
  },
  {
    "name": "InVariation_Selectors",
    "bmp": "︀-️"
  },
  {
    "name": "InVariation_Selectors_Supplement",
    "astral": "\uDB40[\uDD00-\uDDEF]"
  },
  {
    "name": "InVedic_Extensions",
    "bmp": "᳐-᳿"
  },
  {
    "name": "InVertical_Forms",
    "bmp": "︐-︟"
  },
  {
    "name": "InWarang_Citi",
    "astral": "\uD806[\uDCA0-\uDCFF]"
  },
  {
    "name": "InYi_Radicals",
    "bmp": "꒐-꓏"
  },
  {
    "name": "InYi_Syllables",
    "bmp": "ꀀ-꒏"
  },
  {
    "name": "InYijing_Hexagram_Symbols",
    "bmp": "䷀-䷿"
  },
  {
    "name": "InZanabazar_Square",
    "astral": "\uD806[\uDE00-\uDE4F]"
  },
  {
    "name": "Inundefined",
    "astral": "\uD803[\uDE80-\uDEBF\uDFB0-\uDFFF]|\uD806[\uDD00-\uDD5F\uDDA0-\uDDFF]|\uD807[\uDFB0-\uDFFF]|\uD80D[\uDC30-\uDC3F]|\uD822[\uDF00-\uDFFF]|\uD823[\uDC00-\uDD8F]|\uD82C[\uDD30-\uDD6F]|\uD838[\uDD00-\uDD4F\uDEC0-\uDEFF]|\uD83B[\uDD00-\uDD4F]|\uD83E[\uDE70-\uDFFF]|[\uD880-\uD883][\uDC00-\uDFFF]|\uD884[\uDC00-\uDF4F]"
  }
];
var unicodeBlocks = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _blocks = interopRequireDefault(blocks);
  var _default = function _default2(XRegExp) {
    if (!XRegExp.addUnicodeData) {
      throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");
    }
    XRegExp.addUnicodeData(_blocks["default"]);
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(unicodeBlocks);
var categories = [
  {
    "name": "C",
    "alias": "Other",
    "isBmpLast": true,
    "bmp": "\0--­͸͹΀-΃΋΍΢԰՗՘֋֌֐׈-׏׫-׮׵-؅؜؝۝܎܏݋݌޲-޿߻߼࠮࠯࠿࡜࡝࡟࡫-࢟ࢵࣈ-࣒࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥৿਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੷-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୔୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౶಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-೿഍഑൅൉൐-൓൤൥඀඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅຋຤຦຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠎᠏᠚-᠟᡹-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯᫁-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-᲏᲻᲼᳈-᳏᳻-᳿᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿​-‏‪-‮⁠-⁯⁲⁳₏₝-₟⃀-⃏⃱-⃿↌-↏␧-␿⑋-⑟⭴⭵⮖Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹓-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄㄰㆏㇤-㇯㈟鿽-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꟀꟁꟋ-ꟴ꠭-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯꭬-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽-＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￻￾￿",
    "astral": "\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEFC-\uDEFF\uDF24-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6E\uDD70-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC9F-\uDCA6\uDCB0-\uDCDF\uDCF3\uDCF6-\uDCFA\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBB\uDDD0\uDDD1\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE49-\uDE4F\uDE59-\uDE5F\uDEA0-\uDEBF\uDEE7-\uDEEA\uDEF7-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF92-\uDF98\uDF9D-\uDFA8\uDFB0-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCF9\uDD28-\uDD2F\uDD3A-\uDE5F\uDE7F\uDEAA\uDEAE\uDEAF\uDEB2-\uDEFF\uDF28-\uDF2F\uDF5A-\uDFAF\uDFCC-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC4E-\uDC51\uDC70-\uDC7E\uDCBD\uDCC2-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD48-\uDD4F\uDD77-\uDD7F\uDDE0\uDDF5-\uDDFF\uDE12\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEAA-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC5C\uDC62-\uDC7F\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDDE-\uDDFF\uDE45-\uDE4F\uDE5A-\uDE5F\uDE6D-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF40-\uDFFF]|\uD806[\uDC3C-\uDC9F\uDCF3-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD36\uDD39\uDD3A\uDD47-\uDD4F\uDD5A-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE5-\uDDFF\uDE48-\uDE4F\uDEA3-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC46-\uDC4F\uDC6D-\uDC6F\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF9-\uDFAF\uDFB1-\uDFBF\uDFF2-\uDFFE]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F\uDC75-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD824-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83F\uD87B-\uD87D\uD87F\uD885-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDE6D\uDE70-\uDECF\uDEEE\uDEEF\uDEF6-\uDEFF\uDF46-\uDF4F\uDF5A\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE9B-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE5-\uDFEF\uDFF2-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A\uDC9B\uDCA0-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD73-\uDD7A\uDDE9-\uDDFF\uDE46-\uDEDF\uDEF4-\uDEFF\uDF57-\uDF5F\uDF79-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD836[\uDE8C-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD50-\uDEBF\uDEFA-\uDEFE\uDF00-\uDFFF]|\uD83A[\uDCC5\uDCC6\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDC70\uDCB5-\uDD00\uDD3E-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDCFF\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDF\uDEED-\uDEEF\uDEFD-\uDEFF\uDF74-\uDF7F\uDFD9-\uDFDF\uDFEC-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDD79\uDDCC\uDE54-\uDE5F\uDE6E\uDE6F\uDE75-\uDE77\uDE7B-\uDE7F\uDE87-\uDE8F\uDEA9-\uDEAF\uDEB7-\uDEBF\uDEC3-\uDECF\uDED7-\uDEFF\uDF93\uDFCB-\uDFEF\uDFFA-\uDFFF]|\uD869[\uDEDE-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]"
  },
  {
    "name": "Cc",
    "alias": "Control",
    "bmp": "\0--"
  },
  {
    "name": "Cf",
    "alias": "Format",
    "bmp": "­؀-؅؜۝܏࣢᠎​-‏‪-‮⁠-⁤⁦-⁯\uFEFF￹-￻",
    "astral": "\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC38]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]"
  },
  {
    "name": "Cn",
    "alias": "Unassigned",
    "bmp": "͸͹΀-΃΋΍΢԰՗՘֋֌֐׈-׏׫-׮׵-׿؝܎݋݌޲-޿߻߼࠮࠯࠿࡜࡝࡟࡫-࢟ࢵࣈ-࣒঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥৿਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੷-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୔୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౶಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-೿഍഑൅൉൐-൓൤൥඀඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅຋຤຦຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠏᠚-᠟᡹-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯᫁-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-᲏᲻᲼᳈-᳏᳻-᳿᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿⁥⁲⁳₏₝-₟⃀-⃏⃱-⃿↌-↏␧-␿⑋-⑟⭴⭵⮖Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹓-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄㄰㆏㇤-㇯㈟鿽-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꟀꟁꟋ-ꟴ꠭-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯꭬-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-퟿﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽﻾＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￸￾￿",
    "astral": "\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEFC-\uDEFF\uDF24-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6E\uDD70-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC9F-\uDCA6\uDCB0-\uDCDF\uDCF3\uDCF6-\uDCFA\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBB\uDDD0\uDDD1\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE49-\uDE4F\uDE59-\uDE5F\uDEA0-\uDEBF\uDEE7-\uDEEA\uDEF7-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF92-\uDF98\uDF9D-\uDFA8\uDFB0-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCF9\uDD28-\uDD2F\uDD3A-\uDE5F\uDE7F\uDEAA\uDEAE\uDEAF\uDEB2-\uDEFF\uDF28-\uDF2F\uDF5A-\uDFAF\uDFCC-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC4E-\uDC51\uDC70-\uDC7E\uDCC2-\uDCCC\uDCCE\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD48-\uDD4F\uDD77-\uDD7F\uDDE0\uDDF5-\uDDFF\uDE12\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEAA-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC5C\uDC62-\uDC7F\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDDE-\uDDFF\uDE45-\uDE4F\uDE5A-\uDE5F\uDE6D-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF40-\uDFFF]|\uD806[\uDC3C-\uDC9F\uDCF3-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD36\uDD39\uDD3A\uDD47-\uDD4F\uDD5A-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE5-\uDDFF\uDE48-\uDE4F\uDEA3-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC46-\uDC4F\uDC6D-\uDC6F\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF9-\uDFAF\uDFB1-\uDFBF\uDFF2-\uDFFE]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F\uDC75-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD824-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83F\uD87B-\uD87D\uD87F\uD885-\uDB3F\uDB41-\uDB7F][\uDC00-\uDFFF]|\uD80D[\uDC2F\uDC39-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDE6D\uDE70-\uDECF\uDEEE\uDEEF\uDEF6-\uDEFF\uDF46-\uDF4F\uDF5A\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE9B-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE5-\uDFEF\uDFF2-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A\uDC9B\uDCA4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDDE9-\uDDFF\uDE46-\uDEDF\uDEF4-\uDEFF\uDF57-\uDF5F\uDF79-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD836[\uDE8C-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD50-\uDEBF\uDEFA-\uDEFE\uDF00-\uDFFF]|\uD83A[\uDCC5\uDCC6\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDC70\uDCB5-\uDD00\uDD3E-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDCFF\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDF\uDEED-\uDEEF\uDEFD-\uDEFF\uDF74-\uDF7F\uDFD9-\uDFDF\uDFEC-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDD79\uDDCC\uDE54-\uDE5F\uDE6E\uDE6F\uDE75-\uDE77\uDE7B-\uDE7F\uDE87-\uDE8F\uDEA9-\uDEAF\uDEB7-\uDEBF\uDEC3-\uDECF\uDED7-\uDEFF\uDF93\uDFCB-\uDFEF\uDFFA-\uDFFF]|\uD869[\uDEDE-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDFFF]|\uDB40[\uDC00\uDC02-\uDC1F\uDC80-\uDCFF\uDDF0-\uDFFF]|[\uDBBF\uDBFF][\uDFFE\uDFFF]"
  },
  {
    "name": "Co",
    "alias": "Private_Use",
    "bmp": "-",
    "astral": "[\uDB80-\uDBBE\uDBC0-\uDBFE][\uDC00-\uDFFF]|[\uDBBF\uDBFF][\uDC00-\uDFFD]"
  },
  {
    "name": "Cs",
    "alias": "Surrogate",
    "bmp": "\uD800-\uDFFF"
  },
  {
    "name": "L",
    "alias": "Letter",
    "bmp": "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
    "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDEC0-\uDEEB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
  },
  {
    "name": "LC",
    "alias": "Cased_Letter",
    "bmp": "A-Za-zµÀ-ÖØ-öø-ƺƼ-ƿǄ-ʓʕ-ʯͰ-ͳͶͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՠ-ֈႠ-ჅჇჍა-ჺჽ-ჿᎠ-Ᏽᏸ-ᏽᲀ-ᲈᲐ-ᲺᲽ-Ჿᴀ-ᴫᵫ-ᵷᵹ-ᶚḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℴℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⱻⱾ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭꙀ-ꙭꚀ-ꚛꜢ-ꝯꝱ-ꞇꞋ-ꞎꞐ-ꞿꟂ-ꟊꟵꟶꟺꬰ-ꭚꭠ-ꭨꭰ-ꮿﬀ-ﬆﬓ-ﬗＡ-Ｚａ-ｚ",
    "astral": "\uD801[\uDC00-\uDC4F\uDCB0-\uDCD3\uDCD8-\uDCFB]|\uD803[\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD806[\uDCA0-\uDCDF]|\uD81B[\uDE40-\uDE7F]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDD00-\uDD43]"
  },
  {
    "name": "Ll",
    "alias": "Lowercase_Letter",
    "bmp": "a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꞻꞽꞿꟃꟈꟊꟶꟺꬰ-ꭚꭠ-ꭨꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",
    "astral": "\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43]"
  },
  {
    "name": "Lm",
    "alias": "Modifier_Letter",
    "bmp": "ʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥۦߴߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼⱽⵯⸯ々〱-〵〻ゝゞー-ヾꀕꓸ-ꓽꘌꙿꚜꚝꜗ-ꜟꝰꞈꟸꟹꧏꧦꩰꫝꫳꫴꭜ-ꭟꭩｰﾞﾟ",
    "astral": "\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD838[\uDD37-\uDD3D]|𞥋"
  },
  {
    "name": "Lo",
    "alias": "Other_Letter",
    "bmp": "ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮٯٱ-ۓەۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๅກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳳᳵᳶᳺℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
    "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF4A\uDF50]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD838[\uDD00-\uDD2C\uDD4E\uDEC0-\uDEEB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
  },
  {
    "name": "Lt",
    "alias": "Titlecase_Letter",
    "bmp": "ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼ"
  },
  {
    "name": "Lu",
    "alias": "Uppercase_Letter",
    "bmp": "A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸꞺꞼꞾꟂꟄ-ꟇꟉꟵＡ-Ｚ",
    "astral": "\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD81B[\uDE40-\uDE5F]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]"
  },
  {
    "name": "M",
    "alias": "Mark",
    "bmp": "̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣ৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఄా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣඁ-ඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-ᫀᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿⃐-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯",
    "astral": "\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD45\uDD46\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDDC9-\uDDCC\uDDCE\uDDCF\uDE2C-\uDE37\uDE3E\uDEDF-\uDEEA\uDF00-\uDF03\uDF3B\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC35-\uDC46\uDC5E\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDDDC\uDDDD\uDE30-\uDE40\uDEAB-\uDEB7\uDF1D-\uDF2B]|\uD806[\uDC2C-\uDC3A\uDD30-\uDD35\uDD37\uDD38\uDD3B-\uDD3E\uDD40\uDD42\uDD43\uDDD1-\uDDD7\uDDDA-\uDDE0\uDDE4\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE3E\uDE47\uDE51-\uDE5B\uDE8A-\uDE99]|\uD807[\uDC2F-\uDC36\uDC38-\uDC3F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD8A-\uDD8E\uDD90\uDD91\uDD93-\uDD97\uDEF3-\uDEF6]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF51-\uDF87\uDF8F-\uDF92\uDFE4\uDFF0\uDFF1]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]"
  },
  {
    "name": "Mc",
    "alias": "Spacing_Mark",
    "bmp": "ःऻा-ीॉ-ौॎॏংঃা-ীেৈোৌৗਃਾ-ੀઃા-ીૉોૌଂଃାୀେୈୋୌୗாிுூெ-ைொ-ௌௗఁ-ఃు-ౄಂಃಾೀ-ೄೇೈೊೋೕೖംഃാ-ീെ-ൈൊ-ൌൗංඃා-ෑෘ-ෟෲෳ༾༿ཿါာေးျြၖၗၢ-ၤၧ-ၭႃႄႇ-ႌႏႚ-ႜាើ-ៅះៈᤣ-ᤦᤩ-ᤫᤰᤱᤳ-ᤸᨙᨚᩕᩗᩡᩣᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ᭄ᮂᮡᮦᮧ᮪ᯧᯪ-ᯬᯮ᯲᯳ᰤ-ᰫᰴᰵ᳡᳷〮〯ꠣꠤꠧꢀꢁꢴ-ꣃꥒ꥓ꦃꦴꦵꦺꦻꦾ-꧀ꨯꨰꨳꨴꩍꩻꩽꫫꫮꫯꫵꯣꯤꯦꯧꯩꯪ꯬",
    "astral": "\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD45\uDD46\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0\uDDCE\uDE2C-\uDE2E\uDE32\uDE33\uDE35\uDEE0-\uDEE2\uDF02\uDF03\uDF3E\uDF3F\uDF41-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63]|\uD805[\uDC35-\uDC37\uDC40\uDC41\uDC45\uDCB0-\uDCB2\uDCB9\uDCBB-\uDCBE\uDCC1\uDDAF-\uDDB1\uDDB8-\uDDBB\uDDBE\uDE30-\uDE32\uDE3B\uDE3C\uDE3E\uDEAC\uDEAE\uDEAF\uDEB6\uDF20\uDF21\uDF26]|\uD806[\uDC2C-\uDC2E\uDC38\uDD30-\uDD35\uDD37\uDD38\uDD3D\uDD40\uDD42\uDDD1-\uDDD3\uDDDC-\uDDDF\uDDE4\uDE39\uDE57\uDE58\uDE97]|\uD807[\uDC2F\uDC3E\uDCA9\uDCB1\uDCB4\uDD8A-\uDD8E\uDD93\uDD94\uDD96\uDEF5\uDEF6]|\uD81B[\uDF51-\uDF87\uDFF0\uDFF1]|\uD834[\uDD65\uDD66\uDD6D-\uDD72]"
  },
  {
    "name": "Me",
    "alias": "Enclosing_Mark",
    "bmp": "҈҉᪾⃝-⃠⃢-⃤꙰-꙲"
  },
  {
    "name": "Mn",
    "alias": "Nonspacing_Mark",
    "bmp": "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣ৾ਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣૺ-૿ଁ଼ିୁ-ୄ୍୕ୖୢୣஂீ்ఀఄా-ీె-ైొ-్ౕౖౢౣಁ಼ಿೆೌ್ೢೣഀഁ഻഼ു-ൄ്ൢൣඁ්ි-ුූัิ-ฺ็-๎ັິ-ຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᪿᫀᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᮫-ᮭ᯦ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷹᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꠬꣄ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꦽꧥꨩ-ꨮꨱꨲꨵꨶꩃꩌꩼꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︯",
    "astral": "\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF40\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB3-\uDCB8\uDCBA\uDCBF\uDCC0\uDCC2\uDCC3\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]"
  },
  {
    "name": "N",
    "alias": "Number",
    "bmp": "0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൘-൞൦-൸෦-෯๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",
    "astral": "\uD800[\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23\uDF41\uDF4A\uDFD1-\uDFD5]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDD30-\uDD39\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDDE1-\uDDF4\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF3B]|\uD806[\uDCE0-\uDCF2\uDD50-\uDD59]|\uD807[\uDC50-\uDC6C\uDD50-\uDD59\uDDA0-\uDDA9\uDFC0-\uDFD4]|\uD809[\uDC00-\uDC6E]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDCC7-\uDCCF\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]"
  },
  {
    "name": "Nd",
    "alias": "Decimal_Number",
    "bmp": "0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",
    "astral": "\uD801[\uDCA0-\uDCA9]|\uD803[\uDD30-\uDD39]|\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF39]|\uD806[\uDCE0-\uDCE9\uDD50-\uDD59]|\uD807[\uDC50-\uDC59\uDD50-\uDD59\uDDA0-\uDDA9]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDD50-\uDD59]|\uD83E[\uDFF0-\uDFF9]"
  },
  {
    "name": "Nl",
    "alias": "Letter_Number",
    "bmp": "ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ",
    "astral": "\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC6E]"
  },
  {
    "name": "No",
    "alias": "Other_Number",
    "bmp": "²³¹¼-¾৴-৹୲-୷௰-௲౸-౾൘-൞൰-൸༪-༳፩-፼៰-៹᧚⁰⁴-⁹₀-₉⅐-⅟↉①-⒛⓪-⓿❶-➓⳽㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꠰-꠵",
    "astral": "\uD800[\uDD07-\uDD33\uDD75-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC65\uDDE1-\uDDF4]|\uD805[\uDF3A\uDF3B]|\uD806[\uDCEA-\uDCF2]|\uD807[\uDC5A-\uDC6C\uDFC0-\uDFD4]|\uD81A[\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD83A[\uDCC7-\uDCCF]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]"
  },
  {
    "name": "P",
    "alias": "Punctuation",
    "bmp": "!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}¡§«¶·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰৽੶૰౷಄෴๏๚๛༄-༒༔༺-༽྅࿐-࿔࿙࿚၊-၏჻፠-፨᐀᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎⌈-⌋〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⵰⸀-⸮⸰-⹏⹒、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･",
    "astral": "\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|𐕯|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|𛲟|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]"
  },
  {
    "name": "Pc",
    "alias": "Connector_Punctuation",
    "bmp": "_‿⁀⁔︳︴﹍-﹏＿"
  },
  {
    "name": "Pd",
    "alias": "Dash_Punctuation",
    "bmp": "\\-֊־᐀᠆‐-―⸗⸚⸺⸻⹀〜〰゠︱︲﹘﹣－",
    "astral": "𐺭"
  },
  {
    "name": "Pe",
    "alias": "Close_Punctuation",
    "bmp": "\\)\\]\\}༻༽᚜⁆⁾₎⌉⌋〉❩❫❭❯❱❳❵⟆⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽⸣⸥⸧⸩〉》」』】〕〗〙〛〞〟﴾︘︶︸︺︼︾﹀﹂﹄﹈﹚﹜﹞）］｝｠｣"
  },
  {
    "name": "Pf",
    "alias": "Final_Punctuation",
    "bmp": "»’”›⸃⸅⸊⸍⸝⸡"
  },
  {
    "name": "Pi",
    "alias": "Initial_Punctuation",
    "bmp": "«‘‛“‟‹⸂⸄⸉⸌⸜⸠"
  },
  {
    "name": "Po",
    "alias": "Other_Punctuation",
    "bmp": "!-#%-'\\*,\\.\\/:;\\?@\\¡§¶·¿;·՚-՟։׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰৽੶૰౷಄෴๏๚๛༄-༒༔྅࿐-࿔࿙࿚၊-၏჻፠-፨᙮᛫-᛭᜵᜶។-៖៘-៚᠀-᠅᠇-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‖‗†-‧‰-‸※-‾⁁-⁃⁇-⁑⁓⁕-⁞⳹-⳼⳾⳿⵰⸀⸁⸆-⸈⸋⸎-⸖⸘⸙⸛⸞⸟⸪-⸮⸰-⸹⸼-⸿⹁⹃-⹏⹒、-〃〽・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫︐-︖︙︰﹅﹆﹉-﹌﹐-﹒﹔-﹗﹟-﹡﹨﹪﹫！-＃％-＇＊，．／：；？＠＼｡､･",
    "astral": "\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|𐕯|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|𛲟|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]"
  },
  {
    "name": "Ps",
    "alias": "Open_Punctuation",
    "bmp": "\\(\\[\\{༺༼᚛‚„⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨⹂〈《「『【〔〖〘〚〝﴿︗︵︷︹︻︽︿﹁﹃﹇﹙﹛﹝（［｛｟｢"
  },
  {
    "name": "S",
    "alias": "Symbol",
    "bmp": "\\$\\+<->\\^`\\|~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֍-֏؆-؈؋؎؏۞۩۽۾߶߾߿৲৳৺৻૱୰௳-௺౿൏൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᙭៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₿℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏↊↋←-⌇⌌-⌨⌫-␦⑀-⑊⒜-ⓩ─-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭳⭶-⮕⮗-⯿⳥-⳪⹐⹑⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹꭛꭪꭫﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�",
    "astral": "\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|𑜿|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|𛲜|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDE8\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEE0-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDD78\uDD7A-\uDDCB\uDDCD-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6\uDF00-\uDF92\uDF94-\uDFCA]"
  },
  {
    "name": "Sc",
    "alias": "Currency_Symbol",
    "bmp": "\\$¢-¥֏؋߾߿৲৳৻૱௹฿៛₠-₿꠸﷼﹩＄￠￡￥￦",
    "astral": "\uD807[\uDFDD-\uDFE0]|𞋿|𞲰"
  },
  {
    "name": "Sk",
    "alias": "Modifier_Symbol",
    "bmp": "\\^`¨¯´¸˂-˅˒-˟˥-˫˭˯-˿͵΄΅᾽᾿-῁῍-῏῝-῟῭-`´῾゛゜꜀-꜖꜠꜡꞉꞊꭛꭪꭫﮲-﯁＾｀￣",
    "astral": "\uD83C[\uDFFB-\uDFFF]"
  },
  {
    "name": "Sm",
    "alias": "Math_Symbol",
    "bmp": "\\+<->\\|~¬±×÷϶؆-؈⁄⁒⁺-⁼₊-₌℘⅀-⅄⅋←-↔↚↛↠↣↦↮⇎⇏⇒⇔⇴-⋿⌠⌡⍼⎛-⎳⏜-⏡▷◁◸-◿♯⟀-⟄⟇-⟥⟰-⟿⤀-⦂⦙-⧗⧜-⧻⧾-⫿⬰-⭄⭇-⭌﬩﹢﹤-﹦＋＜-＞｜～￢￩-￬",
    "astral": "\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD83B[\uDEF0\uDEF1]"
  },
  {
    "name": "So",
    "alias": "Other_Symbol",
    "bmp": "¦©®°҂֍֎؎؏۞۩۽۾߶৺୰௳-௸௺౿൏൹༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᙭᥀᧞-᧿᭡-᭪᭴-᭼℀℁℃-℆℈℉℔№℗℞-℣℥℧℩℮℺℻⅊⅌⅍⅏↊↋↕-↙↜-↟↡↢↤↥↧-↭↯-⇍⇐⇑⇓⇕-⇳⌀-⌇⌌-⌟⌢-⌨⌫-⍻⍽-⎚⎴-⏛⏢-␦⑀-⑊⒜-ⓩ─-▶▸-◀◂-◷☀-♮♰-❧➔-➿⠀-⣿⬀-⬯⭅⭆⭍-⭳⭶-⮕⮗-⯿⳥-⳪⹐⹑⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㏿䷀-䷿꒐-꓆꠨-꠫꠶꠷꠹꩷-꩹﷽￤￨￭￮￼�",
    "astral": "\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|𑜿|\uD807[\uDFD5-\uDFDC\uDFE1-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|𛲜|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDE8\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|𞅏|\uD83B[\uDCAC\uDD2E]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFA]|\uD83D[\uDC00-\uDED7\uDEE0-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDD78\uDD7A-\uDDCB\uDDCD-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6\uDF00-\uDF92\uDF94-\uDFCA]"
  },
  {
    "name": "Z",
    "alias": "Separator",
    "bmp": "    - \u2028\u2029  　"
  },
  {
    "name": "Zl",
    "alias": "Line_Separator",
    "bmp": "\u2028"
  },
  {
    "name": "Zp",
    "alias": "Paragraph_Separator",
    "bmp": "\u2029"
  },
  {
    "name": "Zs",
    "alias": "Space_Separator",
    "bmp": "    -   　"
  }
];
var unicodeCategories = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _categories = interopRequireDefault(categories);
  var _default = function _default2(XRegExp) {
    if (!XRegExp.addUnicodeData) {
      throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");
    }
    XRegExp.addUnicodeData(_categories["default"]);
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(unicodeCategories);
var properties = [
  {
    "name": "ASCII",
    "bmp": "\0-"
  },
  {
    "name": "Alphabetic",
    "bmp": "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͅͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈְ-ׇֽֿׁׂׅׄא-תׯ-ײؐ-ؚؠ-ٗٙ-ٟٮ-ۓە-ۜۡ-ۭۨ-ۯۺ-ۼۿܐ-ܿݍ-ޱߊ-ߪߴߵߺࠀ-ࠗࠚ-ࠬࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇࣔ-ࣣࣟ-ࣰࣩ-ऻऽ-ौॎ-ॐॕ-ॣॱ-ঃঅ-ঌএঐও-নপ-রলশ-হঽ-ৄেৈোৌৎৗড়ঢ়য়-ৣৰৱৼਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਾ-ੂੇੈੋੌੑਖ਼-ੜਫ਼ੰ-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽ-ૅે-ૉોૌૐૠ-ૣૹ-ૼଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽ-ୄେୈୋୌୖୗଡ଼ଢ଼ୟ-ୣୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-ௌௐௗఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-ౌౕౖౘ-ౚౠ-ౣಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽ-ೄೆ-ೈೊ-ೌೕೖೞೠ-ೣೱೲഀ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൌൎൔ-ൗൟ-ൣൺ-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆා-ුූෘ-ෟෲෳก-ฺเ-ๆํກຂຄຆ-ຊຌ-ຣລວ-ູົ-ຽເ-ໄໆໍໜ-ໟༀཀ-ཇཉ-ཬཱ-ཱྀྈ-ྗྙ-ྼက-ံးျ-ဿၐ-ႏႚ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜓᜠ-ᜳᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-ឳា-ៈៗៜᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-ᤸᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨛᨠ-ᩞᩡ-ᩴᪧᪿᫀᬀ-ᬳᬵ-ᭃᭅ-ᭋᮀ-ᮩᮬ-ᮯᮺ-ᯥᯧ-ᯱᰀ-ᰶᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿᷧ-ᷴḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⒶ-ⓩⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙴ-ꙻꙿ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠅꠇ-ꠧꡀ-ꡳꢀ-ꣃꣅꣲ-ꣷꣻꣽ-ꣿꤊ-ꤪꤰ-ꥒꥠ-ꥼꦀ-ꦲꦴ-ꦿꧏꧠ-ꧯꧺ-ꧾꨀ-ꨶꩀ-ꩍꩠ-ꩶꩺ-ꪾꫀꫂꫛ-ꫝꫠ-ꫯꫲ-ꫵꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯪ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
    "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD27\uDE80-\uDEA9\uDEAB\uDEAC\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC00-\uDC45\uDC82-\uDCB8\uDCD0-\uDCE8\uDD00-\uDD32\uDD44-\uDD47\uDD50-\uDD72\uDD76\uDD80-\uDDBF\uDDC1-\uDDC4\uDDCE\uDDCF\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE34\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEE8\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D-\uDF44\uDF47\uDF48\uDF4B\uDF4C\uDF50\uDF57\uDF5D-\uDF63]|\uD805[\uDC00-\uDC41\uDC43-\uDC45\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCC1\uDCC4\uDCC5\uDCC7\uDD80-\uDDB5\uDDB8-\uDDBE\uDDD8-\uDDDD\uDE00-\uDE3E\uDE40\uDE44\uDE80-\uDEB5\uDEB8\uDF00-\uDF1A\uDF1D-\uDF2A]|\uD806[\uDC00-\uDC38\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD35\uDD37\uDD38\uDD3B\uDD3C\uDD3F-\uDD42\uDDA0-\uDDA7\uDDAA-\uDDD7\uDDDA-\uDDDF\uDDE1\uDDE3\uDDE4\uDE00-\uDE32\uDE35-\uDE3E\uDE50-\uDE97\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC3E\uDC40\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD41\uDD43\uDD46\uDD47\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD8E\uDD90\uDD91\uDD93-\uDD96\uDD98\uDEE0-\uDEF6\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF4F-\uDF87\uDF8F-\uDF9F\uDFE0\uDFE1\uDFE3\uDFF0\uDFF1]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9E]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDEC0-\uDEEB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD47\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD30-\uDD49\uDD50-\uDD69\uDD70-\uDD89]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
  },
  {
    "name": "Any",
    "isBmpLast": true,
    "bmp": "\0-￿",
    "astral": "[\uD800-\uDBFF][\uDC00-\uDFFF]"
  },
  {
    "name": "Default_Ignorable_Code_Point",
    "bmp": "­͏؜ᅟᅠ឴឵᠋-᠎​-‏‪-‮⁠-⁯ㅤ︀-️\uFEFFﾠ￰-￸",
    "astral": "\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|[\uDB40-\uDB43][\uDC00-\uDFFF]"
  },
  {
    "name": "Lowercase",
    "bmp": "a-zªµºß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʸˀˁˠ-ˤͅͱͳͷͺ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᶿḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷⁱⁿₐ-ₜℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎⅰ-ⅿↄⓐ-ⓩⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱽⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛ-ꚝꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꞻꞽꞿꟃꟈꟊꟶꟸ-ꟺꬰ-ꭚꭜ-ꭨꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",
    "astral": "\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43]"
  },
  {
    "name": "Noncharacter_Code_Point",
    "bmp": "﷐-﷯￾￿",
    "astral": "[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]"
  },
  {
    "name": "Uppercase",
    "bmp": "A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅⅠ-ⅯↃⒶ-ⓏⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸꞺꞼꞾꟂꟄ-ꟇꟉꟵＡ-Ｚ",
    "astral": "\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD81B[\uDE40-\uDE5F]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]|\uD83C[\uDD30-\uDD49\uDD50-\uDD69\uDD70-\uDD89]"
  },
  {
    "name": "White_Space",
    "bmp": "	-\r    - \u2028\u2029  　"
  }
];
var unicodeProperties = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _properties = interopRequireDefault(properties);
  var _default = function _default2(XRegExp) {
    if (!XRegExp.addUnicodeData) {
      throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");
    }
    var unicodeData = _properties["default"];
    unicodeData.push({
      name: "Assigned",
      // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode
      // Categories addon is required to use this property
      inverseOf: "Cn"
    });
    XRegExp.addUnicodeData(unicodeData);
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(unicodeProperties);
var scripts = [
  {
    "name": "Adlam",
    "astral": "\uD83A[\uDD00-\uDD4B\uDD50-\uDD59\uDD5E\uDD5F]"
  },
  {
    "name": "Ahom",
    "astral": "\uD805[\uDF00-\uDF1A\uDF1D-\uDF2B\uDF30-\uDF3F]"
  },
  {
    "name": "Anatolian_Hieroglyphs",
    "astral": "\uD811[\uDC00-\uDE46]"
  },
  {
    "name": "Arabic",
    "bmp": "؀-؄؆-؋؍-ؚ؜؞ؠ-ؿف-يٖ-ٯٱ-ۜ۞-ۿݐ-ݿࢠ-ࢴࢶ-ࣇ࣓-ࣣ࣡-ࣿﭐ-﯁ﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷽ﹰ-ﹴﹶ-ﻼ",
    "astral": "\uD803[\uDE60-\uDE7E]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB\uDEF0\uDEF1]"
  },
  {
    "name": "Armenian",
    "bmp": "Ա-Ֆՙ-֊֍-֏ﬓ-ﬗ"
  },
  {
    "name": "Avestan",
    "astral": "\uD802[\uDF00-\uDF35\uDF39-\uDF3F]"
  },
  {
    "name": "Balinese",
    "bmp": "ᬀ-ᭋ᭐-᭼"
  },
  {
    "name": "Bamum",
    "bmp": "ꚠ-꛷",
    "astral": "\uD81A[\uDC00-\uDE38]"
  },
  {
    "name": "Bassa_Vah",
    "astral": "\uD81A[\uDED0-\uDEED\uDEF0-\uDEF5]"
  },
  {
    "name": "Batak",
    "bmp": "ᯀ-᯳᯼-᯿"
  },
  {
    "name": "Bengali",
    "bmp": "ঀ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-৾"
  },
  {
    "name": "Bhaiksuki",
    "astral": "\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC45\uDC50-\uDC6C]"
  },
  {
    "name": "Bopomofo",
    "bmp": "˪˫ㄅ-ㄯㆠ-ㆿ"
  },
  {
    "name": "Brahmi",
    "astral": "\uD804[\uDC00-\uDC4D\uDC52-\uDC6F\uDC7F]"
  },
  {
    "name": "Braille",
    "bmp": "⠀-⣿"
  },
  {
    "name": "Buginese",
    "bmp": "ᨀ-ᨛ᨞᨟"
  },
  {
    "name": "Buhid",
    "bmp": "ᝀ-ᝓ"
  },
  {
    "name": "Canadian_Aboriginal",
    "bmp": "᐀-ᙿᢰ-ᣵ"
  },
  {
    "name": "Carian",
    "astral": "\uD800[\uDEA0-\uDED0]"
  },
  {
    "name": "Caucasian_Albanian",
    "astral": "\uD801[\uDD30-\uDD63\uDD6F]"
  },
  {
    "name": "Chakma",
    "astral": "\uD804[\uDD00-\uDD34\uDD36-\uDD47]"
  },
  {
    "name": "Cham",
    "bmp": "ꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-꩟"
  },
  {
    "name": "Cherokee",
    "bmp": "Ꭰ-Ᏽᏸ-ᏽꭰ-ꮿ"
  },
  {
    "name": "Chorasmian",
    "astral": "\uD803[\uDFB0-\uDFCB]"
  },
  {
    "name": "Common",
    "bmp": "\0-@\\[-`\\{-©«-¹»-¿×÷ʹ-˟˥-˩ˬ-˿ʹ;΅·؅،؛؟ـ۝࣢।॥฿࿕-࿘჻᛫-᛭᜵᜶᠂᠃᠅᳓᳡ᳩ-ᳬᳮ-ᳳᳵ-᳷ᳺ -​‎-⁤⁦-⁰⁴-⁾₀-₎₠-₿℀-℥℧-℩ℬ-ℱℳ-⅍⅏-⅟↉-↋←-␦⑀-⑊①-⟿⤀-⭳⭶-⮕⮗-⯿⸀-⹒⿰-⿻　-〄〆〈-〠〰-〷〼-〿゛゜゠・ー㆐-㆟㇀-㇣㈠-㉟㉿-㋏㋿㍘-㏿䷀-䷿꜀-꜡ꞈ-꞊꠰-꠹꤮ꧏ꭛꭪꭫﴾﴿︐-︙︰-﹒﹔-﹦﹨-﹫\uFEFF！-＠［-｀｛-･ｰﾞﾟ￠-￦￨-￮￹-�",
    "astral": "\uD800[\uDD00-\uDD02\uDD07-\uDD33\uDD37-\uDD3F\uDD90-\uDD9C\uDDD0-\uDDFC\uDEE1-\uDEFB]|\uD81B[\uDFE2\uDFE3]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD66\uDD6A-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDE8\uDEE0-\uDEF3\uDF00-\uDF56\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDFCB\uDFCE-\uDFFF]|\uD83B[\uDC71-\uDCB4\uDD01-\uDD3D]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD00-\uDDAD\uDDE6-\uDDFF\uDE01\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEE0-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDD78\uDD7A-\uDDCB\uDDCD-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6\uDF00-\uDF92\uDF94-\uDFCA\uDFF0-\uDFF9]|\uDB40[\uDC01\uDC20-\uDC7F]"
  },
  {
    "name": "Coptic",
    "bmp": "Ϣ-ϯⲀ-ⳳ⳹-⳿"
  },
  {
    "name": "Cuneiform",
    "astral": "\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC70-\uDC74\uDC80-\uDD43]"
  },
  {
    "name": "Cypriot",
    "astral": "\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F]"
  },
  {
    "name": "Cyrillic",
    "bmp": "Ѐ-҄҇-ԯᲀ-ᲈᴫᵸⷠ-ⷿꙀ-ꚟ︮︯"
  },
  {
    "name": "Deseret",
    "astral": "\uD801[\uDC00-\uDC4F]"
  },
  {
    "name": "Devanagari",
    "bmp": "ऀ-ॐॕ-ॣ०-ॿ꣠-ꣿ"
  },
  {
    "name": "Dives_Akuru",
    "astral": "\uD806[\uDD00-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD35\uDD37\uDD38\uDD3B-\uDD46\uDD50-\uDD59]"
  },
  {
    "name": "Dogra",
    "astral": "\uD806[\uDC00-\uDC3B]"
  },
  {
    "name": "Duployan",
    "astral": "\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9C-\uDC9F]"
  },
  {
    "name": "Egyptian_Hieroglyphs",
    "astral": "\uD80C[\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E\uDC30-\uDC38]"
  },
  {
    "name": "Elbasan",
    "astral": "\uD801[\uDD00-\uDD27]"
  },
  {
    "name": "Elymaic",
    "astral": "\uD803[\uDFE0-\uDFF6]"
  },
  {
    "name": "Ethiopic",
    "bmp": "ሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ"
  },
  {
    "name": "Georgian",
    "bmp": "Ⴀ-ჅჇჍა-ჺჼ-ჿᲐ-ᲺᲽ-Ჿⴀ-ⴥⴧⴭ"
  },
  {
    "name": "Glagolitic",
    "bmp": "Ⰰ-Ⱞⰰ-ⱞ",
    "astral": "\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]"
  },
  {
    "name": "Gothic",
    "astral": "\uD800[\uDF30-\uDF4A]"
  },
  {
    "name": "Grantha",
    "astral": "\uD804[\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]"
  },
  {
    "name": "Greek",
    "bmp": "Ͱ-ͳ͵-ͷͺ-ͽͿ΄ΆΈ-ΊΌΎ-ΡΣ-ϡϰ-Ͽᴦ-ᴪᵝ-ᵡᵦ-ᵪᶿἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾Ωꭥ",
    "astral": "\uD800[\uDD40-\uDD8E\uDDA0]|\uD834[\uDE00-\uDE45]"
  },
  {
    "name": "Gujarati",
    "bmp": "ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿"
  },
  {
    "name": "Gunjala_Gondi",
    "astral": "\uD807[\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD8E\uDD90\uDD91\uDD93-\uDD98\uDDA0-\uDDA9]"
  },
  {
    "name": "Gurmukhi",
    "bmp": "ਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶"
  },
  {
    "name": "Han",
    "bmp": "⺀-⺙⺛-⻳⼀-⿕々〇〡-〩〸-〻㐀-䶿一-鿼豈-舘並-龎",
    "astral": "\uD81B[\uDFF0\uDFF1]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]"
  },
  {
    "name": "Hangul",
    "bmp": "ᄀ-ᇿ〮〯ㄱ-ㆎ㈀-㈞㉠-㉾ꥠ-ꥼ가-힣ힰ-ퟆퟋ-ퟻﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"
  },
  {
    "name": "Hanifi_Rohingya",
    "astral": "\uD803[\uDD00-\uDD27\uDD30-\uDD39]"
  },
  {
    "name": "Hanunoo",
    "bmp": "ᜠ-᜴"
  },
  {
    "name": "Hatran",
    "astral": "\uD802[\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDCFF]"
  },
  {
    "name": "Hebrew",
    "bmp": "֑-ׇא-תׯ-״יִ-זּטּ-לּמּנּסּףּפּצּ-ﭏ"
  },
  {
    "name": "Hiragana",
    "bmp": "ぁ-ゖゝ-ゟ",
    "astral": "\uD82C[\uDC01-\uDD1E\uDD50-\uDD52]|🈀"
  },
  {
    "name": "Imperial_Aramaic",
    "astral": "\uD802[\uDC40-\uDC55\uDC57-\uDC5F]"
  },
  {
    "name": "Inherited",
    "bmp": "̀-ًͯ҅҆-ٰٕ॑-॔᪰-ᫀ᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷹᷻-᷿‌‍⃐-〪⃰-゙゚〭︀-️︠-︭",
    "astral": "\uD800[\uDDFD\uDEE0]|𑌻|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD]|\uDB40[\uDD00-\uDDEF]"
  },
  {
    "name": "Inscriptional_Pahlavi",
    "astral": "\uD802[\uDF60-\uDF72\uDF78-\uDF7F]"
  },
  {
    "name": "Inscriptional_Parthian",
    "astral": "\uD802[\uDF40-\uDF55\uDF58-\uDF5F]"
  },
  {
    "name": "Javanese",
    "bmp": "ꦀ-꧍꧐-꧙꧞꧟"
  },
  {
    "name": "Kaithi",
    "astral": "\uD804[\uDC80-\uDCC1\uDCCD]"
  },
  {
    "name": "Kannada",
    "bmp": "ಀ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲ"
  },
  {
    "name": "Katakana",
    "bmp": "ァ-ヺヽ-ヿㇰ-ㇿ㋐-㋾㌀-㍗ｦ-ｯｱ-ﾝ",
    "astral": "\uD82C[\uDC00\uDD64-\uDD67]"
  },
  {
    "name": "Kayah_Li",
    "bmp": "꤀-꤭꤯"
  },
  {
    "name": "Kharoshthi",
    "astral": "\uD802[\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE38-\uDE3A\uDE3F-\uDE48\uDE50-\uDE58]"
  },
  {
    "name": "Khitan_Small_Script",
    "astral": "𖿤|\uD822[\uDF00-\uDFFF]|\uD823[\uDC00-\uDCD5]"
  },
  {
    "name": "Khmer",
    "bmp": "ក-៝០-៩៰-៹᧠-᧿"
  },
  {
    "name": "Khojki",
    "astral": "\uD804[\uDE00-\uDE11\uDE13-\uDE3E]"
  },
  {
    "name": "Khudawadi",
    "astral": "\uD804[\uDEB0-\uDEEA\uDEF0-\uDEF9]"
  },
  {
    "name": "Lao",
    "bmp": "ກຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟ"
  },
  {
    "name": "Latin",
    "bmp": "A-Za-zªºÀ-ÖØ-öø-ʸˠ-ˤᴀ-ᴥᴬ-ᵜᵢ-ᵥᵫ-ᵷᵹ-ᶾḀ-ỿⁱⁿₐ-ₜKÅℲⅎⅠ-ↈⱠ-ⱿꜢ-ꞇꞋ-ꞿꟂ-ꟊꟵ-ꟿꬰ-ꭚꭜ-ꭤꭦ-ꭩﬀ-ﬆＡ-Ｚａ-ｚ"
  },
  {
    "name": "Lepcha",
    "bmp": "ᰀ-᰷᰻-᱉ᱍ-ᱏ"
  },
  {
    "name": "Limbu",
    "bmp": "ᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-᥏"
  },
  {
    "name": "Linear_A",
    "astral": "\uD801[\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]"
  },
  {
    "name": "Linear_B",
    "astral": "\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA]"
  },
  {
    "name": "Lisu",
    "bmp": "ꓐ-꓿",
    "astral": "𑾰"
  },
  {
    "name": "Lycian",
    "astral": "\uD800[\uDE80-\uDE9C]"
  },
  {
    "name": "Lydian",
    "astral": "\uD802[\uDD20-\uDD39\uDD3F]"
  },
  {
    "name": "Mahajani",
    "astral": "\uD804[\uDD50-\uDD76]"
  },
  {
    "name": "Makasar",
    "astral": "\uD807[\uDEE0-\uDEF8]"
  },
  {
    "name": "Malayalam",
    "bmp": "ഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿ"
  },
  {
    "name": "Mandaic",
    "bmp": "ࡀ-࡛࡞"
  },
  {
    "name": "Manichaean",
    "astral": "\uD802[\uDEC0-\uDEE6\uDEEB-\uDEF6]"
  },
  {
    "name": "Marchen",
    "astral": "\uD807[\uDC70-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]"
  },
  {
    "name": "Masaram_Gondi",
    "astral": "\uD807[\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]"
  },
  {
    "name": "Medefaidrin",
    "astral": "\uD81B[\uDE40-\uDE9A]"
  },
  {
    "name": "Meetei_Mayek",
    "bmp": "ꫠ-꫶ꯀ-꯭꯰-꯹"
  },
  {
    "name": "Mende_Kikakui",
    "astral": "\uD83A[\uDC00-\uDCC4\uDCC7-\uDCD6]"
  },
  {
    "name": "Meroitic_Cursive",
    "astral": "\uD802[\uDDA0-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDDFF]"
  },
  {
    "name": "Meroitic_Hieroglyphs",
    "astral": "\uD802[\uDD80-\uDD9F]"
  },
  {
    "name": "Miao",
    "astral": "\uD81B[\uDF00-\uDF4A\uDF4F-\uDF87\uDF8F-\uDF9F]"
  },
  {
    "name": "Modi",
    "astral": "\uD805[\uDE00-\uDE44\uDE50-\uDE59]"
  },
  {
    "name": "Mongolian",
    "bmp": "᠀᠁᠄᠆-᠎᠐-᠙ᠠ-ᡸᢀ-ᢪ",
    "astral": "\uD805[\uDE60-\uDE6C]"
  },
  {
    "name": "Mro",
    "astral": "\uD81A[\uDE40-\uDE5E\uDE60-\uDE69\uDE6E\uDE6F]"
  },
  {
    "name": "Multani",
    "astral": "\uD804[\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA9]"
  },
  {
    "name": "Myanmar",
    "bmp": "က-႟ꧠ-ꧾꩠ-ꩿ"
  },
  {
    "name": "Nabataean",
    "astral": "\uD802[\uDC80-\uDC9E\uDCA7-\uDCAF]"
  },
  {
    "name": "Nandinagari",
    "astral": "\uD806[\uDDA0-\uDDA7\uDDAA-\uDDD7\uDDDA-\uDDE4]"
  },
  {
    "name": "New_Tai_Lue",
    "bmp": "ᦀ-ᦫᦰ-ᧉ᧐-᧚᧞᧟"
  },
  {
    "name": "Newa",
    "astral": "\uD805[\uDC00-\uDC5B\uDC5D-\uDC61]"
  },
  {
    "name": "Nko",
    "bmp": "߀-ߺ߽-߿"
  },
  {
    "name": "Nushu",
    "astral": "𖿡|\uD82C[\uDD70-\uDEFB]"
  },
  {
    "name": "Nyiakeng_Puachue_Hmong",
    "astral": "\uD838[\uDD00-\uDD2C\uDD30-\uDD3D\uDD40-\uDD49\uDD4E\uDD4F]"
  },
  {
    "name": "Ogham",
    "bmp": " -᚜"
  },
  {
    "name": "Ol_Chiki",
    "bmp": "᱐-᱿"
  },
  {
    "name": "Old_Hungarian",
    "astral": "\uD803[\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDCFF]"
  },
  {
    "name": "Old_Italic",
    "astral": "\uD800[\uDF00-\uDF23\uDF2D-\uDF2F]"
  },
  {
    "name": "Old_North_Arabian",
    "astral": "\uD802[\uDE80-\uDE9F]"
  },
  {
    "name": "Old_Permic",
    "astral": "\uD800[\uDF50-\uDF7A]"
  },
  {
    "name": "Old_Persian",
    "astral": "\uD800[\uDFA0-\uDFC3\uDFC8-\uDFD5]"
  },
  {
    "name": "Old_Sogdian",
    "astral": "\uD803[\uDF00-\uDF27]"
  },
  {
    "name": "Old_South_Arabian",
    "astral": "\uD802[\uDE60-\uDE7F]"
  },
  {
    "name": "Old_Turkic",
    "astral": "\uD803[\uDC00-\uDC48]"
  },
  {
    "name": "Oriya",
    "bmp": "ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍୕-ୗଡ଼ଢ଼ୟ-ୣ୦-୷"
  },
  {
    "name": "Osage",
    "astral": "\uD801[\uDCB0-\uDCD3\uDCD8-\uDCFB]"
  },
  {
    "name": "Osmanya",
    "astral": "\uD801[\uDC80-\uDC9D\uDCA0-\uDCA9]"
  },
  {
    "name": "Pahawh_Hmong",
    "astral": "\uD81A[\uDF00-\uDF45\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]"
  },
  {
    "name": "Palmyrene",
    "astral": "\uD802[\uDC60-\uDC7F]"
  },
  {
    "name": "Pau_Cin_Hau",
    "astral": "\uD806[\uDEC0-\uDEF8]"
  },
  {
    "name": "Phags_Pa",
    "bmp": "ꡀ-꡷"
  },
  {
    "name": "Phoenician",
    "astral": "\uD802[\uDD00-\uDD1B\uDD1F]"
  },
  {
    "name": "Psalter_Pahlavi",
    "astral": "\uD802[\uDF80-\uDF91\uDF99-\uDF9C\uDFA9-\uDFAF]"
  },
  {
    "name": "Rejang",
    "bmp": "ꤰ-꥓꥟"
  },
  {
    "name": "Runic",
    "bmp": "ᚠ-ᛪᛮ-ᛸ"
  },
  {
    "name": "Samaritan",
    "bmp": "ࠀ-࠭࠰-࠾"
  },
  {
    "name": "Saurashtra",
    "bmp": "ꢀ-ꣅ꣎-꣙"
  },
  {
    "name": "Sharada",
    "astral": "\uD804[\uDD80-\uDDDF]"
  },
  {
    "name": "Shavian",
    "astral": "\uD801[\uDC50-\uDC7F]"
  },
  {
    "name": "Siddham",
    "astral": "\uD805[\uDD80-\uDDB5\uDDB8-\uDDDD]"
  },
  {
    "name": "SignWriting",
    "astral": "\uD836[\uDC00-\uDE8B\uDE9B-\uDE9F\uDEA1-\uDEAF]"
  },
  {
    "name": "Sinhala",
    "bmp": "ඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴",
    "astral": "\uD804[\uDDE1-\uDDF4]"
  },
  {
    "name": "Sogdian",
    "astral": "\uD803[\uDF30-\uDF59]"
  },
  {
    "name": "Sora_Sompeng",
    "astral": "\uD804[\uDCD0-\uDCE8\uDCF0-\uDCF9]"
  },
  {
    "name": "Soyombo",
    "astral": "\uD806[\uDE50-\uDEA2]"
  },
  {
    "name": "Sundanese",
    "bmp": "ᮀ-ᮿ᳀-᳇"
  },
  {
    "name": "Syloti_Nagri",
    "bmp": "ꠀ-꠬"
  },
  {
    "name": "Syriac",
    "bmp": "܀-܍܏-݊ݍ-ݏࡠ-ࡪ"
  },
  {
    "name": "Tagalog",
    "bmp": "ᜀ-ᜌᜎ-᜔"
  },
  {
    "name": "Tagbanwa",
    "bmp": "ᝠ-ᝬᝮ-ᝰᝲᝳ"
  },
  {
    "name": "Tai_Le",
    "bmp": "ᥐ-ᥭᥰ-ᥴ"
  },
  {
    "name": "Tai_Tham",
    "bmp": "ᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭"
  },
  {
    "name": "Tai_Viet",
    "bmp": "ꪀ-ꫂꫛ-꫟"
  },
  {
    "name": "Takri",
    "astral": "\uD805[\uDE80-\uDEB8\uDEC0-\uDEC9]"
  },
  {
    "name": "Tamil",
    "bmp": "ஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺",
    "astral": "\uD807[\uDFC0-\uDFF1\uDFFF]"
  },
  {
    "name": "Tangut",
    "astral": "𖿠|[\uD81C-\uD820][\uDC00-\uDFFF]|\uD821[\uDC00-\uDFF7]|\uD822[\uDC00-\uDEFF]|\uD823[\uDD00-\uDD08]"
  },
  {
    "name": "Telugu",
    "bmp": "ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘ-ౚౠ-ౣ౦-౯౷-౿"
  },
  {
    "name": "Thaana",
    "bmp": "ހ-ޱ"
  },
  {
    "name": "Thai",
    "bmp": "ก-ฺเ-๛"
  },
  {
    "name": "Tibetan",
    "bmp": "ༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿔࿙࿚"
  },
  {
    "name": "Tifinagh",
    "bmp": "ⴰ-ⵧⵯ⵰⵿"
  },
  {
    "name": "Tirhuta",
    "astral": "\uD805[\uDC80-\uDCC7\uDCD0-\uDCD9]"
  },
  {
    "name": "Ugaritic",
    "astral": "\uD800[\uDF80-\uDF9D\uDF9F]"
  },
  {
    "name": "Vai",
    "bmp": "ꔀ-ꘫ"
  },
  {
    "name": "Wancho",
    "astral": "\uD838[\uDEC0-\uDEF9\uDEFF]"
  },
  {
    "name": "Warang_Citi",
    "astral": "\uD806[\uDCA0-\uDCF2\uDCFF]"
  },
  {
    "name": "Yezidi",
    "astral": "\uD803[\uDE80-\uDEA9\uDEAB-\uDEAD\uDEB0\uDEB1]"
  },
  {
    "name": "Yi",
    "bmp": "ꀀ-ꒌ꒐-꓆"
  },
  {
    "name": "Zanabazar_Square",
    "astral": "\uD806[\uDE00-\uDE47]"
  }
];
var unicodeScripts = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _scripts = interopRequireDefault(scripts);
  var _default = function _default2(XRegExp) {
    if (!XRegExp.addUnicodeData) {
      throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");
    }
    XRegExp.addUnicodeData(_scripts["default"]);
  };
  exports["default"] = _default;
  module.exports = exports.default;
});
unwrapExports(unicodeScripts);
var lib = createCommonjsModule(function(module, exports) {
  defineProperty$2(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _xregexp = interopRequireDefault(xregexp);
  var _build = interopRequireDefault(build);
  var _matchrecursive = interopRequireDefault(matchrecursive);
  var _unicodeBase = interopRequireDefault(unicodeBase);
  var _unicodeBlocks = interopRequireDefault(unicodeBlocks);
  var _unicodeCategories = interopRequireDefault(unicodeCategories);
  var _unicodeProperties = interopRequireDefault(unicodeProperties);
  var _unicodeScripts = interopRequireDefault(unicodeScripts);
  (0, _build["default"])(_xregexp["default"]);
  (0, _matchrecursive["default"])(_xregexp["default"]);
  (0, _unicodeBase["default"])(_xregexp["default"]);
  (0, _unicodeBlocks["default"])(_xregexp["default"]);
  (0, _unicodeCategories["default"])(_xregexp["default"]);
  (0, _unicodeProperties["default"])(_xregexp["default"]);
  (0, _unicodeScripts["default"])(_xregexp["default"]);
  var _default = _xregexp["default"];
  exports["default"] = _default;
  module.exports = exports.default;
});
var X = unwrapExports(lib);
var lib_1 = lib.OuterXRegExp;
var dangerousPatterns = [
  /([^\\p{scx=kana}\\p{scx=hira}\\p{scx=hani}])/,
  /([\u30ce\u30f3\u30bd\u30be])/,
  /([^\\p{scx=kana}\\p{scx=hira}\\p{scx=hani}]|)/,
  /([^\\p{scx=kana}\\p{scx=hira}]\u30fc|^\u30fc|)/,
  /([^\\p{scx=kana}][\u30fd\u30fe]|^[\u30fd\u30fe]|)/,
  /(^[\\p{scx=kana}]+[\u3078-\u307a][\\p{scx=kana}]+$|)/,
  /(^[\\p{scx=hira}]+[\u30d8-\u30da][\\p{scx=hira}]+$|)/,
  /([a-z]\u30fb|\u30fb[a-z]|)/,
  /([^\\p{scx=latn}\\p{scx=grek}\\p{scx=cyrl}][\u0300-\u0339]|)/,
  /(\u0131[\u0300-\u0339]|)/,
  /([ijl]\u0307)/
];
var deviation = /[\u00df\u03c2\u200c\u200d]/;
var nonAsciiLatin = /[\u0080–\u024f]/;
var kanaCharacterException = /[\u3078-\u307a\u30d8-\u30da\u30fb-\u30fe]/;
var combiningDiacriticException = /[\u0300-\u0339]/;
var cyrillicLikeLatin = /[асԁеһіјӏорԛѕԝхуъЬҽпгѵѡ]/;
var identifierStatusAllowed = "[̀-̹]";
var latinGreekCyrillicAscii = X(`([\\p{Latin}][\\p{Greek}][\\p{Cyrillic}][0-9._-]${identifierStatusAllowed})`);
var recommended = X("[0-9A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u018F\\u01A0\\u01A1\\u01AF\\u01B0\\u01CD-\\u01DC\\u01DE-\\u01E3\\u01E6-\\u01F0\\u01F4\\u01F5\\u01F8-\\u021B\\u021E\\u021F\\u0226-\\u0233\\u0259\\u02BB\\u02BC\\u02EC\\u0300-\\u0304\\u0306-\\u030C\\u030F-\\u0311\\u0313\\u0314\\u031B\\u0323-\\u0328\\u032D\\u032E\\u0330\\u0331\\u0335\\u0338\\u0339\\u0342\\u0345\\u037B-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03FC-\\u045F\\u048A-\\u0529\\u052E\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05B4\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u0655\\u0660-\\u0669\\u0670-\\u0672\\u0674\\u0679-\\u068D\\u068F-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0750-\\u07B1\\u08A0-\\u08AC\\u08B2\\u08B6-\\u08BD\\u0901-\\u094D\\u094F\\u0950\\u0956\\u0957\\u0960-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09E0-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A35\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A5C\\u0A66-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C80\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D60\\u0D61\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D8E\\u0D91-\\u0D96\\u0D9A-\\u0DA5\\u0DA7-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDE\\u0DF2\\u0E01-\\u0E32\\u0E34-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB2\\u0EB4-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDE\\u0EDF\\u0F00\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F3E-\\u0F42\\u0F44-\\u0F47\\u0F49-\\u0F4C\\u0F4E-\\u0F51\\u0F53-\\u0F56\\u0F58-\\u0F5B\\u0F5D-\\u0F68\\u0F6A-\\u0F6C\\u0F71\\u0F72\\u0F74\\u0F7A-\\u0F80\\u0F82-\\u0F84\\u0F86-\\u0F92\\u0F94-\\u0F97\\u0F99-\\u0F9C\\u0F9E-\\u0FA1\\u0FA3-\\u0FA6\\u0FA8-\\u0FAB\\u0FAD-\\u0FB8\\u0FBA-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10C7\\u10CD\\u10D0-\\u10F0\\u10F7-\\u10FA\\u10FD-\\u10FF\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u1780-\\u17A2\\u17A5-\\u17A7\\u17A9-\\u17B3\\u17B6-\\u17CA\\u17D2\\u17D7\\u17DC\\u17E0-\\u17E9\\u1C80-\\u1C88\\u1E00-\\u1E99\\u1E9E\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F70\\u1F72\\u1F74\\u1F76\\u1F78\\u1F7A\\u1F7C\\u1F80-\\u1FB4\\u1FB6-\\u1FBA\\u1FBC\\u1FC2-\\u1FC4\\u1FC6-\\u1FC8\\u1FCA\\u1FCC\\u1FD0-\\u1FD2\\u1FD6-\\u1FDA\\u1FE0-\\u1FE2\\u1FE4-\\u1FEA\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FF8\\u1FFA\\u1FFC\\u2D27\\u2D2D\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3041-\\u3096\\u3099\\u309A\\u309D\\u309E\\u30A1-\\u30FA\\u30FC-\\u30FE\\u3105-\\u312D\\u31A0-\\u31BA\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA660\\uA661\\uA674-\\uA67B\\uA67F\\uA69F\\uA717-\\uA71F\\uA788\\uA78D\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7AE\\uA7FA\\uA9E7-\\uA9FE\\uAA60-\\uAA76\\uAA7A-\\uAA7F\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAC00-\\uD7A3\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29\\u20000-\\u2A6D6\\u2A700-\\u2B734\\u2B740-\\u2B81D\\u2B820-\\u2CEA1]");
var inclusion = X("['\\-.\\:\\u00B7\\u0375\\u058A\\u05F3\\u05F4\\u06FD\\u06FE\\u0F0B\\u200C\\u200D\\u2010\\u2019\\u2027\\u30A0\\u30FB]");
var allowed = X.union([inclusion, recommended], "i");
var removed = X("[\\u0338\\u058a\\u2010\\u2019\\u2027\\u30a0\\u02bb\\u02bc\\u0620\\u0F8C\\u0F8D\\u0F8E\\u0F8F\\u01CD-\\u01DC\\u1C80-\\u1C8F\\u1E00-\\u1E9B\\u1F00-\\u1FFF\\uA640-\\uA69F\\uA720-\\uA7FF]");
var inBasicLatin = X("\\p{InBasic_Latin}");
var inLatin1Supplement = X("\\p{InLatin-1_Supplement}");
var inLatinExtendedA = X("\\p{InLatin_Extended-A}");
var inLatinExtendedB = X("\\p{InLatin_Extended-B}");
var inIpaExtensions = X("\\p{InIPA_Extensions}");
var inSpacingModifierLetters = X("\\p{InSpacing_Modifier_Letters}");
var inCombiningDiacriticalMarks = X("\\p{InCombining_Diacritical_Marks}");
var inGreekAndCoptic = X("\\p{InGreek_and_Coptic}");
var inCyrillic = X("\\p{InCyrillic}");
var inArmenian = X("\\p{InArmenian}");
var inHebrew = X("\\p{InHebrew}");
var inArabic = X("\\p{InArabic}");
var inSyriac = X("\\p{InSyriac}");
var inThaana = X("\\p{InThaana}");
var inDevanagari = X("\\p{InDevanagari}");
var inBengali = X("\\p{InBengali}");
var inGurmukhi = X("\\p{InGurmukhi}");
var inGujarati = X("\\p{InGujarati}");
var inOriya = X("\\p{InOriya}");
var inTamil = X("\\p{InTamil}");
var inTelugu = X("\\p{InTelugu}");
var inKannada = X("\\p{InKannada}");
var inMalayalam = X("\\p{InMalayalam}");
var inSinhala = X("\\p{InSinhala}");
var inThai = X("\\p{InThai}");
var inLao = X("\\p{InLao}");
var inTibetan = X("\\p{InTibetan}");
var inMyanmar = X("\\p{InMyanmar}");
var inGeorgian = X("\\p{InGeorgian}");
var inHangulJamo = X("\\p{InHangul_Jamo}");
var inEthiopic = X("\\p{InEthiopic}");
var inCherokee = X("\\p{InCherokee}");
var inUnifiedCanadianAboriginalSyllabics = X("\\p{InUnified_Canadian_Aboriginal_Syllabics}");
var inOgham = X("\\p{InOgham}");
var inRunic = X("\\p{InRunic}");
var inTagalog = X("\\p{InTagalog}");
var inHanunoo = X("\\p{InHanunoo}");
var inBuhid = X("\\p{InBuhid}");
var inTagbanwa = X("\\p{InTagbanwa}");
var inKhmer = X("\\p{InKhmer}");
var inMongolian = X("\\p{InMongolian}");
var inLimbu = X("\\p{InLimbu}");
var inTaiLe = X("\\p{InTai_Le}");
var inKhmerSymbols = X("\\p{InKhmer_Symbols}");
var inPhoneticExtensions = X("\\p{InPhonetic_Extensions}");
var inLatinExtendedAdditional = X("\\p{InLatin_Extended_Additional}");
var inGreekExtended = X("\\p{InGreek_Extended}");
var inGeneralPunctuation = X("\\p{InGeneral_Punctuation}");
var inSuperscriptsAndSubscripts = X("\\p{InSuperscripts_and_Subscripts}");
var inCurrencySymbols = X("\\p{InCurrency_Symbols}");
var inCombiningDiacriticalMarksForSymbols = X("\\p{InCombining_Diacritical_Marks_for_Symbols}");
var inLetterlikeSymbols = X("\\p{InLetterlike_Symbols}");
var inNumberForms = X("\\p{InNumber_Forms}");
var inArrows = X("\\p{InArrows}");
var inMathematicalOperators = X("\\p{InMathematical_Operators}");
var inMiscellaneousTechnical = X("\\p{InMiscellaneous_Technical}");
var inControlPictures = X("\\p{InControl_Pictures}");
var inOpticalCharacterRecognition = X("\\p{InOptical_Character_Recognition}");
var inEnclosedAlphanumerics = X("\\p{InEnclosed_Alphanumerics}");
var inBoxDrawing = X("\\p{InBox_Drawing}");
var inBlockElements = X("\\p{InBlock_Elements}");
var inGeometricShapes = X("\\p{InGeometric_Shapes}");
var inMiscellaneousSymbols = X("\\p{InMiscellaneous_Symbols}");
var inDingbats = X("\\p{InDingbats}");
var inMiscellaneousMathematicalSymbolsA = X("\\p{InMiscellaneous_Mathematical_Symbols-A}");
var inSupplementalArrowsA = X("\\p{InSupplemental_Arrows-A}");
var inBraillePatterns = X("\\p{InBraille_Patterns}");
var inSupplementalArrowsB = X("\\p{InSupplemental_Arrows-B}");
var inMiscellaneousMathematicalSymbolsB = X("\\p{InMiscellaneous_Mathematical_Symbols-B}");
var inSupplementalMathematicalOperators = X("\\p{InSupplemental_Mathematical_Operators}");
var inMiscellaneousSymbolsAndArrows = X("\\p{InMiscellaneous_Symbols_and_Arrows}");
var inCjkRadicalsSupplement = X("\\p{InCJK_Radicals_Supplement}");
var inKangxiRadicals = X("\\p{InKangxi_Radicals}");
var inIdeographicDescriptionCharacters = X("\\p{InIdeographic_Description_Characters}");
var inCjkSymbolsAndPunctuation = X("\\p{InCJK_Symbols_and_Punctuation}");
var inHiragana = X("\\p{InHiragana}");
var inKatakana = X("\\p{InKatakana}");
var inBopomofo = X("\\p{InBopomofo}");
var inHangulCompatibilityJamo = X("\\p{InHangul_Compatibility_Jamo}");
var inKanbun = X("\\p{InKanbun}");
var inBopomofoExtended = X("\\p{InBopomofo_Extended}");
var inKatakanaPhoneticExtensions = X("\\p{InKatakana_Phonetic_Extensions}");
var inEnclosedCjkLettersAndMonths = X("\\p{InEnclosed_CJK_Letters_and_Months}");
var inCjkCompatibility = X("\\p{InCJK_Compatibility}");
var inCjkUnifiedIdeographsExtensionA = X("\\p{InCJK_Unified_Ideographs_Extension_A}");
var inYijingHexagramSymbols = X("\\p{InYijing_Hexagram_Symbols}");
var inCJKUnifiedIdeographs = X("\\p{InCJK_Unified_Ideographs}");
var inYiSyllables = X("\\p{InYi_Syllables}");
var inYiRadicals = X("\\p{InYi_Radicals}");
var inHangulSyllables = X("\\p{InHangul_Syllables}");
var inHighSurrogates = X("\\p{InHigh_Surrogates}");
var inHighPrivateUseSurrogates = X("\\p{InHigh_Private_Use_Surrogates}");
var inLowSurrogates = X("\\p{InLow_Surrogates}");
var inPrivateUseArea = X("\\p{InPrivate_Use_Area}");
var inCjkCompatibilityIdeographs = X("\\p{InCJK_Compatibility_Ideographs}");
var inAlphabeticPresentationForms = X("\\p{InAlphabetic_Presentation_Forms}");
var inArabicPresentationFormsA = X("\\p{InArabic_Presentation_Forms-A}");
var inVariationSelectors = X("\\p{InVariation_Selectors}");
var inCombiningHalfMarks = X("\\p{InCombining_Half_Marks}");
var inCjkCompatibilityForms = X("\\p{InCJK_Compatibility_Forms}");
var inSmallFormVariants = X("\\p{InSmall_Form_Variants}");
var inArabicPresentationFormsB = X("\\p{InArabic_Presentation_Forms-B}");
var inHalfwidthAndFullwidthForms = X("\\p{InHalfwidth_and_Fullwidth_Forms}");
var inSpecials = X("\\p{InSpecials}");
var emojiRegex = () => {
  return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])|\uD83E\uDEF1\uD83C\uDFFF\u200D\uD83E\uDEF2)(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])|\uD83E\uDEF1\uD83C\uDFFE\u200D\uD83E\uDEF2)(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])|\uD83E\uDEF1\uD83C\uDFFD\u200D\uD83E\uDEF2)(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])|\uD83E\uDEF1\uD83C\uDFFC\u200D\uD83E\uDEF2)(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])|\uD83E\uDEF1\uD83C\uDFFB\u200D\uD83E\uDEF2)(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|[\u2695\u2696\u2708]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])))|\u200D(?:\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?|\u200D(?:\uD83D\uDC8B\u200D)?)\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\u200D[\u2695\u2696\u2708])?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764(?:\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F?\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F?\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3C-\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83D\uDC41\uFE0F?\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83C\uDFF3\uFE0F?\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F?\u200D\u26A7|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDEF1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764(?:\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\u200D(?:\uD83D\uDD25|\uD83E\uDE79))|\uD83D\uDC41\uFE0F?|\uD83C\uDFF3\uFE0F?|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3C-\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F?\u20E3|\uD83E\uDD3C(?:\uD83C[\uDFFB-\uDFFF])|\u2764\uFE0F?|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF6])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD3C\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF6]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDDDE\uDDDF]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B50]|\uD83C[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDD-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC2\uDED0-\uDED9\uDEE0-\uDEE7]/g;
};
var letter = X("\\p{Letter}");
var lowercaseLetter = X("\\p{Lowercase_Letter}");
var uppercaseLetter = X("\\p{Uppercase_Letter}");
var titlecaseLetter = X("\\p{Titlecase_Letter}");
var casedLetter = X("\\p{Cased_Letter}");
var modifiedLetter = X("\\p{Modifier_Letter}");
var otherLetter = X("\\p{Other_Letter}");
var mark = X("\\p{Mark}");
var nonSpacingMark = X("\\p{Non_Spacing_Mark}");
var enclosingMark = X("\\p{Enclosing_Mark}");
var separator = X("\\p{Separator}");
var spaceSeparator = X("\\p{Space_Separator}");
var lineSeparator = X("\\p{Line_Separator}");
var paragraphSeparator = X("\\p{Paragraph_Separator}");
var symbol$5 = X("\\p{Symbol}");
var mathSymbol = X("\\p{Math_Symbol}");
var currencySymbol = X("\\p{Currency_Symbol}");
var modifierSymbol = X("\\p{Modifier_Symbol}");
var otherSymbol = X("\\p{Other_Symbol}");
var number = X("\\p{Number}");
var decimalDigitNumber = X("\\p{Nd}");
var letterNumber = X("\\p{Letter_Number}");
var otherNumber = X("\\p{Other_Number}");
var punctuation = X("\\p{Punctuation}");
var dashPunctuation = X("\\p{Dash_Punctuation}");
var openPunctuation = X("\\p{Open_Punctuation}");
var closePunctuation = X("\\p{Close_Punctuation}");
var initialPunctuation = X("\\p{Initial_Punctuation}");
var finalPunctuation = X("\\p{Final_Punctuation}");
var connectorPunctuation = X("\\p{Connector_Punctuation}");
var otherPunctuation = X("\\p{Other_Punctuation}");
var other = X("\\p{Other}");
var control = X("\\p{Control}");
var format = X("\\p{Format}");
var privateUse = X("\\p{Private_Use}");
var surrogate = X("\\p{Surrogate}");
var unassigned = X("\\p{Unassigned}");
var emoji = X(emojiRegex());
var common = X("\\p{Common}");
var arabic = X("\\p{Arabic}");
var armenian = X("\\p{Armenian}");
var bengali = X("\\p{Bengali}");
var bopomofo = X("\\p{Bopomofo}");
var braille = X("\\p{Braille}");
var buhid = X("\\p{Buhid}");
var canadianAboriginal = X("\\p{Canadian_Aboriginal}");
var cherokee = X("\\p{Cherokee}");
var cyrillic = X("\\p{Cyrillic}");
var devanagari = X("\\p{Devanagari}");
var ethiopic = X("\\p{Ethiopic}");
var georgian = X("\\p{Georgian}");
var greek = X("\\p{Greek}");
var gujarati = X("\\p{Gujarati}");
var gurmukhi = X("\\p{Gurmukhi}");
var han = X("\\p{Han}");
var hangul = X("\\p{Hangul}");
var hanunoo = X("\\p{Hanunoo}");
var hebrew = X("\\p{Hebrew}");
var hiragana = X("\\p{Hiragana}");
var inherited = X("\\p{Inherited}");
var kannada = X("\\p{Kannada}");
var katakana = X("\\p{Katakana}");
var khmer = X("\\p{Khmer}");
var lao = X("\\p{Lao}");
var latin = X("\\p{Latin}");
var limbu = X("\\p{Limbu}");
var malayalam = X("\\p{Malayalam}");
var mongolian = X("\\p{Mongolian}");
var myanmar = X("\\p{Myanmar}");
var ogham = X("\\p{Ogham}");
var oriya = X("\\p{Oriya}");
var runic = X("\\p{Runic}");
var sinhala = X("\\p{Sinhala}");
var syriac = X("\\p{Syriac}");
var tagalog = X("\\p{Tagalog}");
var tagbanwa = X("\\p{Tagbanwa}");
var taile = X("\\p{TaiLe}");
var tamil = X("\\p{Tamil}");
var telugu = X("\\p{Telugu}");
var thaana = X("\\p{Thaana}");
var thai = X("\\p{Thai}");
var tibetan = X("\\p{Tibetan}");
var yi = X("\\p{Yi}");
var scripts$1 = Object.freeze({
  common,
  arabic,
  armenian,
  bengali,
  bopomofo,
  braille,
  buhid,
  canadianAboriginal,
  cherokee,
  cyrillic,
  devanagari,
  ethiopic,
  georgian,
  greek,
  gujarati,
  gurmukhi,
  han,
  hangul,
  hanunoo,
  hebrew,
  hiragana,
  inherited,
  kannada,
  katakana,
  khmer,
  lao,
  latin,
  limbu,
  malayalam,
  mongolian,
  myanmar,
  ogham,
  oriya,
  runic,
  sinhala,
  syriac,
  tagalog,
  tagbanwa,
  taile,
  tamil,
  telugu,
  thaana,
  thai,
  tibetan,
  yi
});
var ScriptResolver = class {
  constructor(url) {
    this.resolvedScripts = Object.entries(scripts$1).filter((script) => {
      return script[1].test(url);
    }).reduce((previousValue, currentValue) => {
      return Object.assign(Object.assign({}, previousValue), { [currentValue[0]]: true });
    }, {});
  }
  singleScript() {
    if (Object.keys(this.resolvedScripts).length === 1) {
      return true;
    }
    const scriptCombinations = [
      // common, bopomofo, han
      ["common", "bopomofo"],
      ["common", "han"],
      ["common", "bopomofo", "han"],
      ["bopomofo", "han"],
      // common, katakana, hiragana, katakana, han
      ["common", "katakana"],
      ["common", "hiragana"],
      ["common", "katakana", "hiragana"],
      ["katakana", "hiragana"],
      ["common", "han"],
      ["common", "katakana", "han"],
      ["katakana", "han"],
      ["common", "hiragana", "han"],
      ["common", "katakana", "hiragana", "han"],
      ["katakana", "hiragana", "han"],
      ["hiragana", "han"],
      // common, han, hangul
      ["common", "han"],
      ["common", "hangul"],
      ["common", "han", "hangul"],
      ["han", "hangul"]
    ];
    return scriptCombinations.some((combination) => combination.every((scriptName) => this.resolvedScripts.hasOwnProperty(scriptName)));
  }
};
var SpoofChecker = class {
  constructor() {
    this.status = ErrorCode.ZERO_ERROR;
    this.checks = SpoofChecks.ALL_CHECKS;
    this.restrictionLevel = RestrictionLevel.HIGHLY_RESTRICTIVE;
  }
  safeToDisplayAsUnicode(label, isTldAscii) {
    this.status = ErrorCode.ZERO_ERROR;
    label = label.replace(emoji, "a");
    let result = this.check(label);
    if (this.status > ErrorCode.ZERO_ERROR || result & SpoofChecks.ALL_CHECKS) {
      return false;
    }
    result &= RestrictionLevel.RESTRICTION_LEVEL_MASK;
    if (deviation.test(label)) {
      return false;
    }
    if (result === RestrictionLevel.ASCII) {
      return true;
    }
    if (result === RestrictionLevel.SINGLE_SCRIPT_RESTRICTIVE && !kanaCharacterException.test(label) && !combiningDiacriticException.test(label)) {
      return !isTldAscii || !this.isMadeOfLatinAlikeCyrillic(label);
    }
    if (nonAsciiLatin.test(label) && !latinGreekCyrillicAscii.test(label)) {
      return false;
    }
    return !dangerousPatterns.some((d) => d.test(label));
  }
  check(input) {
    let result = 0;
    const checkResult = new CheckResult();
    if ((this.checks & SpoofChecks.RESTRICTION_LEVEL) !== 0) {
      const restrictionLevel = this.getRestrictionLevel(input);
      if (restrictionLevel > this.restrictionLevel) {
        result |= SpoofChecks.RESTRICTION_LEVEL;
      }
      checkResult.restrictionLevel = restrictionLevel;
    }
    if (0 !== (this.checks & SpoofChecks.MIXED_NUMBERS)) {
      const numerics = this.getNumerics(input);
      if (numerics.length > 1) {
        result |= SpoofChecks.MIXED_NUMBERS;
      }
      checkResult.numerics = numerics;
    }
    if (0 !== (this.checks & SpoofChecks.CHAR_LIMIT)) {
      for (let i = 0; i < input.length; ) {
        i++;
        if (!allowed.test(input[i])) {
          result |= SpoofChecks.CHAR_LIMIT;
          break;
        }
      }
    }
    if (0 !== (this.checks & SpoofChecks.INVISIBLE)) {
      const nfdText = input.normalize("NFD");
      const nfdLength = nfdText.length;
      let i;
      let c;
      let firstNonspacingMark = 0;
      let haveMultipleMarks = false;
      let marksSeenSoFar = [];
      for (i = 0; i < nfdLength; ) {
        c = nfdText.charCodeAt(i);
        i++;
        if (!nonSpacingMark.test(nfdText[i])) {
          firstNonspacingMark = 0;
          if (haveMultipleMarks) {
            marksSeenSoFar = [];
            haveMultipleMarks = false;
          }
          continue;
        }
        if (firstNonspacingMark === 0) {
          firstNonspacingMark = c;
          continue;
        }
        if (!haveMultipleMarks) {
          marksSeenSoFar.push(firstNonspacingMark);
          haveMultipleMarks = true;
        }
        if (marksSeenSoFar.indexOf(c) > -1) {
          result |= SpoofChecks.INVISIBLE;
          break;
        }
        marksSeenSoFar.push(c);
      }
    }
    checkResult.checks = result;
    return checkResult.toCombinedBitmask(this.checks);
  }
  getRestrictionLevel(input) {
    if (!Array.from(input).every((character) => allowed.test(character) && !removed.test(character))) {
      return RestrictionLevel.UNRESTRICTIVE;
    }
    let ascii = true;
    for (let i = 0; i < input.length; i++) {
      if (input.charCodeAt(i) > 127) {
        ascii = false;
        break;
      }
    }
    if (ascii) {
      return RestrictionLevel.ASCII;
    }
    const scriptResolver = new ScriptResolver(input);
    if (scriptResolver.singleScript()) {
      return RestrictionLevel.SINGLE_SCRIPT_RESTRICTIVE;
    } else {
      return RestrictionLevel.HIGHLY_RESTRICTIVE;
    }
  }
  getNumerics(input) {
    const result = [];
    let charCode;
    for (let i = 0; i < input.length; i++) {
      charCode = input.charCodeAt(i);
      if (decimalDigitNumber.test(input[i])) {
        const zero = String.fromCharCode(charCode - parseInt(input[i], 16));
        if (result.includes(zero)) {
          continue;
        }
        result.push(zero);
      }
    }
    return result;
  }
  isMadeOfLatinAlikeCyrillic(label) {
    const cyrillicInLabel = Array.from(label).filter((character) => cyrillic.test(character));
    return cyrillicInLabel.length > 0 && cyrillicInLabel.every((character) => {
      return cyrillicLikeLatin.test(character);
    });
  }
};
function validate(input) {
  try {
    const domain = new Domain(input);
    const checker = new SpoofChecker();
    return domain.labels.every((label) => {
      return checker.safeToDisplayAsUnicode(label, domain.isTldAscii);
    });
  } catch (e) {
    return false;
  }
}

export {
  validate
};
/*! Bundled license information:

@ensdomains/ens-validation/dist/ens-validation.es6.js:
  (*! https://mths.be/punycode v1.4.1 by @mathias *)
  (*!
   * XRegExp 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2007-present MIT License
   *)
  (*!
   * XRegExp.build 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2012-present MIT License
   *)
  (*!
   * XRegExp.matchRecursive 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2009-present MIT License
   *)
  (*!
   * XRegExp Unicode Base 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2008-present MIT License
   *)
  (*!
   * XRegExp Unicode Blocks 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2010-present MIT License
   * Unicode data by Mathias Bynens <mathiasbynens.be>
   *)
  (*!
   * XRegExp Unicode Categories 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2010-present MIT License
   * Unicode data by Mathias Bynens <mathiasbynens.be>
   *)
  (*!
   * XRegExp Unicode Properties 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2012-present MIT License
   * Unicode data by Mathias Bynens <mathiasbynens.be>
   *)
  (*!
   * XRegExp Unicode Scripts 4.4.1
   * <xregexp.com>
   * Steven Levithan (c) 2010-present MIT License
   * Unicode data by Mathias Bynens <mathiasbynens.be>
   *)
*/
//# sourceMappingURL=chunk-P6JGHPC7.js.map
