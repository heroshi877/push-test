{
  "version": 3,
  "sources": ["../../@web3-onboard/coinbase/dist/index.js"],
  "sourcesContent": ["function coinbaseWallet({ supportedWalletType = 'all', darkMode = false, enableMobileWalletLink = false, reloadOnDisconnect = true } = {}) {\n    return () => {\n        return {\n            label: 'Coinbase Wallet',\n            getIcon: async () => (await import('./icon.js')).default,\n            getInterface: async ({ chains, appMetadata }) => {\n                if (enableMobileWalletLink || reloadOnDisconnect || darkMode) {\n                    console.warn('darkMode, enableMobileWalletLink and reloadOnDisconnect init props are deprecated after version 2.2.7 of @web3-onboard/coinbase');\n                }\n                const { name, icon } = appMetadata || {};\n                // according to https://github.com/wagmi-dev/wagmi/issues/383\n                // @coinbase/wallet-sdk export double default fields\n                // so we need to detect it to get the real constructor\n                const { default: CoinbaseWalletSDK } = await import('@coinbase/wallet-sdk');\n                const CoinbaseWalletSDKConstructor = (CoinbaseWalletSDK.default\n                    ? CoinbaseWalletSDK.default\n                    : CoinbaseWalletSDK);\n                const { isHex, toHex, createEIP1193Provider, fromHex } = await import('@web3-onboard/common');\n                const base64 = window.btoa(icon || '');\n                const appLogoUrl = `data:image/svg+xml;base64,${base64}`;\n                const appChainIds = chains.map(({ id }) => fromHex(id, 'number'));\n                const instance = new CoinbaseWalletSDKConstructor({\n                    appName: name || '',\n                    appLogoUrl,\n                    appChainIds\n                });\n                const coinbaseWalletProvider = instance.makeWeb3Provider({\n                    options: supportedWalletType\n                });\n                // patch the chainChanged event\n                const on = coinbaseWalletProvider.on.bind(coinbaseWalletProvider);\n                coinbaseWalletProvider.on = (event, listener) => {\n                    // @ts-ignore\n                    on(event, val => {\n                        if (event === 'chainChanged') {\n                            let hexVal;\n                            if (isHex(val)) {\n                                hexVal = val;\n                            }\n                            else {\n                                hexVal = toHex(val);\n                            }\n                            // @ts-ignore\n                            listener(hexVal);\n                            return;\n                        }\n                        listener(val);\n                    });\n                    return coinbaseWalletProvider;\n                };\n                const provider = createEIP1193Provider(coinbaseWalletProvider);\n                provider.removeListener = (event, func) => { };\n                return {\n                    provider,\n                    instance\n                };\n            }\n        };\n    };\n}\nexport default coinbaseWallet;\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAAA,SAAS,eAAe,EAAE,sBAAsB,OAAO,WAAW,OAAO,yBAAyB,OAAO,qBAAqB,KAAK,IAAI,CAAC,GAAG;AACvI,SAAO,MAAM;AACT,WAAO;AAAA,MACH,OAAO;AAAA,MACP,SAAS,aAAa,MAAM,OAAO,oBAAW,GAAG;AAAA,MACjD,cAAc,OAAO,EAAE,QAAQ,YAAY,MAAM;AAC7C,YAAI,0BAA0B,sBAAsB,UAAU;AAC1D,kBAAQ,KAAK,iIAAiI;AAAA,QAClJ;AACA,cAAM,EAAE,MAAM,KAAK,IAAI,eAAe,CAAC;AAIvC,cAAM,EAAE,SAAS,kBAAkB,IAAI,MAAM,OAAO,oBAAsB;AAC1E,cAAM,+BAAgC,kBAAkB,UAClD,kBAAkB,UAClB;AACN,cAAM,EAAE,OAAO,OAAO,uBAAuB,QAAQ,IAAI,MAAM,OAAO,oBAAsB;AAC5F,cAAM,SAAS,OAAO,KAAK,QAAQ,EAAE;AACrC,cAAM,aAAa,6BAA6B,MAAM;AACtD,cAAM,cAAc,OAAO,IAAI,CAAC,EAAE,GAAG,MAAM,QAAQ,IAAI,QAAQ,CAAC;AAChE,cAAM,WAAW,IAAI,6BAA6B;AAAA,UAC9C,SAAS,QAAQ;AAAA,UACjB;AAAA,UACA;AAAA,QACJ,CAAC;AACD,cAAM,yBAAyB,SAAS,iBAAiB;AAAA,UACrD,SAAS;AAAA,QACb,CAAC;AAED,cAAM,KAAK,uBAAuB,GAAG,KAAK,sBAAsB;AAChE,+BAAuB,KAAK,CAAC,OAAO,aAAa;AAE7C,aAAG,OAAO,SAAO;AACb,gBAAI,UAAU,gBAAgB;AAC1B,kBAAI;AACJ,kBAAI,MAAM,GAAG,GAAG;AACZ,yBAAS;AAAA,cACb,OACK;AACD,yBAAS,MAAM,GAAG;AAAA,cACtB;AAEA,uBAAS,MAAM;AACf;AAAA,YACJ;AACA,qBAAS,GAAG;AAAA,UAChB,CAAC;AACD,iBAAO;AAAA,QACX;AACA,cAAM,WAAW,sBAAsB,sBAAsB;AAC7D,iBAAS,iBAAiB,CAAC,OAAO,SAAS;AAAA,QAAE;AAC7C,eAAO;AAAA,UACH;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,IAAO,eAAQ;",
  "names": ["import_dist"]
}
