"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ajv_1 = __importDefault(require("ajv"));
class Utils {
    static async awaitCondition(conditionFn, stopFunction, awaitInterval) {
        while (conditionFn()) {
            if (stopFunction()) {
                return;
            }
            await new Promise(resolve => setTimeout(resolve, awaitInterval));
        }
    }
    static isSchemaValid(schema) {
        Utils.validator.compile(schema);
        return Utils.validator.validateSchema(schema);
    }
    static validate(content, schema) {
        const isValid = Utils.validator.validate(schema, content);
        if (!isValid) {
            const errorMessages = Utils.validator.errorsText();
            throw new Error(`Validation Error: ${errorMessages}`);
        }
    }
    static async validateDoctype(doctype) {
        var _a, _b;
        const schemaDocId = (_b = (_a = doctype.state) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.schema;
        if (schemaDocId) {
            const schemaDoc = await doctype.context.api.loadDocument(schemaDocId);
            if (!schemaDoc) {
                throw new Error(`Schema not found for ${schemaDocId}`);
            }
            Utils.validate(doctype.content, schemaDoc.content);
        }
    }
}
exports.default = Utils;
Utils.validator = new ajv_1.default({ allErrors: true });
//# sourceMappingURL=utils.js.map