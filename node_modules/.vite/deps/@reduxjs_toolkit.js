import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'

globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
globalThis.global = globalThis.global || __global_polyfill
globalThis.process = globalThis.process || __process_polyfill

import {
  ActionTypes,
  EnhancerArray,
  MiddlewareArray,
  R,
  SHOULD_AUTOBATCH,
  TaskAbortError,
  addListener,
  applyMiddleware,
  autoBatchEnhancer,
  bindActionCreators,
  clearAllListeners,
  combineReducers,
  compose,
  configureStore,
  createAction,
  createActionCreatorInvariantMiddleware,
  createAsyncThunk,
  createDraftSafeSelector,
  createEntityAdapter,
  createImmutableStateInvariantMiddleware,
  createListenerMiddleware,
  createReducer,
  createSelector,
  createSerializableStateInvariantMiddleware,
  createSlice,
  createStore,
  d,
  e,
  findNonSerializableValue,
  getDefaultMiddleware,
  getType,
  immer_esm_default,
  isAction,
  isActionCreator,
  isAllOf,
  isAnyOf,
  isAsyncThunkAction,
  isFSA,
  isFulfilled,
  isImmutableDefault,
  isPending,
  isPlain,
  isPlainObject,
  isRejected,
  isRejectedWithValue,
  legacy_createStore,
  miniSerializeError,
  nanoid,
  prepareAutoBatched,
  r,
  removeListener,
  unwrapResult
} from "./chunk-77A62FU7.js";
import "./chunk-YRUP5UPQ.js";
import "./chunk-SX2BVNUM.js";
import "./chunk-PU7NSWDQ.js";
import "./chunk-A75VTA7U.js";
import "./chunk-O6J7OYVY.js";
export {
  EnhancerArray,
  MiddlewareArray,
  SHOULD_AUTOBATCH,
  TaskAbortError,
  ActionTypes as __DO_NOT_USE__ActionTypes,
  addListener,
  applyMiddleware,
  autoBatchEnhancer,
  bindActionCreators,
  clearAllListeners,
  combineReducers,
  compose,
  configureStore,
  createAction,
  createActionCreatorInvariantMiddleware,
  createAsyncThunk,
  createDraftSafeSelector,
  createEntityAdapter,
  createImmutableStateInvariantMiddleware,
  createListenerMiddleware,
  immer_esm_default as createNextState,
  createReducer,
  createSelector,
  createSerializableStateInvariantMiddleware,
  createSlice,
  createStore,
  R as current,
  findNonSerializableValue,
  d as freeze,
  getDefaultMiddleware,
  getType,
  isAction,
  isActionCreator,
  isAllOf,
  isAnyOf,
  isAsyncThunkAction,
  r as isDraft,
  isFSA as isFluxStandardAction,
  isFulfilled,
  isImmutableDefault,
  isPending,
  isPlain,
  isPlainObject,
  isRejected,
  isRejectedWithValue,
  legacy_createStore,
  miniSerializeError,
  nanoid,
  e as original,
  prepareAutoBatched,
  removeListener,
  unwrapResult
};
//# sourceMappingURL=@reduxjs_toolkit.js.map
