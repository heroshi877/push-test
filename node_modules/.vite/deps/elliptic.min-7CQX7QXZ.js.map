{
  "version": 3,
  "sources": ["../../openpgp/node_modules/brorand/index.js", "../../openpgp/node_modules/minimalistic-crypto-utils/lib/utils.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/utils.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/base.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/short.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/mont.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/edwards.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/index.js", "../../openpgp/node_modules/hash.js/lib/hash/sha/1.js", "../../openpgp/node_modules/hash.js/lib/hash/sha.js", "../../openpgp/node_modules/hash.js/lib/hash/hmac.js", "../../openpgp/node_modules/hash.js/lib/hash.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/precomputed/secp256k1.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curves.js", "../../openpgp/node_modules/hmac-drbg/lib/hmac-drbg.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/key.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/signature.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/index.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/key.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/signature.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/index.js", "../../openpgp/node_modules/@openpgp/elliptic/lib/elliptic.js"],
  "sourcesContent": ["var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  // Note: this implementation is according to the original paper\n  // by P. Montgomery, NOT the one by D. J. Bernstein.\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  var bytes = utils.toArray(bytes, enc);\n\n  // TODO Curve448\n  // Montgomery curve points must be represented in the compressed format\n  // https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-02#appendix-B\n  if (bytes.length === 33 && bytes[0] === 0x40)\n    bytes = bytes.slice(1, 33).reverse(); // point must be little-endian\n  if (bytes.length !== 32)\n    throw new Error('Unknown point compression format');\n  return this.point(bytes, 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n\n  // Note: the output should always be little-endian\n  // https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-02#appendix-B\n  if (compact) {\n    return [ 0x40 ].concat(this.getX().toArray('le', len));\n  } else {\n    return this.getX().toArray('be', len);\n  }\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else if (options.type === 'mont')\n    this.curve = new curve.mont(options);\n  else throw new Error('Unknown curve type.');\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, n*G != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc7748#section-4.1\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  cofactor: '8',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  cofactor: '8',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.4\ndefineCurve('brainpoolP256r1', {\n  type: 'short',\n  prime: null,\n  p: 'A9FB57DB A1EEA9BC 3E660A90 9D838D72 6E3BF623 D5262028 2013481D 1F6E5377',\n  a: '7D5A0975 FC2C3057 EEF67530 417AFFE7 FB8055C1 26DC5C6C E94A4B44 F330B5D9',\n  b: '26DC5C6C E94A4B44 F330B5D9 BBD77CBF 95841629 5CF7E1CE 6BCCDC18 FF8C07B6',\n  n: 'A9FB57DB A1EEA9BC 3E660A90 9D838D71 8C397AA3 B561A6F7 901E0E82 974856A7',\n  hash: hash.sha256, // or 384, or 512\n  gRed: false,\n  g: [\n    '8BD2AEB9CB7E57CB2C4B482FFC81B7AFB9DE27E1E3BD23C23A4453BD9ACE3262',\n    '547EF835C3DAC4FD97F8461A14611DC9C27745132DED8E545C1D54C72F046997'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.6\ndefineCurve('brainpoolP384r1', {\n  type: 'short',\n  prime: null,\n  p: '8CB91E82 A3386D28 0F5D6F7E 50E641DF 152F7109 ED5456B4 12B1DA19 7FB71123' +\n    'ACD3A729 901D1A71 87470013 3107EC53',\n  a: '7BC382C6 3D8C150C 3C72080A CE05AFA0 C2BEA28E 4FB22787 139165EF BA91F90F' +\n    '8AA5814A 503AD4EB 04A8C7DD 22CE2826',\n  b: '04A8C7DD 22CE2826 8B39B554 16F0447C 2FB77DE1 07DCD2A6 2E880EA5 3EEB62D5' +\n    '7CB43902 95DBC994 3AB78696 FA504C11',\n  n: '8CB91E82 A3386D28 0F5D6F7E 50E641DF 152F7109 ED5456B3 1F166E6C AC0425A7' +\n    'CF3AB6AF 6B7FC310 3B883202 E9046565',\n  hash: hash.sha384, // or 512\n  gRed: false,\n  g: [\n    '1D1C64F068CF45FFA2A63A81B7C13F6B8847A3E77EF14FE3DB7FCAFE0CBD10' +\n      'E8E826E03436D646AAEF87B2E247D4AF1E',\n    '8ABE1D7520F9C2A45CB1EB8E95CFD55262B70B29FEEC5864E19C054FF99129' +\n      '280E4646217791811142820341263C5315'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.7\ndefineCurve('brainpoolP512r1', {\n  type: 'short',\n  prime: null,\n  p: 'AADD9DB8 DBE9C48B 3FD4E6AE 33C9FC07 CB308DB3 B3C9D20E D6639CCA 70330871' +\n    '7D4D9B00 9BC66842 AECDA12A E6A380E6 2881FF2F 2D82C685 28AA6056 583A48F3',\n  a: '7830A331 8B603B89 E2327145 AC234CC5 94CBDD8D 3DF91610 A83441CA EA9863BC' +\n    '2DED5D5A A8253AA1 0A2EF1C9 8B9AC8B5 7F1117A7 2BF2C7B9 E7C1AC4D 77FC94CA',\n  b: '3DF91610 A83441CA EA9863BC 2DED5D5A A8253AA1 0A2EF1C9 8B9AC8B5 7F1117A7' +\n    '2BF2C7B9 E7C1AC4D 77FC94CA DC083E67 984050B7 5EBAE5DD 2809BD63 8016F723',\n  n: 'AADD9DB8 DBE9C48B 3FD4E6AE 33C9FC07 CB308DB3 B3C9D20E D6639CCA 70330870' +\n    '553E5C41 4CA92619 41866119 7FAC1047 1DB1D381 085DDADD B5879682 9CA90069',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '81AEE4BDD82ED9645A21322E9C4C6A9385ED9F70B5D916C1B43B62EEF4D009' +\n      '8EFF3B1F78E2D0D48D50D1687B93B97D5F7C6D5047406A5E688B352209BCB9F822',\n    '7DDE385D566332ECC0EABFA9CF7822FDF209F70024A57B1AA000C55B881F81' +\n      '11B2DCDE494A5F485E5BCA4BD88A2763AED1CA2B2FA8F0540678CD1E0F3AD80892'\n  ]\n});\n\n// https://en.bitcoin.it/wiki/Secp256k1\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\n// TODO: should not validate for X25519\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc, compact) {\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // For Curve25519/Curve448 we have a specific procedure.\n  // TODO Curve448\n  if (this.ec.curve.type === 'mont') {\n    var one = this.ec.curve.one;\n    var mask = one.ushln(255 - 3).sub(one).ushln(3);\n    this.priv = this.priv.or(one.ushln(255 - 1));\n    this.priv = this.priv.and(mask);\n  } else\n    // Ensure that the priv won't be bigger than n, otherwise we may fail\n    // in fixed multiplication method\n    this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  // Key generation for curve25519 is simpler\n  if (this.curve.type === 'mont') {\n    var priv = new BN(drbg.generate(32));\n    return this.keyFromPrivate(priv);\n  }\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly, bitSize) {\n  bitSize = bitSize || msg.byteLength() * 8;\n  var delta = bitSize - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.truncateMsg  = function truncateMSG(msg) {\n  // Bit size is only determined correctly for Uint8Arrays and hex strings\n  var bitSize;\n  if (msg instanceof Uint8Array) {\n    bitSize = msg.byteLength * 8;\n    msg = this._truncateToN(new BN(msg, 16), false, bitSize);\n  } else if (typeof msg === 'string') {\n    bitSize = msg.length * 4;\n    msg = this._truncateToN(new BN(msg, 16), false, bitSize);\n  } else {\n    msg = this._truncateToN(new BN(msg, 16));\n  }\n  return msg;\n}\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this.truncateMsg(msg);\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n  // Fallback to the old code\n  var ret = this._verify(this.truncateMsg(msg), signature, key) ||\n  this._verify(this._truncateToN(new BN(msg, 16)), signature, key);\n  return ret;\n};\n\nEC.prototype._verify = function _verify(msg, signature, key) {\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  if (params.hasOwnProperty('secret'))\n    this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else {\n    this._pubBytes = parseBytes(params.pub);\n    if (this._pubBytes && this._pubBytes.length === 33 &&\n        this._pubBytes[0] === 0x40)\n      this._pubBytes = this._pubBytes.slice(1, 33);\n    if (this._pubBytes && this._pubBytes.length !== 32)\n      throw new Error('Unknown point compression format');\n  }\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  // https://tools.ietf.org/html/rfc8032#section-5.1.5\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc, compact) {\n  return utils.encode((compact ? [ 0x40 ] : []).concat(this.pubBytes()), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar HmacDRBG = require('hmac-drbg');\nvar rand = require('brorand');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.curve.n.toArray()\n  });\n\n  return this.keyFromSecret(drbg.generate(32));\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n"],
  "mappings": "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ACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,mEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,mEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,mEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,mEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,kEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,mEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,iEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CACE,oEACA,kEAAA,GAEF,CAC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",
  "names": ["r", "utils", "exports", "zero2", "word", "length", "toHex", "msg", "res", "i", "toString", "toArray", "enc", "Array", "isArray", "slice", "replace", "push", "parseInt", "c", "charCodeAt", "hi", "lo", "encode", "arr", "assert", "minAssert", "minUtils", "getNAF", "num", "w", "naf", "ws", "k", "clone", "cmpn", "z", "isOdd", "mod", "andln", "isubn", "shift", "iushrn", "getJSF", "k1", "k2", "jsf", "d1", "d2", "u1", "u2", "m8", "m14", "m24", "cachedProperty", "obj", "name", "computer", "key", "prototype", "this", "call", "parseBytes", "bytes", "intFromLE", "BN", "len", "Rand", "generate", "rand", "_rand", "n", "getBytes", "Uint8Array", "getByte", "self", "crypto", "getRandomValues", "msCrypto", "window", "Error", "randomBytes", "e", "BaseCurve", "type", "conf", "p", "red", "prime", "mont", "zero", "toRed", "one", "two", "g", "pointFromJSON", "gRed", "_wnafT1", "_wnafT2", "_wnafT3", "_wnafT4", "adjustCount", "div", "redN", "_maxwellTrick", "BasePoint", "curve", "precomputed", "point", "validate", "_fixedNafMul", "doubles", "_getDoubles", "I", "step", "repr", "j", "nafW", "a", "jpoint", "b", "mixedAdd", "points", "neg", "add", "toP", "_wnafMul", "nafPoints", "_getNAFPoints", "wnd", "acc", "dblp", "_wnafMulAdd", "defW", "coeffs", "jacobianResult", "wndWidth", "max", "comb", "y", "cmp", "toJ", "redNeg", "index", "Math", "ja", "jb", "tmp", "eq", "decodePoint", "byteLength", "pointFromX", "encodeCompressed", "_encode", "compact", "x", "getX", "getY", "isEven", "concat", "precompute", "power", "beta", "_getBeta", "_hasDoubles", "ceil", "bitLength", "dbl", "ShortCurve", "Base", "tinv", "redInvm", "zeroA", "fromRed", "threeA", "sub", "endo", "_getEndomorphism", "_endoWnafT1", "_endoWnafT2", "inherits", "Point", "isRed", "inf", "forceRed", "JPoint", "zOne", "MontCurve", "i4", "a24", "redMul", "redAdd", "modn", "lambda", "betas", "_getEndoRoots", "lambdas", "mul", "basis", "map", "vec", "_getEndoBasis", "ntinv", "s", "redSqrt", "redSub", "a0", "b0", "a1", "b1", "a2", "b2", "prevR", "aprxSqrt", "ushrn", "floor", "u", "v", "x1", "y1", "x2", "y2", "q", "len1", "sqr", "negative", "_endoSplit", "v1", "v2", "c1", "divRound", "c2", "p1", "p2", "q1", "q2", "odd", "redSqr", "redIAdd", "ax", "rhs", "redISub", "_endoWnafMulAdd", "npoints", "ncoeffs", "split", "ineg", "fromJSON", "pre", "endoMul", "toJSON", "JSON", "parse", "obj2point", "inspect", "isInfinity", "nx", "ny", "ys1", "dyinv", "mulAdd", "jmulAdd", "_precompute", "negate", "zinv", "zinv2", "ay", "pz2", "z2", "s1", "s2", "h", "h2", "h3", "nz", "pow", "jx", "jy", "jz", "jz4", "jyd", "jx2", "jyd2", "jyd4", "t1", "t2", "dny", "_zeroDbl", "_threeDbl", "_dbl", "xx", "yy", "yyyy", "m", "t", "yyyy8", "d", "f", "c8", "delta", "gamma", "alpha", "beta4", "beta8", "ggamma8", "jy2", "jxd4", "jyd8", "trpl", "zz", "mm", "ee", "yyu4", "kbase", "z3", "pz3", "eqXToP", "zs", "rx", "xc", "iadd", "normalize", "reverse", "aa", "bb", "diffAdd", "diff", "da", "cb", "bits", "jumlAdd", "other", "EdwardsCurve", "twisted", "mOneA", "extended", "umod", "dd", "oneC", "_mulA", "_mulC", "lhs", "pointFromY", "_extDbl", "nt", "_projDbl", "_extAdd", "_projAdd", "zi", "base", "require$$0", "short", "require$$1", "require$$2", "edwards", "require$$3", "rotl32", "sum32", "sum32_5", "ft_1", "shaCommon", "BlockHash", "common", "sha1_K", "SHA1", "W", "blockSize", "outSize", "hmacStrength", "padLength", "_update", "start", "_digest", "toHex32", "split32", "require$$4", "Hmac", "hash", "Hash", "inner", "outer", "_init", "update", "digest", "sha", "ripemd", "hmac", "sha1", "sha256", "sha224", "sha384", "sha512", "ripemd160", "curves", "PresetCurve", "options", "defineCurve", "Object", "defineProperty", "configurable", "enumerable", "get", "value", "cofactor", "HmacDRBG", "predResist", "outLen", "minEntropy", "_reseed", "reseedInterval", "K", "V", "entropy", "entropyEnc", "nonce", "nonceEnc", "pers", "persEnc", "seed", "_hmac", "kmac", "reseed", "addEnc", "temp", "KeyPair", "ec", "priv", "pub", "_importPrivate", "privEnc", "_importPublic", "pubEnc", "fromPublic", "fromPrivate", "getPublic", "result", "reason", "getPrivate", "mask", "ushln", "or", "and", "derive", "sign", "verify", "signature", "Signature", "_importDER", "recoveryParam", "Position", "place", "getLength", "buf", "initial", "octetLen", "val", "off", "rmPadding", "constructLength", "octets", "log", "LN2", "data", "rlen", "slen", "toDER", "backHalf", "EC", "hasOwnProperty", "nh", "keyPair", "keyFromPrivate", "keyFromPublic", "genKeyPair", "drbg", "ns2", "iaddn", "_truncateToN", "truncOnly", "bitSize", "truncateMsg", "bkey", "ns1", "iter", "kp", "kpX", "invm", "canonical", "_verify", "sinv", "recoverPubKey", "isYOdd", "isSecondKey", "rInv", "getKeyRecoveryParam", "Q", "Qprime", "eddsa", "params", "_secret", "secret", "isPoint", "_pub", "_pubBytes", "fromSecret", "encodePoint", "lastIx", "encodingLength", "decodeInt", "privBytes", "message", "sig", "getSecret", "pubBytes", "R", "S", "_R", "_S", "_Rencoded", "Rencoded", "_Sencoded", "Sencoded", "encodeInt", "toBytes", "toUpperCase", "EDDSA", "pointClass", "constructor", "keyFromSecret", "hashInt", "messagePrefix", "s_", "makeSignature", "SG", "arguments", "normed", "xIsOdd", "elliptic", "require$$5"]
}
