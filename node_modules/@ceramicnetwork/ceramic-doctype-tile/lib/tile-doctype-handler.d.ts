import CID from 'cids';
import { TileDoctype, TileParams } from "./tile-doctype";
import { AnchorProof, AnchorRecord, Context, DocOpts, DocState, DoctypeConstructor, DoctypeHandler } from "@ceramicnetwork/ceramic-common";
export declare class TileDoctypeHandler implements DoctypeHandler<TileDoctype> {
    get name(): string;
    get doctype(): DoctypeConstructor<TileDoctype>;
    create(params: TileParams, context: Context, opts?: DocOpts): Promise<TileDoctype>;
    applyRecord(record: any, cid: CID, context: Context, state?: DocState): Promise<DocState>;
    _applyGenesis(record: any, cid: CID, context: Context): Promise<DocState>;
    _applySigned(record: any, cid: CID, state: DocState, context: Context): Promise<DocState>;
    _applyAnchor(record: AnchorRecord, proof: AnchorProof, cid: CID, state: DocState): Promise<DocState>;
    _verifySignature(record: any, context: Context, did: string): Promise<void>;
    verifyJWS(jws: string, pubkeys: any): Promise<void>;
}
//# sourceMappingURL=tile-doctype-handler.d.ts.map