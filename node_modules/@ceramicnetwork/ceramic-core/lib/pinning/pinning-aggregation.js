"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PinningAggregation = exports.UnknownPinningService = void 0;
const ipfs_pinning_1 = require("./ipfs-pinning");
const powergate_pinning_1 = require("./powergate-pinning");
class UnknownPinningService extends Error {
    constructor(designator) {
        super(`Unknown pinning service ${designator}`);
    }
}
exports.UnknownPinningService = UnknownPinningService;
class PinningAggregation {
    constructor(context, connectionStrings, pinners = [ipfs_pinning_1.IpfsPinning, powergate_pinning_1.PowergatePinning]) {
        this.backends = connectionStrings.map(s => {
            const protocol = s.match(`://`) ? new URL(s).protocol.replace(':', '') : s;
            const designator = protocol.match(/^(\w+)\+?/)[1];
            const found = pinners.find(pinner => pinner.designator === designator);
            if (found) {
                return new found(s, context);
            }
            else {
                throw new UnknownPinningService(designator);
            }
        });
    }
    async open() {
        await Promise.all(this.backends.map(async (service) => service.open()));
    }
    async close() {
        await Promise.all(this.backends.map(async (service) => service.close()));
    }
    async pin(cid) {
        await Promise.all(this.backends.map(async (service) => service.pin(cid)));
    }
    async unpin(cid) {
        Promise.all(this.backends.map(async (service) => service.unpin(cid))).catch(() => {
        });
    }
}
exports.PinningAggregation = PinningAggregation;
//# sourceMappingURL=pinning-aggregation.js.map