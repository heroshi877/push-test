import CID from "cids";
import { CeramicConfig } from "../../ceramic";
import { AnchorService } from "@ceramicnetwork/ceramic-common";
import { AnchorProof, CeramicApi } from "@ceramicnetwork/ceramic-common";
interface CidDoc {
    readonly cid: CID;
    readonly docId: string;
}
export default class EthereumAnchorService extends AnchorService {
    private _config;
    private _ceramic;
    private readonly cidToResMap;
    constructor(_config: CeramicConfig);
    set ceramic(ceramic: CeramicApi);
    requestAnchor(docId: string, head: CID): Promise<void>;
    _sendReq(cidDocPair: CidDoc): Promise<void>;
    _poll(cidDoc: CidDoc, pollTime?: number, maxPollingTime?: number): Promise<void>;
    validateChainInclusion(anchorProof: AnchorProof): Promise<void>;
    private _getEthProvider;
}
export {};
//# sourceMappingURL=ethereum-anchor-service.d.ts.map