{
  "version": 3,
  "sources": ["../../@ethersproject/abstract-provider/src.ts/_version.ts", "../../@ethersproject/abstract-provider/src.ts/index.ts", "../../@ethersproject/abstract-signer/src.ts/_version.ts", "../../@ethersproject/abstract-signer/src.ts/index.ts", "../../@ethersproject/signing-key/node_modules/bn.js/lib/bn.js", "../../node_modules/minimalistic-assert/index.js", "../../node_modules/minimalistic-crypto-utils/lib/utils.js", "../../node_modules/elliptic/lib/elliptic/utils.js", "../../node_modules/elliptic/lib/elliptic/curve/base.js", "../../node_modules/inherits/inherits_browser.js", "../../node_modules/elliptic/lib/elliptic/curve/short.js", "../../node_modules/elliptic/lib/elliptic/curve/index.js", "../../node_modules/elliptic/lib/elliptic/curves.js", "../../node_modules/hmac-drbg/lib/hmac-drbg.js", "../../node_modules/elliptic/lib/elliptic/ec/key.js", "../../node_modules/elliptic/lib/elliptic/ec/signature.js", "../../node_modules/elliptic/lib/elliptic/ec/index.js", "../../node_modules/elliptic/lib/elliptic.js", "../../@ethersproject/signing-key/lib.esm/elliptic.js", "../../@ethersproject/signing-key/src.ts/_version.ts", "../../@ethersproject/signing-key/src.ts/index.ts", "../../@ethersproject/transactions/src.ts/_version.ts", "../../@ethersproject/transactions/src.ts/index.ts", "../../@ethersproject/contracts/src.ts/_version.ts", "../../@ethersproject/contracts/src.ts/index.ts", "../../@ethersproject/basex/src.ts/index.ts", "../../@ethersproject/sha2/src.ts/types.ts", "../../@ethersproject/sha2/src.ts/_version.ts", "../../@ethersproject/sha2/src.ts/browser-sha2.ts", "../../@ethersproject/sha2/src.ts/index.ts", "../../@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts", "../../@ethersproject/pbkdf2/src.ts/index.ts", "../../@ethersproject/wordlists/src.ts/_version.ts", "../../@ethersproject/wordlists/src.ts/wordlist.ts", "../../@ethersproject/wordlists/src.ts/lang-en.ts", "../../@ethersproject/wordlists/src.ts/browser-wordlists.ts", "../../@ethersproject/wordlists/src.ts/index.ts", "../../@ethersproject/hdnode/src.ts/_version.ts", "../../@ethersproject/hdnode/src.ts/index.ts", "../../@ethersproject/random/src.ts/_version.ts", "../../@ethersproject/random/src.ts/browser-random.ts", "../../@ethersproject/random/src.ts/shuffle.ts", "../../@ethersproject/random/src.ts/index.ts", "../../aes-js/index.js", "../../@ethersproject/json-wallets/src.ts/_version.ts", "../../@ethersproject/json-wallets/src.ts/utils.ts", "../../@ethersproject/json-wallets/src.ts/crowdsale.ts", "../../@ethersproject/json-wallets/src.ts/inspect.ts", "../../scrypt-js/scrypt.js", "../../@ethersproject/json-wallets/src.ts/keystore.ts", "../../@ethersproject/json-wallets/src.ts/index.ts", "../../@ethersproject/wallet/src.ts/_version.ts", "../../@ethersproject/wallet/src.ts/index.ts", "../../@ethersproject/networks/src.ts/_version.ts", "../../@ethersproject/networks/src.ts/index.ts", "../../@ethersproject/web/src.ts/_version.ts", "../../@ethersproject/web/src.ts/browser-geturl.ts", "../../@ethersproject/web/src.ts/index.ts", "../../@ethersproject/providers/node_modules/bech32/index.js", "../../@ethersproject/providers/src.ts/_version.ts", "../../@ethersproject/providers/src.ts/formatter.ts", "../../@ethersproject/providers/src.ts/base-provider.ts", "../../@ethersproject/providers/src.ts/json-rpc-provider.ts", "../../@ethersproject/providers/src.ts/browser-ws.ts", "../../@ethersproject/providers/src.ts/websocket-provider.ts", "../../@ethersproject/providers/src.ts/url-json-rpc-provider.ts", "../../@ethersproject/providers/src.ts/alchemy-provider.ts", "../../@ethersproject/providers/src.ts/ankr-provider.ts", "../../@ethersproject/providers/src.ts/cloudflare-provider.ts", "../../@ethersproject/providers/src.ts/etherscan-provider.ts", "../../@ethersproject/providers/src.ts/fallback-provider.ts", "../../@ethersproject/providers/src.ts/browser-ipc-provider.ts", "../../@ethersproject/providers/src.ts/infura-provider.ts", "../../@ethersproject/providers/src.ts/json-rpc-batch-provider.ts", "../../@ethersproject/providers/src.ts/nodesmith-provider.ts", "../../@ethersproject/providers/src.ts/pocket-provider.ts", "../../@ethersproject/providers/src.ts/web3-provider.ts", "../../@ethersproject/providers/src.ts/index.ts", "../../@ethersproject/solidity/src.ts/_version.ts", "../../@ethersproject/solidity/src.ts/index.ts", "../../@ethersproject/units/src.ts/_version.ts", "../../@ethersproject/units/src.ts/index.ts", "../../ethers/src.ts/utils.ts", "../../ethers/src.ts/_version.ts", "../../ethers/src.ts/ethers.ts", "../../ethers/src.ts/index.ts"],
  "sourcesContent": ["export const version = \"abstract-provider/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n", "export const version = \"abstract-signer/5.7.0\";\n", "\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map", "export const version = \"signing-key/5.7.0\";\n", "\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n", "export const version = \"transactions/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n", "export const version = \"contracts/5.7.0\";\n", "\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n", "/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n", "export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n", "export const version = \"sha2/5.7.0\";\n", "\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n", "import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nexport {\n    computeHmac,\n\n    ripemd160,\n\n    sha256,\n    sha512,\n\n    SupportedAlgorithm\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n", "\nexport { pbkdf2 } from \"./pbkdf2\";\n", "export const version = \"wordlists/5.7.0\";\n", "\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n", "\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n", "\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n", "\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\nimport { logger, Wordlist } from \"./wordlist\";\n\nimport { wordlists } from \"./wordlists\";\n\nexport {\n    logger,\n    Wordlist,\n    wordlists\n}\n", "export const version = \"hdnode/5.7.0\";\n", "\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n", "export const version = \"random/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n", "\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n", "\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n", "\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n", "export const version = \"json-wallets/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n", "\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n", "\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n", "\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n", "\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n", "export const version = \"wallet/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "export const version = \"networks/5.7.1\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n", "export const version = \"web/5.7.1\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n", "\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n", "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n", "export const version = \"providers/5.7.2\";\n", "\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n", "\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n", "\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n", "\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n", "\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n", "\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n", "/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n", "\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n", "export const version = \"solidity/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n", "export const version = \"units/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n", "\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n", "export const version = \"ethers/5.7.2\";\n", "\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n", "\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n"],
  "mappings": "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C,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK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",
  "names": ["import_dist", "lib_exports", "import_dist", "init_lib", "hash", "import_dist", "version", "init_version", "lib_exports", "import_dist", "logger", "init_lib", "init_version", "version", "key", "__awaiter", "import_dist", "module", "exports", "assert", "BN", "base", "init", "mul", "inspect", "toJSON", "allocate", "neg", "add", "self", "comb10MulTo", "N", "eq", "prime", "BN", "Base", "utils", "assert", "ec", "curves", "EC", "encode", "minAssert", "minUtils", "getNAF", "getJSF", "key", "cachedProperty", "validate", "dbl", "inherits", "point", "_getBeta", "obj", "eq", "neg", "add", "dblp", "mul", "inspect", "isInfinity", "require$$0", "require$$1", "curve", "hash", "signature", "KeyPair", "HmacDRBG", "sign", "Signature", "verify", "e", "require$$2", "require$$3", "_ec", "import_dist", "version", "init_version", "lib_exports", "signature", "key", "logger", "import_dist", "init_lib", "init_version", "version", "keyPair", "import_dist", "version", "init_version", "lib_exports", "key", "signature", "logger", "allowedTransactionKeys", "serialize", "import_dist", "init_lib", "init_version", "version", "TransactionTypes", "import_dist", "version", "init_version", "lib_exports", "logger", "paramType", "__awaiter", "key", "import_dist", "allowedTransactionKeys", "init_lib", "init_version", "version", "signature", "runningEvent", "lib_exports", "import_dist", "init_lib", "import_dist", "SupportedAlgorithm", "import_dist", "version", "init_version", "hash", "key", "logger", "import_dist", "import_hash", "init_lib", "init_version", "version", "lib_exports", "import_dist", "init_lib", "import_dist", "init_lib", "import_dist", "init_lib", "import_dist", "version", "init_version", "import_dist", "logger", "init_lib", "init_version", "version", "words", "wordlist", "anyGlobal", "import_dist", "import_dist", "lib_exports", "logger", "import_dist", "init_lib", "import_dist", "version", "init_version", "lib_exports", "wordlist", "words", "logger", "import_dist", "init_lib", "init_version", "version", "key", "import_dist", "version", "init_version", "logger", "import_dist", "init_lib", "init_version", "version", "import_dist", "lib_exports", "import_dist", "init_lib", "import_dist", "key", "import_dist", "version", "init_version", "key", "randomBytes", "import_dist", "init_lib", "logger", "key", "aes", "import_dist", "init_lib", "init_version", "version", "import_dist", "init_lib", "import_dist", "p", "i", "N", "key", "key", "aes", "logger", "pbkdf2", "N", "scrypt", "decrypt", "now", "import_dist", "import_aes_js", "init_lib", "init_version", "version", "lib_exports", "decrypt", "import_dist", "init_lib", "import_dist", "version", "init_version", "lib_exports", "hasMnemonic", "signature", "import_dist", "logger", "init_lib", "init_version", "version", "wordlist", "import_dist", "version", "init_version", "network", "standard", "logger", "import_dist", "init_lib", "init_version", "version", "import_dist", "version", "init_version", "key", "import_dist", "init_lib", "lib_exports", "logger", "key", "encode", "decode", "timer", "stall", "body", "timeout", "import_dist", "init_lib", "init_version", "version", "import_dist", "encode", "words", "x", "decode", "import_dist", "version", "init_version", "import_dist", "logger", "init_lib", "init_version", "version", "hash", "value", "key", "logger", "topic", "getEventTag", "import_dist", "init_lib", "init_version", "version", "words", "bech32", "hash", "encode", "key", "now", "receipt", "__awaiter", "timer", "blockNumber", "avatar", "key", "logger", "import_dist", "_constructorGuard", "allowedTransactionKeys", "init_lib", "init_version", "version", "__awaiter", "hash", "network", "error", "getNetwork", "result", "self", "poll", "import_dist", "init_version", "logger", "version", "import_dist", "logger", "init_lib", "init_version", "version", "id", "param", "event", "hash", "subId", "import_dist", "logger", "init_lib", "init_version", "version", "key", "import_dist", "logger", "init_lib", "init_version", "version", "logger", "import_dist", "defaultApiKey", "init_version", "version", "import_dist", "logger", "init_version", "version", "key", "getResult", "checkError", "logger", "import_dist", "init_lib", "init_version", "version", "url", "networks", "logger", "serialize", "key", "stall", "timer", "now", "import_dist", "init_lib", "init_version", "version", "i", "import_dist", "import_dist", "logger", "init_lib", "init_version", "version", "import_dist", "init_lib", "request", "inflightRequest", "import_dist", "logger", "defaultApiKey", "init_version", "version", "import_dist", "logger", "init_version", "version", "error", "import_dist", "logger", "init_lib", "init_version", "version", "lib_exports", "logger", "import_dist", "init_lib", "init_version", "version", "import_dist", "version", "init_version", "lib_exports", "keccak256", "sha256", "logger", "value", "import_dist", "init_lib", "init_version", "version", "import_dist", "version", "init_version", "lib_exports", "logger", "import_dist", "init_lib", "init_version", "version", "lib_exports", "keccak256", "sha256", "import_dist", "init_utils", "init_lib", "import_dist", "version", "init_version", "lib_exports", "logger", "version", "import_dist", "init_lib", "init_utils", "init_version", "lib_exports", "logger", "version", "import_dist", "init_lib", "anyGlobal"]
}
