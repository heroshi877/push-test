{
  "version": 3,
  "sources": ["../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/lib/assert.js", "../../bip66/index.js", "../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/lib/der.js", "../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/lib/messages.json", "../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/lib/index.js", "../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/lib/elliptic/index.js", "../../eth-crypto/node_modules/ethereumjs-util/node_modules/secp256k1/elliptic.js", "../../eth-crypto/node_modules/ethereumjs-util/src/constants.ts", "../../eth-crypto/node_modules/ethereumjs-util/src/bytes.ts", "../../eth-crypto/node_modules/keccak/lib/api/keccak.js", "../../eth-crypto/node_modules/keccak/lib/api/shake.js", "../../eth-crypto/node_modules/keccak/lib/api/index.js", "../../eth-crypto/node_modules/keccak/lib/keccak-state-unroll.js", "../../eth-crypto/node_modules/keccak/lib/keccak.js", "../../eth-crypto/node_modules/keccak/js.js", "../../eth-crypto/node_modules/ethereumjs-util/src/hash.ts", "../../eth-crypto/node_modules/ethereumjs-util/src/account.ts", "../../eth-crypto/node_modules/ethereumjs-util/src/signature.ts", "../../eth-crypto/node_modules/ethereumjs-util/src/object.ts", "../../eth-crypto/node_modules/ethereumjs-util/src/index.ts", "../../eth-lib/lib/array.js", "../../eth-lib/lib/bytes.js", "../../eth-lib/lib/nat.js", "../../eth-lib/lib/rlp.js", "../../eth-lib/lib/hash.js", "../../eth-lib/lib/account.js", "../../eth-crypto/node_modules/secp256k1/lib/index.js", "../../eth-crypto/node_modules/secp256k1/lib/elliptic.js", "../../eth-crypto/node_modules/secp256k1/elliptic.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/package.json", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/utils.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curve/base.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curve/short.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curve/mont.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curve/edwards.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curve/index.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/curves.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/ec/key.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/ec/signature.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/ec/index.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/eddsa/key.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/eddsa/signature.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic/eddsa/index.js", "../../eth-crypto/node_modules/eccrypto/node_modules/elliptic/lib/elliptic.js", "../../eth-crypto/node_modules/eccrypto/browser.js", "../../ethereumjs-common/dist/chains/mainnet.json", "../../ethereumjs-common/dist/chains/ropsten.json", "../../ethereumjs-common/dist/chains/rinkeby.json", "../../ethereumjs-common/dist/chains/kovan.json", "../../ethereumjs-common/dist/chains/goerli.json", "../../ethereumjs-common/src/chains/index.ts", "../../ethereumjs-common/dist/hardforks/chainstart.json", "../../ethereumjs-common/dist/hardforks/homestead.json", "../../ethereumjs-common/dist/hardforks/dao.json", "../../ethereumjs-common/dist/hardforks/tangerineWhistle.json", "../../ethereumjs-common/dist/hardforks/spuriousDragon.json", "../../ethereumjs-common/dist/hardforks/byzantium.json", "../../ethereumjs-common/dist/hardforks/constantinople.json", "../../ethereumjs-common/dist/hardforks/petersburg.json", "../../ethereumjs-common/dist/hardforks/istanbul.json", "../../ethereumjs-common/dist/hardforks/muirGlacier.json", "../../ethereumjs-common/src/hardforks/index.ts", "../../ethereumjs-common/src/index.ts", "../../ethereumjs-tx/src/transaction.ts", "../../ethereumjs-tx/src/fake.ts", "../../ethereumjs-tx/src/index.ts", "../../eth-crypto/node_modules/ethers/_version.js", "../../eth-crypto/node_modules/ethers/errors.js", "../../eth-crypto/node_modules/ethers/utils/bytes.js", "../../eth-crypto/node_modules/ethers/utils/properties.js", "../../eth-crypto/node_modules/ethers/utils/bignumber.js", "../../eth-crypto/node_modules/ethers/constants.js", "../../eth-crypto/node_modules/js-sha3/src/sha3.js", "../../eth-crypto/node_modules/ethers/utils/keccak256.js", "../../eth-crypto/node_modules/ethers/utils/rlp.js", "../../eth-crypto/node_modules/ethers/utils/address.js", "../../eth-crypto/node_modules/ethers/utils/utf8.js", "../../eth-crypto/node_modules/ethers/utils/abi-coder.js", "../../eth-crypto/node_modules/ethers/utils/hash.js", "../../eth-crypto/node_modules/ethers/utils/interface.js", "../../eth-crypto/node_modules/ethers/providers/abstract-provider.js", "../../eth-crypto/node_modules/ethers/abstract-signer.js", "../../eth-crypto/node_modules/ethers/contract.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/utils.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/common.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/common.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/1.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/256.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/224.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/512.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha/384.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/sha.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/ripemd.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash/hmac.js", "../../eth-crypto/node_modules/ethers/node_modules/hash.js/lib/hash.js", "../../eth-crypto/node_modules/ethers/utils/sha2.js", "../../eth-crypto/node_modules/ethers/utils/solidity.js", "../../eth-crypto/dist/es/index.js", "../../eth-crypto/dist/es/create-identity.js", "../../eth-crypto/dist/es/public-key-by-private-key.js", "../../eth-crypto/dist/es/util.js", "../../eth-crypto/dist/es/public-key.js", "../../eth-crypto/dist/es/decrypt-with-private-key.js", "../../eth-crypto/dist/es/cipher.js", "../../eth-crypto/dist/es/encrypt-with-public-key.js", "../../eth-crypto/dist/es/recover.js", "../../eth-crypto/dist/es/recover-public-key.js", "../../eth-crypto/dist/es/sign.js", "../../eth-crypto/dist/es/sign-transaction.js", "../../eth-crypto/dist/es/tx-data-by-compiled.js", "../../eth-crypto/dist/es/calculate-contract-address.js", "../../eth-crypto/dist/es/hash.js", "../../eth-crypto/dist/es/hex.js", "../../eth-crypto/dist/es/vrs.js"],
  "sourcesContent": ["'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n", "// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n", "'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n", "{\n  \"COMPRESSED_TYPE_INVALID\": \"compressed should be a boolean\",\n  \"EC_PRIVATE_KEY_TYPE_INVALID\": \"private key should be a Buffer\",\n  \"EC_PRIVATE_KEY_LENGTH_INVALID\": \"private key length is invalid\",\n  \"EC_PRIVATE_KEY_RANGE_INVALID\": \"private key range is invalid\",\n  \"EC_PRIVATE_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting private key is invalid\",\n  \"EC_PRIVATE_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n  \"EC_PRIVATE_KEY_EXPORT_DER_FAIL\": \"couldn't export to DER format\",\n  \"EC_PRIVATE_KEY_IMPORT_DER_FAIL\": \"couldn't import from DER format\",\n  \"EC_PUBLIC_KEYS_TYPE_INVALID\": \"public keys should be an Array\",\n  \"EC_PUBLIC_KEYS_LENGTH_INVALID\": \"public keys Array should have at least 1 element\",\n  \"EC_PUBLIC_KEY_TYPE_INVALID\": \"public key should be a Buffer\",\n  \"EC_PUBLIC_KEY_LENGTH_INVALID\": \"public key length is invalid\",\n  \"EC_PUBLIC_KEY_PARSE_FAIL\": \"the public key could not be parsed or is invalid\",\n  \"EC_PUBLIC_KEY_CREATE_FAIL\": \"private was invalid, try again\",\n  \"EC_PUBLIC_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting public key is invalid\",\n  \"EC_PUBLIC_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n  \"EC_PUBLIC_KEY_COMBINE_FAIL\": \"the sum of the public keys is not valid\",\n  \"ECDH_FAIL\": \"scalar was invalid (zero or overflow)\",\n  \"ECDSA_SIGNATURE_TYPE_INVALID\": \"signature should be a Buffer\",\n  \"ECDSA_SIGNATURE_LENGTH_INVALID\": \"signature length is invalid\",\n  \"ECDSA_SIGNATURE_PARSE_FAIL\": \"couldn't parse signature\",\n  \"ECDSA_SIGNATURE_PARSE_DER_FAIL\": \"couldn't parse DER signature\",\n  \"ECDSA_SIGNATURE_SERIALIZE_DER_FAIL\": \"couldn't serialize signature to DER format\",\n  \"ECDSA_SIGN_FAIL\": \"nonce generation function failed or private key is invalid\",\n  \"ECDSA_RECOVER_FAIL\": \"couldn't recover public key from signature\",\n  \"MSG32_TYPE_INVALID\": \"message should be a Buffer\",\n  \"MSG32_LENGTH_INVALID\": \"message length is invalid\",\n  \"OPTIONS_TYPE_INVALID\": \"options should be an Object\",\n  \"OPTIONS_DATA_TYPE_INVALID\": \"options.data should be a Buffer\",\n  \"OPTIONS_DATA_LENGTH_INVALID\": \"options.data length is invalid\",\n  \"OPTIONS_NONCEFN_TYPE_INVALID\": \"options.noncefn should be a Function\",\n  \"RECOVERY_ID_TYPE_INVALID\": \"recovery should be a Number\",\n  \"RECOVERY_ID_VALUE_INVALID\": \"recovery should have value between -1 and 4\",\n  \"TWEAK_TYPE_INVALID\": \"tweak should be a Buffer\",\n  \"TWEAK_LENGTH_INVALID\": \"tweak length is invalid\"\n}\n", "'use strict'\nvar assert = require('./assert')\nvar der = require('./der')\nvar messages = require('./messages.json')\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyNegate: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyNegate(privateKey)\n    },\n\n    privateKeyModInverse: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyModInverse(privateKey)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n", "'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\n\nvar messages = require('../messages.json')\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return Buffer.from(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  var point = ecparams.g.mul(tweak).add(pair.pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, { x: pair.pub.x, y: pair.pub.y })\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return Buffer.from(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed))\n}\n", "'use strict'\nmodule.exports = require('./lib')(require('./lib/elliptic'))\n", null, null, "'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Keccak (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Keccak, Transform)\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype._flush = function (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  Keccak.prototype._clone = function () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Keccak\n}\n", "'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n", "'use strict'\nconst createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n", "'use strict'\nconst P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n", "'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n", "'use strict'\nmodule.exports = require('./lib/api')(require('./lib/keccak'))\n", null, null, null, null, null, "const generate = (num, fn) => {\n  let a = [];\n  for (var i = 0; i < num; ++i) a.push(fn(i));\n  return a;\n};\n\nconst replicate = (num, val) => generate(num, () => val);\n\nconst concat = (a, b) => a.concat(b);\n\nconst flatten = a => {\n  let r = [];\n  for (let j = 0, J = a.length; j < J; ++j) for (let i = 0, I = a[j].length; i < I; ++i) r.push(a[j][i]);\n  return r;\n};\n\nconst chunksOf = (n, a) => {\n  let b = [];\n  for (let i = 0, l = a.length; i < l; i += n) b.push(a.slice(i, i + n));\n  return b;\n};\n\nmodule.exports = {\n  generate,\n  replicate,\n  concat,\n  flatten,\n  chunksOf\n};", "const A = require(\"./array.js\");\n\nconst at = (bytes, index) => parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n\nconst random = bytes => {\n  let rnd;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (typeof require !== \"undefined\") rnd = require(\"c\" + \"rypto\").randomBytes(bytes);else throw \"Safe random numbers not available.\";\n  let hex = \"0x\";\n  for (let i = 0; i < bytes; ++i) hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n  return hex;\n};\n\nconst length = a => (a.length - 2) / 2;\n\nconst flatten = a => \"0x\" + a.reduce((r, s) => r + s.slice(2), \"\");\n\nconst slice = (i, j, bs) => \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n\nconst reverse = hex => {\n  let rev = \"0x\";\n  for (let i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n  return rev;\n};\n\nconst pad = (l, hex) => hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n\nconst padRight = (l, hex) => hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n\nconst toArray = hex => {\n  let arr = [];\n  for (let i = 2, l = hex.length; i < l; i += 2) arr.push(parseInt(hex.slice(i, i + 2), 16));\n  return arr;\n};\n\nconst fromArray = arr => {\n  let hex = \"0x\";\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    let b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n  return hex;\n};\n\nconst toUint8Array = hex => new Uint8Array(toArray(hex));\n\nconst fromUint8Array = arr => fromArray([].slice.call(arr, 0));\n\nconst fromNumber = num => {\n  let hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nconst toNumber = hex => parseInt(hex.slice(2), 16);\n\nconst concat = (a, b) => a.concat(b.slice(2));\n\nconst fromNat = bn => bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n\nconst toNat = bn => bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n\nconst fromAscii = ascii => {\n  let hex = \"0x\";\n  for (let i = 0; i < ascii.length; ++i) hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n  return hex;\n};\n\nconst toAscii = hex => {\n  let ascii = \"\";\n  for (let i = 2; i < hex.length; i += 2) ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  return ascii;\n};\n\n// From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\nconst fromString = s => {\n  const makeByte = uint8 => {\n    const b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n  let bytes = \"0x\";\n  for (let ci = 0; ci != s.length; ci++) {\n    let c = s.charCodeAt(ci);\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        let c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n    bytes += makeByte(c & 63 | 128);\n  }\n  return bytes;\n};\n\nconst toString = bytes => {\n  let s = '';\n  let i = 0;\n  let l = length(bytes);\n  while (i < l) {\n    let c = at(bytes, i++);\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n      ++i;\n    }\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n  return s;\n};\n\nmodule.exports = {\n  random,\n  length,\n  concat,\n  flatten,\n  slice,\n  reverse,\n  pad,\n  padRight,\n  fromAscii,\n  toAscii,\n  fromString,\n  toString,\n  fromNumber,\n  toNumber,\n  fromNat,\n  toNat,\n  fromArray,\n  toArray,\n  fromUint8Array,\n  toUint8Array\n};", "const BN = require(\"bn.js\");\nconst Bytes = require(\"./bytes\");\n\nconst fromBN = bn => \"0x\" + bn.toString(\"hex\");\n\nconst toBN = str => new BN(str.slice(2), 16);\n\nconst fromString = str => {\n  const bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nconst toEther = wei => toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n\nconst fromEther = eth => mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n\nconst toString = a => toBN(a).toString(10);\n\nconst fromNumber = a => typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n\nconst toNumber = a => toBN(a).toNumber();\n\nconst toUint256 = a => Bytes.pad(32, a);\n\nconst bin = method => (a, b) => fromBN(toBN(a)[method](toBN(b)));\n\nconst add = bin(\"add\");\nconst mul = bin(\"mul\");\nconst div = bin(\"div\");\nconst sub = bin(\"sub\");\n\nmodule.exports = {\n  toString,\n  fromString,\n  toNumber,\n  fromNumber,\n  toEther,\n  fromEther,\n  toUint256,\n  add,\n  mul,\n  div,\n  sub\n};", "// The RLP format\n// Serialization and deserialization for the BytesTree type, under the following grammar:\n// | First byte | Meaning                                                                    |\n// | ---------- | -------------------------------------------------------------------------- |\n// | 0   to 127 | HEX(leaf)                                                                  |\n// | 128 to 183 | HEX(length_of_leaf + 128) + HEX(leaf)                                      |\n// | 184 to 191 | HEX(length_of_length_of_leaf + 128 + 55) + HEX(length_of_leaf) + HEX(leaf) |\n// | 192 to 247 | HEX(length_of_node + 192) + HEX(node)                                      |\n// | 248 to 255 | HEX(length_of_length_of_node + 128 + 55) + HEX(length_of_node) + HEX(node) |\n\nconst encode = tree => {\n  const padEven = str => str.length % 2 === 0 ? str : \"0\" + str;\n\n  const uint = num => padEven(num.toString(16));\n\n  const length = (len, add) => len < 56 ? uint(add + len) : uint(add + uint(len).length / 2 + 55) + uint(len);\n\n  const dataTree = tree => {\n    if (typeof tree === \"string\") {\n      const hex = tree.slice(2);\n      const pre = hex.length != 2 || hex >= \"80\" ? length(hex.length / 2, 128) : \"\";\n      return pre + hex;\n    } else {\n      const hex = tree.map(dataTree).join(\"\");\n      const pre = length(hex.length / 2, 192);\n      return pre + hex;\n    }\n  };\n\n  return \"0x\" + dataTree(tree);\n};\n\nconst decode = hex => {\n  let i = 2;\n\n  const parseTree = () => {\n    if (i >= hex.length) throw \"\";\n    const head = hex.slice(i, i + 2);\n    return head < \"80\" ? (i += 2, \"0x\" + head) : head < \"c0\" ? parseHex() : parseList();\n  };\n\n  const parseLength = () => {\n    const len = parseInt(hex.slice(i, i += 2), 16) % 64;\n    return len < 56 ? len : parseInt(hex.slice(i, i += (len - 55) * 2), 16);\n  };\n\n  const parseHex = () => {\n    const len = parseLength();\n    return \"0x\" + hex.slice(i, i += len * 2);\n  };\n\n  const parseList = () => {\n    const lim = parseLength() * 2 + i;\n    let list = [];\n    while (i < lim) list.push(parseTree());\n    return list;\n  };\n\n  try {\n    return parseTree();\n  } catch (e) {\n    return [];\n  }\n};\n\nmodule.exports = { encode, decode };", "// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst HEX_CHARS = '0123456789abcdef'.split('');\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nconst Keccak = bits => ({\n  blocks: [],\n  reset: true,\n  block: 0,\n  start: 0,\n  blockCount: 1600 - (bits << 1) >> 5,\n  outputBlocks: bits >> 5,\n  s: (s => [].concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n});\n\nconst update = (state, message) => {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code;\n\n  // update\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    state.lastByteIndex = i;\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  }\n\n  // finalize\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n  blocks[blockCount - 1] |= 0x80000000;\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n  f(s);\n\n  // toString\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n  return \"0x\" + hex;\n};\n\nconst f = s => {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nconst keccak = bits => str => {\n  var msg;\n  if (str.slice(0, 2) === \"0x\") {\n    msg = [];\n    for (var i = 2, l = str.length; i < l; i += 2) msg.push(parseInt(str.slice(i, i + 2), 16));\n  } else {\n    msg = str;\n  }\n  return update(Keccak(bits, bits), msg);\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};", "const Bytes = require(\"./bytes\");\nconst Nat = require(\"./nat\");\nconst elliptic = require(\"elliptic\");\nconst rlp = require(\"./rlp\");\nconst secp256k1 = new elliptic.ec(\"secp256k1\"); // eslint-disable-line\nconst { keccak256, keccak256s } = require(\"./hash\");\n\nconst create = entropy => {\n  const innerHex = keccak256(Bytes.concat(Bytes.random(32), entropy || Bytes.random(32)));\n  const middleHex = Bytes.concat(Bytes.concat(Bytes.random(32), innerHex), Bytes.random(32));\n  const outerHex = keccak256(middleHex);\n  return fromPrivate(outerHex);\n};\n\nconst toChecksum = address => {\n  const addressHash = keccak256s(address.slice(2));\n  let checksumAddress = \"0x\";\n  for (let i = 0; i < 40; i++) checksumAddress += parseInt(addressHash[i + 2], 16) > 7 ? address[i + 2].toUpperCase() : address[i + 2];\n  return checksumAddress;\n};\n\nconst fromPrivate = privateKey => {\n  const buffer = new Buffer(privateKey.slice(2), \"hex\");\n  const ecKey = secp256k1.keyFromPrivate(buffer);\n  const publicKey = \"0x\" + ecKey.getPublic(false, 'hex').slice(2);\n  const publicHash = keccak256(publicKey);\n  const address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return {\n    address: address,\n    privateKey: privateKey\n  };\n};\n\nconst encodeSignature = ([v, r, s]) => Bytes.flatten([r, s, v]);\n\nconst decodeSignature = hex => [Bytes.slice(64, Bytes.length(hex), hex), Bytes.slice(0, 32, hex), Bytes.slice(32, 64, hex)];\n\nconst makeSigner = addToV => (hash, privateKey) => {\n  const signature = secp256k1.keyFromPrivate(new Buffer(privateKey.slice(2), \"hex\")).sign(new Buffer(hash.slice(2), \"hex\"), { canonical: true });\n  return encodeSignature([Nat.fromString(Bytes.fromNumber(addToV + signature.recoveryParam)), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.r.toString(16))), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.s.toString(16)))]);\n};\n\nconst sign = makeSigner(27); // v=27|28 instead of 0|1...\n\nconst recover = (hash, signature) => {\n  const vals = decodeSignature(signature);\n  const vrs = { v: Bytes.toNumber(vals[0]), r: vals[1].slice(2), s: vals[2].slice(2) };\n  const ecPublicKey = secp256k1.recoverPubKey(new Buffer(hash.slice(2), \"hex\"), vrs, vrs.v < 2 ? vrs.v : 1 - vrs.v % 2); // because odd vals mean v=0... sadly that means v=0 means v=1... I hate that\n  const publicKey = \"0x\" + ecPublicKey.encode(\"hex\", false).slice(2);\n  const publicHash = keccak256(publicKey);\n  const address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return address;\n};\n\nmodule.exports = {\n  create,\n  toChecksum,\n  fromPrivate,\n  sign,\n  makeSigner,\n  recover,\n  encodeSignature,\n  decodeSignature\n};", "const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n", "const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n", "module.exports = require('./lib')(require('./lib/elliptic'))\n", "{\n  \"name\": \"elliptic\",\n  \"version\": \"6.5.1\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"lint\": \"npm run jscs && npm run jshint\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^1.4.3\",\n    \"coveralls\": \"^3.0.4\",\n    \"grunt\": \"^1.0.4\",\n    \"grunt-browserify\": \"^5.0.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^1.0.1\",\n    \"grunt-mocha-istanbul\": \"^3.0.1\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.2\",\n    \"jscs\": \"^3.0.7\",\n    \"jshint\": \"^2.6.0\",\n    \"mocha\": \"^6.1.4\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.4.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\",\n    \"minimalistic-assert\": \"^1.0.0\",\n    \"minimalistic-crypto-utils\": \"^1.0.0\"\n  }\n}\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          cipher.update(data);\n          resolve(cipher.final());\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          decipher.update(data);\n          resolve(decipher.final());\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n", "{\n    \"name\": \"mainnet\",\n    \"chainId\": 1,\n    \"networkId\": 1,\n    \"comment\": \"The Ethereum main chain\",\n    \"url\": \"https://ethstats.net/\",\n    \"genesis\": {\n        \"hash\": \"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\",\n        \"timestamp\": null,\n        \"gasLimit\": 5000,\n        \"difficulty\": 17179869184,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\",\n        \"stateRoot\": \"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1150000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 1920000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2463000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 2675000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 4370000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 7280000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 7280000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 9069000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 9200000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"18.138.108.67\",\n            \"port\": 30303,\n            \"id\": \"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666\",\n            \"location\": \"ap-southeast-1-001\",\n            \"comment\": \"bootnode-aws-ap-southeast-1-001\"\n        },\n        {\n            \"ip\": \"3.209.45.79\",\n            \"port\": 30303,\n            \"id\": \"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de\",\n            \"location\": \"us-east-1-001\",\n            \"comment\": \"bootnode-aws-us-east-1-001\"\n        },\n        {\n            \"ip\": \"34.255.23.113\",\n            \"port\": 30303,\n            \"id\": \"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758\",\n            \"location\": \"eu-west-1-001\",\n            \"comment\": \"bootnode-aws-eu-west-1-001\"\n        },\n        {\n            \"ip\": \"35.158.244.151\",\n            \"port\": 30303,\n            \"id\": \"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8\",\n            \"location\": \"eu-central-1-001\",\n            \"comment\": \"bootnode-aws-eu-central-1-001\"\n        },\n        {\n            \"ip\": \"52.187.207.27\",\n            \"port\": 30303,\n            \"id\": \"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a\",\n            \"location\": \"australiaeast-001\",\n            \"comment\": \"bootnode-azure-australiaeast-001\"\n        },\n        {\n            \"ip\": \"191.234.162.198\",\n            \"port\": 30303,\n            \"id\": \"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1\",\n            \"location\": \"brazilsouth-001\",\n            \"comment\": \"bootnode-azure-brazilsouth-001\"\n        },\n        {\n            \"ip\": \"52.231.165.108\",\n            \"port\": 30303,\n            \"id\": \"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8\",\n            \"location\": \"koreasouth-001\",\n            \"comment\": \"bootnode-azure-koreasouth-001\"\n        },\n        {\n            \"ip\": \"104.42.217.25\",\n            \"port\": 30303,\n            \"id\": \"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f\",\n            \"location\": \"westus-001\",\n            \"comment\": \"bootnode-azure-westus-001\"\n        }\n    ]\n}\n", "{\n    \"name\": \"ropsten\",\n    \"chainId\": 3,\n    \"networkId\": 3,\n    \"comment\": \"PoW test network\",\n    \"url\": \"https://github.com/ethereum/ropsten\",\n    \"genesis\": {\n        \"hash\": \"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d\",\n        \"timestamp\": null,\n        \"gasLimit\": 16777216,\n        \"difficulty\": 1048576,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x3535353535353535353535353535353535353535353535353535353535353535\",\n        \"stateRoot\": \"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": null,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 10,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1700000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 4230000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4939394,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 6485846,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 7117117,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.176.7.10\",\n            \"port\": 30303,\n            \"id\": \"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure geth\"\n        },\n        {\n            \"ip\": \"52.176.100.77\",\n            \"port\": 30303,\n            \"id\": \"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure parity\"\n        },\n        {\n            \"ip\": \"52.232.243.152\",\n            \"port\": 30303,\n            \"id\": \"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f\",\n            \"location\": \"\",\n            \"comment\": \"Parity\"\n        },\n        {\n            \"ip\": \"192.81.208.223\",\n            \"port\": 30303,\n            \"id\": \"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09\",\n            \"location\": \"\",\n            \"comment\": \"@gpip\"\n        }\n    ]\n}\n", "{\n    \"name\": \"rinkeby\",\n    \"chainId\": 4,\n    \"networkId\": 4,\n    \"comment\": \"PoA test network\",\n    \"url\": \"https://www.rinkeby.io\",\n    \"genesis\": {\n        \"hash\": \"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177\",\n        \"timestamp\": \"0x58ee40ba\",\n        \"gasLimit\": 4700000,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"stateRoot\": \"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": null,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 3,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1035301,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 3660663,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4321234,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 5435345,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.169.42.101\",\n            \"port\": 30303,\n            \"id\": \"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf\",\n            \"location\": \"\",\n            \"comment\": \"IE\"\n        },\n        {\n            \"ip\": \"52.3.158.184\",\n            \"port\": 30303,\n            \"id\": \"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8\",\n            \"location\": \"\",\n            \"comment\": \"INFURA\"\n        },\n        {\n            \"ip\": \"159.89.28.211\",\n            \"port\": 30303,\n            \"id\": \"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6\",\n            \"location\": \"\",\n            \"comment\": \"AKASHA\"\n        }\n    ]\n}\n", "{\n    \"name\": \"kovan\",\n    \"chainId\": 42,\n    \"networkId\": 42,\n    \"comment\": \"Parity PoA test network\",\n    \"url\": \"https://kovan-testnet.github.io/website/\",\n    \"genesis\": {\n        \"hash\": \"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9\",\n        \"timestamp\": null,\n        \"gasLimit\": 6000000,\n        \"difficulty\": 131072,\n        \"nonce\": \"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"extraData\": \"0x\",\n        \"stateRoot\": \"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 5067000,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 9200000,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 10255201,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 14111141,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"116.203.116.241\",\n            \"port\": 30303,\n            \"id\": \"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45\",\n            \"location\": \"\",\n            \"comment\": \"1\"\n        },\n        {\n            \"ip\": \"3.217.96.11\",\n            \"port\": 30303,\n            \"id\": \"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0\",\n            \"location\": \"\",\n            \"comment\": \"2\"\n        },\n        {\n            \"ip\": \"108.61.170.124\",\n            \"port\": 30303,\n            \"id\": \"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c\",\n            \"location\": \"\",\n            \"comment\": \"3\"\n        },\n        {\n            \"ip\": \"157.230.31.163\",\n            \"port\": 30303,\n            \"id\": \"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0\",\n            \"location\": \"\",\n            \"comment\": \"4\"\n        }\n    ]\n}\n", "{\n    \"name\": \"goerli\",\n    \"chainId\": 5,\n    \"networkId\": 5,\n    \"comment\": \"Cross-client PoA test network\",\n    \"url\": \"https://github.com/goerli/testnet\",\n    \"genesis\": {\n        \"hash\": \"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a\",\n        \"timestamp\": \"0x5c51a607\",\n        \"gasLimit\": 10485760,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"stateRoot\": \"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 1561651,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"51.141.78.53\",\n            \"port\": 30303,\n            \"id\": \"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 1\"\n        },\n        {\n            \"ip\": \"13.93.54.137\",\n            \"port\": 30303,\n            \"id\": \"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 2\"\n        },\n        {\n            \"ip\": \"94.237.54.114\",\n            \"port\": 30313,\n            \"id\": \"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 3\"\n        },\n        {\n            \"ip\": \"52.64.155.147\",\n            \"port\": 30303,\n            \"id\": \"c1f8b7c2ac4453271fa07d8e9ecf9a2e8285aa0bd0c07df0131f47153306b0736fd3db8924e7a9bf0bed6b1d8d4f87362a71b033dc7c64547728d953e43e59b2\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 4\"\n        },\n        {\n            \"ip\": \"213.186.16.82\",\n            \"port\": 30303,\n            \"id\": \"f4a9c6ee28586009fb5a96c8af13a58ed6d8315a9eee4772212c1d4d9cebe5a8b8a78ea4434f318726317d04a3f531a1ef0420cf9752605a562cfe858c46e263\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 5\"\n        },\n        {\n            \"ip\": \"3.11.147.67\",\n            \"port\": 30303,\n            \"id\": \"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91\",\n            \"location\": \"\",\n            \"comment\": \"Ethereum Foundation bootnode\"\n        }\n    ]\n}\n", null, "{\n    \"name\": \"chainstart\",\n    \"comment\": \"Start of the Ethereum main chain\",\n    \"eip\": {\n        \"url\": \"\",\n        \"status\": \"\"\n    },\n    \"status\": \"\",\n    \"gasConfig\": {\n        \"minGasLimit\": {\n            \"v\": 5000,\n            \"d\": \"Minimum the gas limit may ever be\"\n        },\n        \"gasLimitBoundDivisor\": {\n            \"v\": 1024,\n            \"d\": \"The bound divisor of the gas limit, used in update calculations\"\n        }\n    },\n    \"gasPrices\": {\n        \"base\": {\n            \"v\": 2,\n            \"d\": \"Gas base cost, used e.g. for ChainID opcode (Istanbul)\"\n        },\n        \"tierStep\": {\n            \"v\": [0, 2, 3, 5, 8, 10, 20],\n            \"d\": \"Once per operation, for a selection of them\"\n        },\n        \"exp\": {\n            \"v\": 10,\n            \"d\": \"Once per EXP instuction\"\n        },\n        \"expByte\": {\n            \"v\": 10,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        },\n        \"sha3\": {\n            \"v\": 30,\n            \"d\": \"Once per SHA3 operation\"\n        },\n        \"sha3Word\": {\n            \"v\": 6,\n            \"d\": \"Once per word of the SHA3 operation's data\"\n        },\n        \"sload\": {\n            \"v\": 50,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"sstoreSet\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes from zero\"\n        },\n        \"sstoreReset\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation if the zeroness does not change from zero\"\n        },\n        \"sstoreRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"jumpdest\": {\n            \"v\": 1,\n            \"d\": \"Refunded gas, once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"log\": {\n            \"v\": 375,\n            \"d\": \"Per LOG* operation\"\n        },\n        \"logData\": {\n            \"v\": 8,\n            \"d\": \"Per byte in a LOG* operation's data\"\n        },\n        \"logTopic\": {\n            \"v\": 375,\n            \"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas\"\n        },\n        \"create\": {\n            \"v\": 32000,\n            \"d\": \"Once per CREATE operation & contract-creation transaction\"\n        },\n        \"call\": {\n            \"v\": 40,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        },\n        \"callStipend\": {\n            \"v\": 2300,\n            \"d\": \"Free gas given at beginning of call\"\n        },\n        \"callValueTransfer\": {\n            \"v\": 9000,\n            \"d\": \"Paid for CALL when the value transfor is non-zero\"\n        },\n        \"callNewAccount\": {\n            \"v\": 25000,\n            \"d\": \"Paid for CALL when the destination address didn't exist prior\"\n        },\n        \"selfdestructRefund\": {\n            \"v\": 24000,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"memory\": {\n            \"v\": 3,\n            \"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL\"\n        },\n        \"quadCoeffDiv\": {\n            \"v\": 512,\n            \"d\": \"Divisor for the quadratic particle of the memory cost equation\"\n        },\n        \"createData\": {\n            \"v\": 200,\n            \"d\": \"\"\n        },\n        \"tx\": {\n            \"v\": 21000,\n            \"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txCreation\": {\n            \"v\": 32000,\n            \"d\": \"The cost of creating a contract via tx\"\n        },\n        \"txDataZero\": {\n            \"v\": 4,\n            \"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 68,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"copy\": {\n            \"v\": 3,\n            \"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added\"\n        },\n        \"ecRecover\": {\n            \"v\": 3000,\n            \"d\": \"\"\n        },\n        \"sha256\": {\n            \"v\": 60,\n            \"d\": \"\"\n        },\n        \"sha256Word\": {\n            \"v\": 12,\n            \"d\": \"\"\n        },\n        \"ripemd160\": {\n            \"v\": 600,\n            \"d\": \"\"\n        },\n        \"ripemd160Word\": {\n            \"v\": 120,\n            \"d\": \"\"\n        },\n        \"identity\": {\n            \"v\": 15,\n            \"d\": \"\"\n        },\n        \"identityWord\": {\n            \"v\": 3,\n            \"d\": \"\"\n        }\n    },\n    \"vm\": {\n        \"stackLimit\": {\n            \"v\": 1024,\n            \"d\": \"Maximum size of VM stack allowed\"\n        },\n        \"callCreateDepth\": {\n            \"v\": 1024,\n            \"d\": \"Maximum depth of call/create stack\"\n        },\n        \"maxExtraDataSize\": {\n            \"v\": 32,\n            \"d\": \"Maximum size extra data may be after Genesis\"\n        }\n    },\n    \"pow\": {\n        \"minimumDifficulty\": {\n            \"v\": 131072,\n            \"d\": \"The minimum that the difficulty may ever be\"\n        },\n        \"difficultyBoundDivisor\": {\n            \"v\": 2048,\n            \"d\": \"The bound divisor of the difficulty, used in the update calculations\"\n        },\n        \"durationLimit\": {\n            \"v\": 13,\n            \"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not\"\n        },\n        \"epochDuration\": {\n            \"v\": 30000,\n            \"d\": \"Duration between proof-of-work epochs\"\n        },\n        \"timebombPeriod\": {\n            \"v\": 100000,\n            \"d\": \"Exponential difficulty timebomb period\"\n        },\n        \"minerReward\": {\n            \"v\": \"5000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"homestead\",\n    \"comment\": \"Homestead hardfork with protocol and network changes\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-606\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"dao\",\n    \"comment\": \"DAO rescue hardfork\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-779\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"tangerineWhistle\",\n    \"comment\": \"Hardfork with gas cost changes for IO-heavy operations\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-608\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"sload\": {\n            \"v\": 200,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"call\": {\n            \"v\": 700,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"spuriousDragon\",\n    \"comment\": \"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-607\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"expByte\": {\n            \"v\": 50,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        }\n    },\n    \"vm\": {\n        \"maxCodeSize\": {\n            \"v\": 24576,\n            \"d\": \"Maximum length of contract code\"\n        }\n    },\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"byzantium\",\n    \"comment\": \"Hardfork with new precompiles, instructions and other protocol changes\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-609\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 20,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        },\n        \"ecAdd\": {\n            \"v\": 500,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 40000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 100000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 80000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"3000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"constantinople\",\n    \"comment\": \"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1013\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation from dirty\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": 19800,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"2000000000000000000\",\n            \"d\": \"The amount a miner gets rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"petersburg\",\n    \"comment\": \"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1716\",\n        \"status\": \"Draft\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"istanbul\",\n    \"comment\": \"HF targeted for December 2019 following the Constantinople/Petersburg HF\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1679\",\n        \"status\": \"Draft\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"blake2Round\": {\n            \"v\": 1,\n            \"d\": \"Gas cost per round for the Blake2 F precompile\"\n        },\n        \"ecAdd\": {\n            \"v\": 150,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 6000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 45000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 34000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 16,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"sstoreSentryGasEIP2200\": {\n            \"v\": 2300,\n            \"d\": \"Minimum gas required to be present for an SSTORE call, not consumed\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitGasEIP2200\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero to non-zero\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19200,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4200,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", "{\n    \"name\": \"muirGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-2384\",\n        \"status\": \"Last Call\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n", null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = \"4.0.47\";\n", "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _version_1 = require(\"./_version\");\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n// Nonce has already been used\n//   - transaction: the transaction attempted\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n    if (_censorErrors) {\n        throw new Error('unknown error');\n    }\n    if (!code) {\n        code = exports.UNKNOWN_ERROR;\n    }\n    if (!params) {\n        params = {};\n    }\n    var messageDetails = [];\n    Object.keys(params).forEach(function (key) {\n        try {\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\n        }\n        catch (error) {\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n        }\n    });\n    messageDetails.push(\"version=\" + _version_1.version);\n    var reason = message;\n    if (messageDetails.length) {\n        message += ' (' + messageDetails.join(', ') + ')';\n    }\n    // @TODO: Any??\n    var error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n    });\n    throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n    if (!(self instanceof kind)) {\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\n    }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n    if (!suffix) {\n        suffix = '';\n    }\n    if (count < expectedCount) {\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n    if (count > expectedCount) {\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n    if (_permanentCensorErrors) {\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCensorship' });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\nfunction checkNormalize() {\n    try {\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n            try {\n                \"test\".normalize(form);\n            }\n            catch (error) {\n                throw new Error('missing ' + form);\n            }\n        });\n        if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error('broken implementation');\n        }\n    }\n    catch (error) {\n        throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, { operation: 'String.prototype.normalize', form: error.message });\n    }\n}\nexports.checkNormalize = checkNormalize;\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\nvar LogLevel = LogLevels[\"default\"];\nfunction setLogLevel(logLevel) {\n    var level = LogLevels[logLevel];\n    if (level == null) {\n        warn(\"invliad log level - \" + logLevel);\n        return;\n    }\n    LogLevel = level;\n}\nexports.setLogLevel = setLogLevel;\nfunction log(logLevel, args) {\n    if (LogLevel > LogLevels[logLevel]) {\n        return;\n    }\n    console.log.apply(console, args);\n}\nfunction warn() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"warn\", args);\n}\nexports.warn = warn;\nfunction info() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"info\", args);\n}\nexports.info = info;\n", "\"use strict\";\n/**\n *  Conversion Utilities\n *\n */\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors = __importStar(require(\"../errors\"));\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nexports.isHexable = isHexable;\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        var args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isArrayish(value) {\n    if (!value || parseInt(String(value.length)) != value.length || typeof (value) === 'string') {\n        return false;\n    }\n    for (var i = 0; i < value.length; i++) {\n        var v = value[i];\n        if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isArrayish = isArrayish;\nfunction arrayify(value) {\n    if (value == null) {\n        errors.throwError('cannot convert null value to array', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (typeof (value) === 'string') {\n        var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (match[1] !== '0x') {\n            errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        value = value.substring(2);\n        if (value.length % 2) {\n            value = '0' + value;\n        }\n        var result = [];\n        for (var i = 0; i < value.length; i += 2) {\n            result.push(parseInt(value.substr(i, 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isArrayish(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    errors.throwError('invalid arrayify value', null, { arg: 'value', value: value, type: typeof (value) });\n    return null;\n}\nexports.arrayify = arrayify;\nfunction concat(objects) {\n    var arrays = [];\n    var length = 0;\n    for (var i = 0; i < objects.length; i++) {\n        var object = arrayify(objects[i]);\n        arrays.push(object);\n        length += object.length;\n    }\n    var result = new Uint8Array(length);\n    var offset = 0;\n    for (var i = 0; i < arrays.length; i++) {\n        result.set(arrays[i], offset);\n        offset += arrays[i].length;\n    }\n    return addSlice(result);\n}\nexports.concat = concat;\nfunction stripZeros(value) {\n    var result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    var start = 0;\n    while (result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexports.stripZeros = stripZeros;\nfunction padZeros(value, length) {\n    value = arrayify(value);\n    if (length < value.length) {\n        throw new Error('cannot pad');\n    }\n    var result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexports.padZeros = padZeros;\nfunction isHexString(value, length) {\n    if (typeof (value) !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nexports.isHexString = isHexString;\nvar HexCharacters = '0123456789abcdef';\nfunction hexlify(value) {\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (typeof (value) === 'number') {\n        if (value < 0) {\n            errors.throwError('cannot hexlify negative value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        // @TODO: Roll this into the above error as a numeric fault (overflow); next version, not backward compatible\n        // We can about (value == MAX_INT) to as well, since that may indicate we underflowed already\n        if (value >= 9007199254740991) {\n            errors.throwError(\"out-of-range\", errors.NUMERIC_FAULT, {\n                operartion: \"hexlify\",\n                fault: \"out-of-safe-range\"\n            });\n        }\n        var hex = '';\n        while (value) {\n            hex = HexCharacters[value & 0x0f] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = '0' + hex;\n            }\n            return '0x' + hex;\n        }\n        return '0x00';\n    }\n    if (typeof (value) === 'string') {\n        var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (match[1] !== '0x') {\n            errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (value.length % 2) {\n            value = '0x0' + value.substring(2);\n        }\n        return value;\n    }\n    if (isArrayish(value)) {\n        var result = [];\n        for (var i = 0; i < value.length; i++) {\n            var v = value[i];\n            result.push(HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f]);\n        }\n        return '0x' + result.join('');\n    }\n    errors.throwError('invalid hexlify value', null, { arg: 'value', value: value });\n    return 'never';\n}\nexports.hexlify = hexlify;\nfunction hexDataLength(data) {\n    if (!isHexString(data) || (data.length % 2) !== 0) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexports.hexDataLength = hexDataLength;\nfunction hexDataSlice(data, offset, endOffset) {\n    if (!isHexString(data)) {\n        errors.throwError('invalid hex data', errors.INVALID_ARGUMENT, { arg: 'value', value: data });\n    }\n    if ((data.length % 2) !== 0) {\n        errors.throwError('hex data length must be even', errors.INVALID_ARGUMENT, { arg: 'value', value: data });\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return '0x' + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return '0x' + data.substring(offset);\n}\nexports.hexDataSlice = hexDataSlice;\nfunction hexStripZeros(value) {\n    if (!isHexString(value)) {\n        errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    while (value.length > 3 && value.substring(0, 3) === '0x0') {\n        value = '0x' + value.substring(3);\n    }\n    return value;\n}\nexports.hexStripZeros = hexStripZeros;\nfunction hexZeroPad(value, length) {\n    if (!isHexString(value)) {\n        errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    while (value.length < 2 * length + 2) {\n        value = '0x0' + value.substring(2);\n    }\n    return value;\n}\nexports.hexZeroPad = hexZeroPad;\nfunction isSignature(value) {\n    return (value && value.r != null && value.s != null);\n}\nfunction splitSignature(signature) {\n    var v = 0;\n    var r = '0x', s = '0x';\n    if (isSignature(signature)) {\n        if (signature.v == null && signature.recoveryParam == null) {\n            errors.throwError('at least on of recoveryParam or v must be specified', errors.INVALID_ARGUMENT, { argument: 'signature', value: signature });\n        }\n        r = hexZeroPad(signature.r, 32);\n        s = hexZeroPad(signature.s, 32);\n        v = signature.v;\n        if (typeof (v) === 'string') {\n            v = parseInt(v, 16);\n        }\n        var recoveryParam = signature.recoveryParam;\n        if (recoveryParam == null && signature.v != null) {\n            recoveryParam = 1 - (v % 2);\n        }\n        v = 27 + recoveryParam;\n    }\n    else {\n        var bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            throw new Error('invalid signature');\n        }\n        r = hexlify(bytes.slice(0, 32));\n        s = hexlify(bytes.slice(32, 64));\n        v = bytes[64];\n        if (v !== 27 && v !== 28) {\n            v = 27 + (v % 2);\n        }\n    }\n    return {\n        r: r,\n        s: s,\n        recoveryParam: (v - 27),\n        v: v\n    };\n}\nexports.splitSignature = splitSignature;\nfunction joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? '0x1c' : '0x1b')\n    ]));\n}\nexports.joinSignature = joinSignature;\n", "'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors = __importStar(require(\"../errors\"));\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\nexports.defineReadOnly = defineReadOnly;\n// There are some issues with instanceof with npm link, so we use this\n// to ensure types are what we expect.\nfunction setType(object, type) {\n    Object.defineProperty(object, '_ethersType', { configurable: false, value: type, writable: false });\n}\nexports.setType = setType;\nfunction isType(object, type) {\n    return (object && object._ethersType === type);\n}\nexports.isType = isType;\nfunction resolveProperties(object) {\n    var result = {};\n    var promises = [];\n    Object.keys(object).forEach(function (key) {\n        var value = object[key];\n        if (value instanceof Promise) {\n            promises.push(value.then(function (value) {\n                result[key] = value;\n                return null;\n            }));\n        }\n        else {\n            result[key] = value;\n        }\n    });\n    return Promise.all(promises).then(function () {\n        return result;\n    });\n}\nexports.resolveProperties = resolveProperties;\nfunction checkProperties(object, properties) {\n    if (!object || typeof (object) !== 'object') {\n        errors.throwError('invalid object', errors.INVALID_ARGUMENT, {\n            argument: 'object',\n            value: object\n        });\n    }\n    Object.keys(object).forEach(function (key) {\n        if (!properties[key]) {\n            errors.throwError('invalid object key - ' + key, errors.INVALID_ARGUMENT, {\n                argument: 'transaction',\n                value: object,\n                key: key\n            });\n        }\n    });\n}\nexports.checkProperties = checkProperties;\nfunction shallowCopy(object) {\n    var result = {};\n    for (var key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nexports.shallowCopy = shallowCopy;\nvar opaque = { boolean: true, number: true, string: true };\nfunction deepCopy(object, frozen) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        var result = object.map(function (item) { return deepCopy(item, frozen); });\n        if (frozen) {\n            Object.freeze(result);\n        }\n        return result;\n    }\n    if (typeof (object) === 'object') {\n        // Some internal objects, which are already immutable\n        if (isType(object, 'BigNumber')) {\n            return object;\n        }\n        if (isType(object, 'Description')) {\n            return object;\n        }\n        if (isType(object, 'Indexed')) {\n            return object;\n        }\n        var result = {};\n        for (var key in object) {\n            var value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value, frozen));\n        }\n        if (frozen) {\n            Object.freeze(result);\n        }\n        return result;\n    }\n    // The function type is also immutable, so safe to copy by assignment\n    if (typeof (object) === 'function') {\n        return object;\n    }\n    throw new Error('Cannot deepCopy ' + typeof (object));\n}\nexports.deepCopy = deepCopy;\n// See: https://github.com/isaacs/inherits/blob/master/inherits_browser.js\nfunction inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n}\nfunction inheritable(parent) {\n    return function (child) {\n        inherits(child, parent);\n        defineReadOnly(child, 'inherits', inheritable(child));\n    };\n}\nexports.inheritable = inheritable;\n", "'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar properties_1 = require(\"./properties\");\nvar errors = __importStar(require(\"../errors\"));\nvar BN_1 = new bn_js_1.default.BN(-1);\nfunction toHex(bn) {\n    var value = bn.toString(16);\n    if (value[0] === '-') {\n        if ((value.length % 2) === 0) {\n            return '-0x0' + value.substring(1);\n        }\n        return \"-0x\" + value.substring(1);\n    }\n    if ((value.length % 2) === 1) {\n        return '0x0' + value;\n    }\n    return '0x' + value;\n}\nfunction toBN(value) {\n    return _bnify(bigNumberify(value));\n}\nfunction toBigNumber(bn) {\n    return new BigNumber(toHex(bn));\n}\nfunction _bnify(value) {\n    var hex = value._hex;\n    if (hex[0] === '-') {\n        return (new bn_js_1.default.BN(hex.substring(3), 16)).mul(BN_1);\n    }\n    return new bn_js_1.default.BN(hex.substring(2), 16);\n}\nvar BigNumber = /** @class */ (function () {\n    function BigNumber(value) {\n        errors.checkNew(this, BigNumber);\n        properties_1.setType(this, 'BigNumber');\n        if (typeof (value) === 'string') {\n            if (bytes_1.isHexString(value)) {\n                if (value == '0x') {\n                    value = '0x0';\n                }\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value[0] === '-' && bytes_1.isHexString(value.substring(1))) {\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value.match(/^-?[0-9]*$/)) {\n                if (value == '') {\n                    value = '0';\n                }\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            else {\n                errors.throwError('invalid BigNumber string value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n            }\n        }\n        else if (typeof (value) === 'number') {\n            if (parseInt(String(value)) !== value) {\n                errors.throwError('underflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'underflow', value: value, outputValue: parseInt(String(value)) });\n            }\n            try {\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            catch (error) {\n                errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n            }\n        }\n        else if (value instanceof BigNumber) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (value.toHexString) {\n            properties_1.defineReadOnly(this, '_hex', toHex(toBN(value.toHexString())));\n        }\n        else if (value._hex && bytes_1.isHexString(value._hex)) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (bytes_1.isArrayish(value)) {\n            properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(bytes_1.hexlify(value).substring(2), 16)));\n        }\n        else {\n            errors.throwError('invalid BigNumber value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n    }\n    BigNumber.prototype.fromTwos = function (value) {\n        return toBigNumber(_bnify(this).fromTwos(value));\n    };\n    BigNumber.prototype.toTwos = function (value) {\n        return toBigNumber(_bnify(this).toTwos(value));\n    };\n    BigNumber.prototype.abs = function () {\n        if (this._hex[0] === '-') {\n            return toBigNumber(_bnify(this).mul(BN_1));\n        }\n        return this;\n    };\n    BigNumber.prototype.add = function (other) {\n        return toBigNumber(_bnify(this).add(toBN(other)));\n    };\n    BigNumber.prototype.sub = function (other) {\n        return toBigNumber(_bnify(this).sub(toBN(other)));\n    };\n    BigNumber.prototype.div = function (other) {\n        var o = bigNumberify(other);\n        if (o.isZero()) {\n            errors.throwError('division by zero', errors.NUMERIC_FAULT, { operation: 'divide', fault: 'division by zero' });\n        }\n        return toBigNumber(_bnify(this).div(toBN(other)));\n    };\n    BigNumber.prototype.mul = function (other) {\n        return toBigNumber(_bnify(this).mul(toBN(other)));\n    };\n    BigNumber.prototype.mod = function (other) {\n        return toBigNumber(_bnify(this).mod(toBN(other)));\n    };\n    BigNumber.prototype.pow = function (other) {\n        return toBigNumber(_bnify(this).pow(toBN(other)));\n    };\n    BigNumber.prototype.maskn = function (value) {\n        return toBigNumber(_bnify(this).maskn(value));\n    };\n    BigNumber.prototype.eq = function (other) {\n        return _bnify(this).eq(toBN(other));\n    };\n    BigNumber.prototype.lt = function (other) {\n        return _bnify(this).lt(toBN(other));\n    };\n    BigNumber.prototype.lte = function (other) {\n        return _bnify(this).lte(toBN(other));\n    };\n    BigNumber.prototype.gt = function (other) {\n        return _bnify(this).gt(toBN(other));\n    };\n    BigNumber.prototype.gte = function (other) {\n        return _bnify(this).gte(toBN(other));\n    };\n    BigNumber.prototype.isZero = function () {\n        return _bnify(this).isZero();\n    };\n    BigNumber.prototype.toNumber = function () {\n        try {\n            return _bnify(this).toNumber();\n        }\n        catch (error) {\n            errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n        }\n        return null;\n    };\n    BigNumber.prototype.toString = function () {\n        return _bnify(this).toString(10);\n    };\n    BigNumber.prototype.toHexString = function () {\n        return this._hex;\n    };\n    BigNumber.isBigNumber = function (value) {\n        return properties_1.isType(value, 'BigNumber');\n    };\n    return BigNumber;\n}());\nexports.BigNumber = BigNumber;\nfunction bigNumberify(value) {\n    if (BigNumber.isBigNumber(value)) {\n        return value;\n    }\n    return new BigNumber(value);\n}\nexports.bigNumberify = bigNumberify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_1 = require(\"./utils/bignumber\");\nvar AddressZero = '0x0000000000000000000000000000000000000000';\nexports.AddressZero = AddressZero;\nvar HashZero = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexports.HashZero = HashZero;\n// NFKD (decomposed)\n//const EtherSymbol = '\\uD835\\uDF63';\n// NFKC (composed)\nvar EtherSymbol = '\\u039e';\nexports.EtherSymbol = EtherSymbol;\nvar NegativeOne = bignumber_1.bigNumberify(-1);\nexports.NegativeOne = NegativeOne;\nvar Zero = bignumber_1.bigNumberify(0);\nexports.Zero = Zero;\nvar One = bignumber_1.bigNumberify(1);\nexports.One = One;\nvar Two = bignumber_1.bigNumberify(2);\nexports.Two = Two;\nvar WeiPerEther = bignumber_1.bigNumberify('1000000000000000000');\nexports.WeiPerEther = WeiPerEther;\nvar MaxUint256 = bignumber_1.bigNumberify('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexports.MaxUint256 = MaxUint256;\n", "/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n", "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sha3 = require(\"js-sha3\");\nvar bytes_1 = require(\"./bytes\");\nfunction keccak256(data) {\n    return '0x' + sha3.keccak_256(bytes_1.arrayify(data));\n}\nexports.keccak256 = keccak256;\n", "\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        var length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n", "'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar keccak256_1 = require(\"./keccak256\");\nvar rlp_1 = require(\"./rlp\");\nvar errors = require(\"../errors\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n    if (typeof (address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    address = address.toLowerCase();\n    var chars = address.substring(2).split('');\n    var hashed = new Uint8Array(40);\n    for (var i_1 = 0; i_1 < 40; i_1++) {\n        hashed[i_1] = chars[i_1].charCodeAt(0);\n    }\n    hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n    for (var i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + '00';\n    var expanded = '';\n    address.split('').forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        var block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    var checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = '0' + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    var result = null;\n    if (typeof (address) !== 'string') {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== '0x') {\n            address = '0x' + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        result = (new bn_js_1.default.BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = '0' + result;\n        }\n        result = getChecksumAddress('0x' + result);\n    }\n    else {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n    var base36 = (new bn_js_1.default.BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = '0' + base36;\n    }\n    return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    if (!transaction.from) {\n        throw new Error('missing from address');\n    }\n    var nonce = transaction.nonce;\n    return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([\n        getAddress(transaction.from),\n        bytes_1.stripZeros(bytes_1.hexlify(nonce))\n    ])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n    var initCodeHash = options.initCodeHash;\n    if (options.initCode) {\n        if (initCodeHash) {\n            if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n                errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n                    arg: \"options\", value: options\n                });\n            }\n        }\n        else {\n            initCodeHash = keccak256_1.keccak256(options.initCode);\n        }\n    }\n    if (!initCodeHash) {\n        errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    var from = getAddress(options.from);\n    var salt = bytes_1.arrayify(options.salt);\n    if (salt.length !== 32) {\n        errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\n        \"0xff\",\n        from,\n        salt,\n        initCodeHash\n    ])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;\n", "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar errors_1 = require(\"../errors\");\nvar bytes_1 = require(\"./bytes\");\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm = exports.UnicodeNormalizationForm || (exports.UnicodeNormalizationForm = {}));\n;\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form) {\n    if (form === void 0) { form = UnicodeNormalizationForm.current; }\n    if (form != UnicodeNormalizationForm.current) {\n        errors_1.checkNormalize();\n        str = str.normalize(form);\n    }\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error('invalid utf-8 string');\n            }\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((c >> 18) | 0xf0);\n            result.push(((c >> 12) & 0x3f) | 0x80);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return bytes_1.arrayify(result);\n}\nexports.toUtf8Bytes = toUtf8Bytes;\n;\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction toUtf8String(bytes, ignoreErrors) {\n    bytes = bytes_1.arrayify(bytes);\n    var result = '';\n    var i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        var c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result += String.fromCharCode(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        var extraLength = null;\n        var overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if (!ignoreErrors) {\n                if ((c & 0xc0) === 0x80) {\n                    throw new Error('invalid utf8 byte sequence; unexpected continuation byte');\n                }\n                throw new Error('invalid utf8 byte sequence; invalid prefix');\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i + extraLength > bytes.length) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; too short');\n            }\n            // If there is an invalid unprocessed byte, skip continuation bytes\n            for (; i < bytes.length; i++) {\n                if (bytes[i] >> 6 !== 0x02) {\n                    break;\n                }\n            }\n            continue;\n        }\n        // Remove the length prefix from the char\n        var res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        if (res === null) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; invalid continuation byte');\n            }\n            continue;\n        }\n        // Check for overlong seuences (more bytes than needed)\n        if (res <= overlongMask) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; overlong');\n            }\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; out-of-range');\n            }\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; utf-16 surrogate');\n            }\n            continue;\n        }\n        if (res <= 0xffff) {\n            result += String.fromCharCode(res);\n            continue;\n        }\n        res -= 0x10000;\n        result += String.fromCharCode(((res >> 10) & 0x3ff) + 0xd800, (res & 0x3ff) + 0xdc00);\n    }\n    return result;\n}\nexports.toUtf8String = toUtf8String;\nfunction formatBytes32String(text) {\n    // Get the bytes\n    var bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error('bytes32 string must be less than 32 bytes');\n    }\n    // Zero-pad (implicitly null-terminates)\n    return bytes_1.hexlify(bytes_1.concat([bytes, constants_1.HashZero]).slice(0, 32));\n}\nexports.formatBytes32String = formatBytes32String;\nfunction parseBytes32String(bytes) {\n    var data = bytes_1.arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error('invalid bytes32 - not 32 bytes long');\n    }\n    if (data[31] !== 0) {\n        throw new Error('invalid bytes32 string - no null terminator');\n    }\n    // Find the null termination\n    var length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\nexports.parseBytes32String = parseBytes32String;\n", "'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar constants_1 = require(\"../constants\");\nvar errors = __importStar(require(\"../errors\"));\nvar address_1 = require(\"./address\");\nvar bignumber_1 = require(\"./bignumber\");\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar properties_1 = require(\"./properties\");\n///////////////////////////////\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexports.defaultCoerceFunc = function (type, value) {\n    var match = type.match(paramTypeNumber);\n    if (match && parseInt(match[2]) <= 48) {\n        return value.toNumber();\n    }\n    return value;\n};\n///////////////////////////////////\n// Parsing for Solidity Signatures\nvar regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nvar regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = 'uint256' + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = 'int256' + type.substring(3);\n    }\n    return type;\n}\nfunction parseParam(param, allowIndexed) {\n    var originalParam = param;\n    function throwError(i) {\n        throw new Error('unexpected character \"' + originalParam[i] + '\" at position ' + i + ' in \"' + originalParam + '\"');\n    }\n    param = param.replace(/\\s/g, ' ');\n    var parent = { type: '', name: '', state: { allowType: true } };\n    var node = parent;\n    for (var i = 0; i < param.length; i++) {\n        var c = param[i];\n        switch (c) {\n            case '(':\n                if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [{ type: '', name: '', parent: node, state: { allowType: true } }];\n                node = node.components[0];\n                break;\n            case ')':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case ',':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case ' ':\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== '') {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== '') {\n                        if (allowIndexed && node.name === 'indexed') {\n                            node.indexed = true;\n                            node.name = '';\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case '[':\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case ']':\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        throw new Error(\"unexpected eof\");\n    }\n    delete parent.state;\n    if (allowIndexed && node.name === 'indexed') {\n        node.indexed = true;\n        node.name = '';\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\n// @TODO: Better return type\nfunction parseSignatureEvent(fragment) {\n    var abi = {\n        anonymous: false,\n        inputs: [],\n        name: '',\n        type: 'event'\n    };\n    var match = fragment.match(regexParen);\n    if (!match) {\n        throw new Error('invalid event: ' + fragment);\n    }\n    abi.name = match[1].trim();\n    splitNesting(match[2]).forEach(function (param) {\n        param = parseParam(param, true);\n        param.indexed = !!param.indexed;\n        abi.inputs.push(param);\n    });\n    match[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'anonymous':\n                abi.anonymous = true;\n                break;\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    if (abi.name && !abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + abi.name + '\"');\n    }\n    return abi;\n}\nfunction parseSignatureFunction(fragment) {\n    var abi = {\n        constant: false,\n        gas: null,\n        inputs: [],\n        name: '',\n        outputs: [],\n        payable: false,\n        stateMutability: null,\n        type: 'function'\n    };\n    var comps = fragment.split('@');\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            throw new Error('invalid signature');\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            throw new Error('invalid signature gas');\n        }\n        abi.gas = bignumber_1.bigNumberify(comps[1]);\n        fragment = comps[0];\n    }\n    comps = fragment.split(' returns ');\n    var left = comps[0].match(regexParen);\n    if (!left) {\n        throw new Error('invalid signature');\n    }\n    abi.name = left[1].trim();\n    if (!abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + left[1] + '\"');\n    }\n    splitNesting(left[2]).forEach(function (param) {\n        abi.inputs.push(parseParam(param));\n    });\n    left[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'constant':\n                abi.constant = true;\n                break;\n            case 'payable':\n                abi.payable = true;\n                abi.stateMutability = 'payable';\n                break;\n            case 'pure':\n                abi.constant = true;\n                abi.stateMutability = 'pure';\n                break;\n            case 'view':\n                abi.constant = true;\n                abi.stateMutability = 'view';\n                break;\n            case 'external':\n            case 'public':\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    // We have outputs\n    if (comps.length > 1) {\n        var right = comps[1].match(regexParen);\n        if (right[1].trim() != '' || right[3].trim() != '') {\n            throw new Error('unexpected tokens');\n        }\n        splitNesting(right[2]).forEach(function (param) {\n            abi.outputs.push(parseParam(param));\n        });\n    }\n    if (abi.name === 'constructor') {\n        abi.type = \"constructor\";\n        if (abi.outputs.length) {\n            throw new Error('constructor may not have outputs');\n        }\n        delete abi.name;\n        delete abi.outputs;\n    }\n    return abi;\n}\nfunction parseParamType(type) {\n    return parseParam(type, true);\n}\nexports.parseParamType = parseParamType;\n// @TODO: Allow a second boolean to expose names\nfunction formatParamType(paramType) {\n    return getParamCoder(exports.defaultCoerceFunc, paramType).type;\n}\nexports.formatParamType = formatParamType;\n// @TODO: Allow a second boolean to expose names and modifiers\nfunction formatSignature(fragment) {\n    return fragment.name + '(' + fragment.inputs.map(function (i) { return formatParamType(i); }).join(',') + ')';\n}\nexports.formatSignature = formatSignature;\nfunction parseSignature(fragment) {\n    if (typeof (fragment) === 'string') {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        fragment = fragment.replace(/\\s/g, ' ');\n        fragment = fragment.replace(/\\(/g, ' (').replace(/\\)/g, ') ').replace(/\\s+/g, ' ');\n        fragment = fragment.trim();\n        if (fragment.substring(0, 6) === 'event ') {\n            return parseSignatureEvent(fragment.substring(6).trim());\n        }\n        else {\n            if (fragment.substring(0, 9) === 'function ') {\n                fragment = fragment.substring(9);\n            }\n            return parseSignatureFunction(fragment.trim());\n        }\n    }\n    throw new Error('unknown signature');\n}\nexports.parseSignature = parseSignature;\nvar Coder = /** @class */ (function () {\n    function Coder(coerceFunc, name, type, localName, dynamic) {\n        this.coerceFunc = coerceFunc;\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    return Coder;\n}());\n// Clones the functionality of an existing Coder, but without a localName\nvar CoderAnonymous = /** @class */ (function (_super) {\n    __extends(CoderAnonymous, _super);\n    function CoderAnonymous(coder) {\n        var _this = _super.call(this, coder.coerceFunc, coder.name, coder.type, undefined, coder.dynamic) || this;\n        properties_1.defineReadOnly(_this, 'coder', coder);\n        return _this;\n    }\n    CoderAnonymous.prototype.encode = function (value) { return this.coder.encode(value); };\n    CoderAnonymous.prototype.decode = function (data, offset) { return this.coder.decode(data, offset); };\n    return CoderAnonymous;\n}(Coder));\nvar CoderNull = /** @class */ (function (_super) {\n    __extends(CoderNull, _super);\n    function CoderNull(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'null', '', localName, false) || this;\n    }\n    CoderNull.prototype.encode = function (value) {\n        return bytes_1.arrayify([]);\n    };\n    CoderNull.prototype.decode = function (data, offset) {\n        if (offset > data.length) {\n            throw new Error('invalid null');\n        }\n        return {\n            consumed: 0,\n            value: this.coerceFunc('null', undefined)\n        };\n    };\n    return CoderNull;\n}(Coder));\nvar CoderNumber = /** @class */ (function (_super) {\n    __extends(CoderNumber, _super);\n    function CoderNumber(coerceFunc, size, signed, localName) {\n        var _this = this;\n        var name = ((signed ? 'int' : 'uint') + (size * 8));\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.size = size;\n        _this.signed = signed;\n        return _this;\n    }\n    CoderNumber.prototype.encode = function (value) {\n        try {\n            var v = bignumber_1.bigNumberify(value);\n            if (this.signed) {\n                var bounds = constants_1.MaxUint256.maskn(this.size * 8 - 1);\n                if (v.gt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n                bounds = bounds.add(constants_1.One).mul(constants_1.NegativeOne);\n                if (v.lt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n            }\n            else if (v.lt(constants_1.Zero) || v.gt(constants_1.MaxUint256.maskn(this.size * 8))) {\n                throw new Error('out-of-bounds');\n            }\n            v = v.toTwos(this.size * 8).maskn(this.size * 8);\n            if (this.signed) {\n                v = v.fromTwos(this.size * 8).toTwos(256);\n            }\n            return bytes_1.padZeros(bytes_1.arrayify(v), 32);\n        }\n        catch (error) {\n            errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: value\n            });\n        }\n        return null;\n    };\n    CoderNumber.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        var junkLength = 32 - this.size;\n        var value = bignumber_1.bigNumberify(data.slice(offset + junkLength, offset + 32));\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        else {\n            value = value.maskn(this.size * 8);\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, value),\n        };\n    };\n    return CoderNumber;\n}(Coder));\nvar uint256Coder = new CoderNumber(function (type, value) { return value; }, 32, false, 'none');\nvar CoderBoolean = /** @class */ (function (_super) {\n    __extends(CoderBoolean, _super);\n    function CoderBoolean(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bool', 'bool', localName, false) || this;\n    }\n    CoderBoolean.prototype.encode = function (value) {\n        return uint256Coder.encode(!!value ? 1 : 0);\n    };\n    CoderBoolean.prototype.decode = function (data, offset) {\n        try {\n            var result = uint256Coder.decode(data, offset);\n        }\n        catch (error) {\n            if (error.reason === 'insufficient data for uint256 type') {\n                errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'boolean',\n                    value: error.value\n                });\n            }\n            throw error;\n        }\n        return {\n            consumed: result.consumed,\n            value: this.coerceFunc('bool', !result.value.isZero())\n        };\n    };\n    return CoderBoolean;\n}(Coder));\nvar CoderFixedBytes = /** @class */ (function (_super) {\n    __extends(CoderFixedBytes, _super);\n    function CoderFixedBytes(coerceFunc, length, localName) {\n        var _this = this;\n        var name = ('bytes' + length);\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.length = length;\n        return _this;\n    }\n    CoderFixedBytes.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            var data = bytes_1.arrayify(value);\n            if (data.length !== this.length) {\n                throw new Error('incorrect data length');\n            }\n            result.set(data);\n        }\n        catch (error) {\n            errors.throwError('invalid ' + this.name + ' value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: (error.value || value)\n            });\n        }\n        return result;\n    };\n    CoderFixedBytes.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, bytes_1.hexlify(data.slice(offset, offset + this.length)))\n        };\n    };\n    return CoderFixedBytes;\n}(Coder));\nvar CoderAddress = /** @class */ (function (_super) {\n    __extends(CoderAddress, _super);\n    function CoderAddress(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'address', 'address', localName, false) || this;\n    }\n    CoderAddress.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            result.set(bytes_1.arrayify(address_1.getAddress(value)), 12);\n        }\n        catch (error) {\n            errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: value\n            });\n        }\n        return result;\n    };\n    CoderAddress.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for address type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc('address', address_1.getAddress(bytes_1.hexlify(data.slice(offset + 12, offset + 32))))\n        };\n    };\n    return CoderAddress;\n}(Coder));\nfunction _encodeDynamicBytes(value) {\n    var dataLength = 32 * Math.ceil(value.length / 32);\n    var padding = new Uint8Array(dataLength - value.length);\n    return bytes_1.concat([\n        uint256Coder.encode(value.length),\n        value,\n        padding\n    ]);\n}\nfunction _decodeDynamicBytes(data, offset, localName) {\n    if (data.length < offset + 32) {\n        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32))\n        });\n    }\n    var length = uint256Coder.decode(data, offset).value;\n    try {\n        length = length.toNumber();\n    }\n    catch (error) {\n        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: length.toString()\n        });\n    }\n    if (data.length < offset + 32 + length) {\n        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32 + length))\n        });\n    }\n    return {\n        consumed: 32 + 32 * Math.ceil(length / 32),\n        value: data.slice(offset + 32, offset + 32 + length),\n    };\n}\nvar CoderDynamicBytes = /** @class */ (function (_super) {\n    __extends(CoderDynamicBytes, _super);\n    function CoderDynamicBytes(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bytes', 'bytes', localName, true) || this;\n    }\n    CoderDynamicBytes.prototype.encode = function (value) {\n        try {\n            return _encodeDynamicBytes(bytes_1.arrayify(value));\n        }\n        catch (error) {\n            errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'bytes',\n                value: error.value\n            });\n        }\n        return null;\n    };\n    CoderDynamicBytes.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('bytes', bytes_1.hexlify(result.value));\n        return result;\n    };\n    return CoderDynamicBytes;\n}(Coder));\nvar CoderString = /** @class */ (function (_super) {\n    __extends(CoderString, _super);\n    function CoderString(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'string', 'string', localName, true) || this;\n    }\n    CoderString.prototype.encode = function (value) {\n        if (typeof (value) !== 'string') {\n            errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'string',\n                value: value\n            });\n        }\n        return _encodeDynamicBytes(utf8_1.toUtf8Bytes(value));\n    };\n    CoderString.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('string', utf8_1.toUtf8String(result.value));\n        return result;\n    };\n    return CoderString;\n}(Coder));\nfunction alignSize(size) {\n    return 32 * Math.ceil(size / 32);\n}\nfunction pack(coders, values) {\n    if (Array.isArray(values)) {\n        // do nothing\n    }\n    else if (values && typeof (values) === 'object') {\n        var arrayValues = [];\n        coders.forEach(function (coder) {\n            arrayValues.push(values[coder.localName]);\n        });\n        values = arrayValues;\n    }\n    else {\n        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    if (coders.length !== values.length) {\n        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    var parts = [];\n    coders.forEach(function (coder, index) {\n        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n    });\n    var staticSize = 0, dynamicSize = 0;\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            staticSize += 32;\n            dynamicSize += alignSize(part.value.length);\n        }\n        else {\n            staticSize += alignSize(part.value.length);\n        }\n    });\n    var offset = 0, dynamicOffset = staticSize;\n    var data = new Uint8Array(staticSize + dynamicSize);\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            //uint256Coder.encode(dynamicOffset).copy(data, offset);\n            data.set(uint256Coder.encode(dynamicOffset), offset);\n            offset += 32;\n            //part.value.copy(data, dynamicOffset);  @TODO\n            data.set(part.value, dynamicOffset);\n            dynamicOffset += alignSize(part.value.length);\n        }\n        else {\n            //part.value.copy(data, offset);  @TODO\n            data.set(part.value, offset);\n            offset += alignSize(part.value.length);\n        }\n    });\n    return data;\n}\nfunction unpack(coders, data, offset) {\n    var baseOffset = offset;\n    var consumed = 0;\n    var value = [];\n    coders.forEach(function (coder) {\n        if (coder.dynamic) {\n            var dynamicOffset = uint256Coder.decode(data, offset);\n            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n            // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n            result.consumed = dynamicOffset.consumed;\n        }\n        else {\n            var result = coder.decode(data, offset);\n        }\n        if (result.value != undefined) {\n            value.push(result.value);\n        }\n        offset += result.consumed;\n        consumed += result.consumed;\n    });\n    coders.forEach(function (coder, index) {\n        var name = coder.localName;\n        if (!name) {\n            return;\n        }\n        if (name === 'length') {\n            name = '_length';\n        }\n        if (value[name] != null) {\n            return;\n        }\n        value[name] = value[index];\n    });\n    return {\n        value: value,\n        consumed: consumed\n    };\n}\nvar CoderArray = /** @class */ (function (_super) {\n    __extends(CoderArray, _super);\n    function CoderArray(coerceFunc, coder, length, localName) {\n        var _this = this;\n        var type = (coder.type + '[' + (length >= 0 ? length : '') + ']');\n        var dynamic = (length === -1 || coder.dynamic);\n        _this = _super.call(this, coerceFunc, 'array', type, localName, dynamic) || this;\n        _this.coder = coder;\n        _this.length = length;\n        return _this;\n    }\n    CoderArray.prototype.encode = function (value) {\n        if (!Array.isArray(value)) {\n            errors.throwError('expected array value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'array',\n                value: value\n            });\n        }\n        var count = this.length;\n        var result = new Uint8Array(0);\n        if (count === -1) {\n            count = value.length;\n            result = uint256Coder.encode(count);\n        }\n        errors.checkArgumentCount(count, value.length, ' in coder array' + (this.localName ? (\" \" + this.localName) : \"\"));\n        var coders = [];\n        for (var i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return bytes_1.concat([result, pack(coders, value)]);\n    };\n    CoderArray.prototype.decode = function (data, offset) {\n        // @TODO:\n        //if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n        var consumed = 0;\n        var count = this.length;\n        if (count === -1) {\n            try {\n                var decodedLength = uint256Coder.decode(data, offset);\n            }\n            catch (error) {\n                errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: error.value\n                });\n            }\n            try {\n                count = decodedLength.value.toNumber();\n            }\n            catch (error) {\n                errors.throwError('array count too large', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: decodedLength.value.toString()\n                });\n            }\n            consumed += decodedLength.consumed;\n            offset += decodedLength.consumed;\n        }\n        var coders = [];\n        for (var i = 0; i < count; i++) {\n            coders.push(new CoderAnonymous(this.coder));\n        }\n        var result = unpack(coders, data, offset);\n        result.consumed += consumed;\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderArray;\n}(Coder));\nvar CoderTuple = /** @class */ (function (_super) {\n    __extends(CoderTuple, _super);\n    function CoderTuple(coerceFunc, coders, localName) {\n        var _this = this;\n        var dynamic = false;\n        var types = [];\n        coders.forEach(function (coder) {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        var type = ('tuple(' + types.join(',') + ')');\n        _this = _super.call(this, coerceFunc, 'tuple', type, localName, dynamic) || this;\n        _this.coders = coders;\n        return _this;\n    }\n    CoderTuple.prototype.encode = function (value) {\n        return pack(this.coders, value);\n    };\n    CoderTuple.prototype.decode = function (data, offset) {\n        var result = unpack(this.coders, data, offset);\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderTuple;\n}(Coder));\n/*\nfunction getTypes(coders) {\n    var type = coderTuple(coders).type;\n    return type.substring(6, type.length - 1);\n}\n*/\nfunction splitNesting(value) {\n    value = value.trim();\n    var result = [];\n    var accum = '';\n    var depth = 0;\n    for (var offset = 0; offset < value.length; offset++) {\n        var c = value[offset];\n        if (c === ',' && depth === 0) {\n            result.push(accum);\n            accum = '';\n        }\n        else {\n            accum += c;\n            if (c === '(') {\n                depth++;\n            }\n            else if (c === ')') {\n                depth--;\n                if (depth === -1) {\n                    throw new Error('unbalanced parenthsis');\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n// @TODO: Is there a way to return \"class\"?\nvar paramTypeSimple = {\n    address: CoderAddress,\n    bool: CoderBoolean,\n    string: CoderString,\n    bytes: CoderDynamicBytes,\n};\nfunction getTupleParamCoder(coerceFunc, components, localName) {\n    if (!components) {\n        components = [];\n    }\n    var coders = [];\n    components.forEach(function (component) {\n        coders.push(getParamCoder(coerceFunc, component));\n    });\n    return new CoderTuple(coerceFunc, coders, localName);\n}\nfunction getParamCoder(coerceFunc, param) {\n    var coder = paramTypeSimple[param.type];\n    if (coder) {\n        return new coder(coerceFunc, param.name);\n    }\n    var match = param.type.match(paramTypeNumber);\n    if (match) {\n        var size = parseInt(match[2] || \"256\");\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);\n    }\n    var match = param.type.match(paramTypeBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderFixedBytes(coerceFunc, size, param.name);\n    }\n    var match = param.type.match(paramTypeArray);\n    if (match) {\n        var size = parseInt(match[2] || \"-1\");\n        param = properties_1.shallowCopy(param);\n        param.type = match[1];\n        param = properties_1.deepCopy(param);\n        return new CoderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);\n    }\n    if (param.type.substring(0, 5) === 'tuple') {\n        return getTupleParamCoder(coerceFunc, param.components, param.name);\n    }\n    if (param.type === '') {\n        return new CoderNull(coerceFunc, param.name);\n    }\n    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {\n        arg: 'type',\n        value: param.type\n    });\n    return null;\n}\nvar AbiCoder = /** @class */ (function () {\n    function AbiCoder(coerceFunc) {\n        errors.checkNew(this, AbiCoder);\n        if (!coerceFunc) {\n            coerceFunc = exports.defaultCoerceFunc;\n        }\n        properties_1.defineReadOnly(this, 'coerceFunc', coerceFunc);\n    }\n    AbiCoder.prototype.encode = function (types, values) {\n        if (types.length !== values.length) {\n            errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        var coders = [];\n        types.forEach(function (type) {\n            // Convert types to type objects\n            //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n            //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = type;\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return bytes_1.hexlify(new CoderTuple(this.coerceFunc, coders, '_').encode(values));\n    };\n    AbiCoder.prototype.decode = function (types, data) {\n        var coders = [];\n        types.forEach(function (type) {\n            // See encode for details\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = properties_1.deepCopy(type);\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return new CoderTuple(this.coerceFunc, coders, '_').decode(bytes_1.arrayify(data), 0).value;\n    };\n    return AbiCoder;\n}());\nexports.AbiCoder = AbiCoder;\nexports.defaultAbiCoder = new AbiCoder();\n", "'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors = __importStar(require(\"../errors\"));\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar keccak256_1 = require(\"./keccak256\");\n///////////////////////////////\nvar Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nvar UseSTD3ASCIIRules = new RegExp(\"^[a-z0-9.-]*$\");\nfunction namehash(name) {\n    if (typeof (name) !== 'string') {\n        errors.throwError('invalid address - ' + String(name), errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    name = name.toLowerCase();\n    // Supporting the full UTF-8 space requires additional (and large)\n    // libraries, so for now we simply do not support them.\n    // It should be fairly easy in the future to support systems with\n    // String.normalize, but that is future work.\n    if (!name.match(UseSTD3ASCIIRules)) {\n        errors.throwError('contains invalid UseSTD3ASCIIRules characters', errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    var result = Zeros;\n    while (name.length) {\n        var partition = name.match(Partition);\n        var label = utf8_1.toUtf8Bytes(partition[3]);\n        result = keccak256_1.keccak256(bytes_1.concat([result, keccak256_1.keccak256(label)]));\n        name = partition[2] || '';\n    }\n    return bytes_1.hexlify(result);\n}\nexports.namehash = namehash;\nfunction id(text) {\n    return keccak256_1.keccak256(utf8_1.toUtf8Bytes(text));\n}\nexports.id = id;\nfunction hashMessage(message) {\n    return keccak256_1.keccak256(bytes_1.concat([\n        utf8_1.toUtf8Bytes('\\x19Ethereum Signed Message:\\n'),\n        utf8_1.toUtf8Bytes(String(message.length)),\n        ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message)\n    ]));\n}\nexports.hashMessage = hashMessage;\n", "'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar address_1 = require(\"./address\");\nvar abi_coder_1 = require(\"./abi-coder\");\nvar bignumber_1 = require(\"./bignumber\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar keccak256_1 = require(\"./keccak256\");\nvar properties_1 = require(\"./properties\");\nvar errors = __importStar(require(\"../errors\"));\n///////////////////////////////\nvar _Indexed = /** @class */ (function () {\n    function _Indexed(hash) {\n        properties_1.setType(this, 'Indexed');\n        properties_1.defineReadOnly(this, 'hash', hash);\n    }\n    return _Indexed;\n}());\nvar Description = /** @class */ (function () {\n    function Description(info) {\n        properties_1.setType(this, 'Description');\n        for (var key in info) {\n            properties_1.defineReadOnly(this, key, properties_1.deepCopy(info[key], true));\n        }\n        Object.freeze(this);\n    }\n    return Description;\n}());\nvar _DeployDescription = /** @class */ (function (_super) {\n    __extends(_DeployDescription, _super);\n    function _DeployDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _DeployDescription.prototype.encode = function (bytecode, params) {\n        if (!bytes_1.isHexString(bytecode)) {\n            errors.throwError('invalid contract bytecode', errors.INVALID_ARGUMENT, {\n                arg: 'bytecode',\n                value: bytecode\n            });\n        }\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in Interface constructor');\n        try {\n            return (bytecode + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2));\n        }\n        catch (error) {\n            errors.throwError('invalid constructor argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    return _DeployDescription;\n}(Description));\nvar _FunctionDescription = /** @class */ (function (_super) {\n    __extends(_FunctionDescription, _super);\n    function _FunctionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _FunctionDescription.prototype.encode = function (params) {\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in interface function ' + this.name);\n        try {\n            return this.sighash + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2);\n        }\n        catch (error) {\n            errors.throwError('invalid input argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    _FunctionDescription.prototype.decode = function (data) {\n        try {\n            return abi_coder_1.defaultAbiCoder.decode(this.outputs, bytes_1.arrayify(data));\n        }\n        catch (error) {\n            errors.throwError('invalid data for function output', errors.INVALID_ARGUMENT, {\n                arg: 'data',\n                errorArg: error.arg,\n                errorValue: error.value,\n                value: data,\n                reason: error.reason\n            });\n        }\n    };\n    return _FunctionDescription;\n}(Description));\nvar Result = /** @class */ (function (_super) {\n    __extends(Result, _super);\n    function Result() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Result;\n}(Description));\nvar _EventDescription = /** @class */ (function (_super) {\n    __extends(_EventDescription, _super);\n    function _EventDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _EventDescription.prototype.encodeTopics = function (params) {\n        var _this = this;\n        if (params.length > this.inputs.length) {\n            errors.throwError('too many arguments for ' + this.name, errors.UNEXPECTED_ARGUMENT, { maxCount: params.length, expectedCount: this.inputs.length });\n        }\n        var topics = [];\n        if (!this.anonymous) {\n            topics.push(this.topic);\n        }\n        params.forEach(function (arg, index) {\n            var param = _this.inputs[index];\n            if (!param.indexed) {\n                if (arg != null) {\n                    errors.throwError('cannot filter non-indexed parameters; must be null', errors.INVALID_ARGUMENT, { argument: (param.name || index), value: arg });\n                }\n                return;\n            }\n            if (arg == null) {\n                topics.push(null);\n            }\n            else if (param.type === 'string') {\n                topics.push(hash_1.id(arg));\n            }\n            else if (param.type === 'bytes') {\n                topics.push(keccak256_1.keccak256(arg));\n            }\n            else if (param.type.indexOf('[') !== -1 || param.type.substring(0, 5) === 'tuple') {\n                errors.throwError('filtering with tuples or arrays not implemented yet; bug us on GitHub', errors.NOT_IMPLEMENTED, { operation: 'filter(array|tuple)' });\n            }\n            else {\n                if (param.type === 'address') {\n                    address_1.getAddress(arg);\n                }\n                topics.push(bytes_1.hexZeroPad(bytes_1.hexlify(arg), 32).toLowerCase());\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    };\n    _EventDescription.prototype.decode = function (data, topics) {\n        // Strip the signature off of non-anonymous topics\n        if (topics != null && !this.anonymous) {\n            topics = topics.slice(1);\n        }\n        var inputIndexed = [];\n        var inputNonIndexed = [];\n        var inputDynamic = [];\n        this.inputs.forEach(function (param, index) {\n            if (param.indexed) {\n                if (param.type === 'string' || param.type === 'bytes' || param.type.indexOf('[') >= 0 || param.type.substring(0, 5) === 'tuple') {\n                    inputIndexed.push({ type: 'bytes32', name: (param.name || '') });\n                    inputDynamic.push(true);\n                }\n                else {\n                    inputIndexed.push(param);\n                    inputDynamic.push(false);\n                }\n            }\n            else {\n                inputNonIndexed.push(param);\n                inputDynamic.push(false);\n            }\n        });\n        if (topics != null) {\n            var resultIndexed = abi_coder_1.defaultAbiCoder.decode(inputIndexed, bytes_1.concat(topics));\n        }\n        var resultNonIndexed = abi_coder_1.defaultAbiCoder.decode(inputNonIndexed, bytes_1.arrayify(data));\n        var result = {};\n        var nonIndexedIndex = 0, indexedIndex = 0;\n        this.inputs.forEach(function (input, index) {\n            if (input.indexed) {\n                if (topics == null) {\n                    result[index] = new _Indexed(null);\n                }\n                else if (inputDynamic[index]) {\n                    result[index] = new _Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    result[index] = resultIndexed[indexedIndex++];\n                }\n            }\n            else {\n                result[index] = resultNonIndexed[nonIndexedIndex++];\n            }\n            if (input.name) {\n                result[input.name] = result[index];\n            }\n        });\n        result.length = this.inputs.length;\n        return new Result(result);\n    };\n    return _EventDescription;\n}(Description));\nvar _TransactionDescription = /** @class */ (function (_super) {\n    __extends(_TransactionDescription, _super);\n    function _TransactionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _TransactionDescription;\n}(Description));\nvar _LogDescription = /** @class */ (function (_super) {\n    __extends(_LogDescription, _super);\n    function _LogDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _LogDescription;\n}(Description));\nfunction addMethod(method) {\n    switch (method.type) {\n        case 'constructor': {\n            var description = new _DeployDescription({\n                inputs: method.inputs,\n                payable: (method.payable == null || !!method.payable)\n            });\n            if (!this.deployFunction) {\n                this.deployFunction = description;\n            }\n            break;\n        }\n        case 'function': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var sighash = hash_1.id(signature).substring(0, 10);\n            var isConst = false;\n            if (method.constant != null) {\n                isConst = method.constant;\n            }\n            else if (method.stateMutability != null) {\n                isConst = (method.stateMutability == \"view\" || method.stateMutability == \"pure\");\n            }\n            var description = new _FunctionDescription({\n                inputs: method.inputs,\n                outputs: method.outputs,\n                gas: method.gas,\n                payable: (method.payable == null || !!method.payable),\n                type: (isConst ? 'call' : 'transaction'),\n                name: method.name,\n                signature: signature,\n                sighash: sighash,\n            });\n            // Expose the first (and hopefully unique named function)\n            if (method.name) {\n                if (this.functions[method.name] == null) {\n                    properties_1.defineReadOnly(this.functions, method.name, description);\n                }\n                else {\n                    errors.warn('WARNING: Multiple definitions for ' + method.name);\n                }\n            }\n            // Expose all methods by their signature, for overloaded functions\n            if (this.functions[description.signature] == null) {\n                properties_1.defineReadOnly(this.functions, description.signature, description);\n            }\n            break;\n        }\n        case 'event': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var description = new _EventDescription({\n                name: method.name,\n                signature: signature,\n                inputs: method.inputs,\n                topic: hash_1.id(signature),\n                anonymous: (!!method.anonymous)\n            });\n            // Expose the first (and hopefully unique) event name\n            if (method.name && this.events[method.name] == null) {\n                properties_1.defineReadOnly(this.events, method.name, description);\n            }\n            // Expose all events by their signature, for overloaded functions\n            if (this.events[description.signature] == null) {\n                properties_1.defineReadOnly(this.events, description.signature, description);\n            }\n            break;\n        }\n        case \"receive\":\n        case 'fallback':\n            // Nothing to do for fallback\n            break;\n        default:\n            errors.warn('WARNING: unsupported ABI type - ' + method.type);\n            break;\n    }\n}\nvar Interface = /** @class */ (function () {\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function Interface(abi) {\n        errors.checkNew(this, Interface);\n        if (typeof (abi) === 'string') {\n            try {\n                abi = JSON.parse(abi);\n            }\n            catch (error) {\n                errors.throwError('could not parse ABI JSON', errors.INVALID_ARGUMENT, {\n                    arg: 'abi',\n                    errorMessage: error.message,\n                    value: abi\n                });\n            }\n            if (!Array.isArray(abi)) {\n                errors.throwError('invalid abi', errors.INVALID_ARGUMENT, { arg: 'abi', value: abi });\n                return null;\n            }\n        }\n        properties_1.defineReadOnly(this, 'functions', {});\n        properties_1.defineReadOnly(this, 'events', {});\n        // Convert any supported ABI format into a standard ABI format\n        var _abi = [];\n        abi.forEach(function (fragment) {\n            if (typeof (fragment) === 'string') {\n                fragment = abi_coder_1.parseSignature(fragment);\n            }\n            // @TODO: We should probable do some validation; create abiCoder.formatSignature for checking\n            _abi.push(fragment);\n        });\n        properties_1.defineReadOnly(this, 'abi', properties_1.deepCopy(_abi, true));\n        _abi.forEach(addMethod, this);\n        // If there wasn't a constructor, create the default constructor\n        if (!this.deployFunction) {\n            addMethod.call(this, { type: 'constructor', inputs: [] });\n        }\n        properties_1.setType(this, 'Interface');\n    }\n    Interface.prototype.parseTransaction = function (tx) {\n        var sighash = tx.data.substring(0, 10).toLowerCase();\n        for (var name in this.functions) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var func = this.functions[name];\n            if (func.sighash === sighash) {\n                var result = abi_coder_1.defaultAbiCoder.decode(func.inputs, '0x' + tx.data.substring(10));\n                return new _TransactionDescription({\n                    args: result,\n                    decode: func.decode,\n                    name: func.name,\n                    signature: func.signature,\n                    sighash: func.sighash,\n                    value: bignumber_1.bigNumberify(tx.value || '0'),\n                });\n            }\n        }\n        return null;\n    };\n    Interface.prototype.parseLog = function (log) {\n        for (var name in this.events) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var event = this.events[name];\n            if (event.anonymous) {\n                continue;\n            }\n            if (event.topic !== log.topics[0]) {\n                continue;\n            }\n            // @TODO: If anonymous, and the only method, and the input count matches, should we parse and return it?\n            return new _LogDescription({\n                decode: event.decode,\n                name: event.name,\n                signature: event.signature,\n                topic: event.topic,\n                values: event.decode(log.data, log.topics)\n            });\n        }\n        return null;\n    };\n    Interface.isInterface = function (value) {\n        return properties_1.isType(value, 'Interface');\n    };\n    Interface.isIndexed = function (value) {\n        return properties_1.isType(value, 'Indexed');\n    };\n    return Interface;\n}());\nexports.Interface = Interface;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../utils/properties\");\n;\n;\n///////////////////////////////\n// Exported Abstracts\nvar Provider = /** @class */ (function () {\n    function Provider() {\n        properties_1.setType(this, 'Provider');\n    }\n    Provider.isProvider = function (value) {\n        return properties_1.isType(value, 'Provider');\n    };\n    return Provider;\n}());\nexports.Provider = Provider;\n//defineReadOnly(Signer, 'inherits', inheritable(Abstract));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"./utils/properties\");\nvar Signer = /** @class */ (function () {\n    function Signer() {\n        properties_1.setType(this, 'Signer');\n    }\n    Signer.isSigner = function (value) {\n        return properties_1.isType(value, 'Signer');\n    };\n    return Signer;\n}());\nexports.Signer = Signer;\n//defineReadOnly(Signer, 'inherits', inheritable(Signer));\n", "'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar errors = __importStar(require(\"./errors\"));\nvar abi_coder_1 = require(\"./utils/abi-coder\");\nvar address_1 = require(\"./utils/address\");\nvar bignumber_1 = require(\"./utils/bignumber\");\nvar bytes_1 = require(\"./utils/bytes\");\nvar interface_1 = require(\"./utils/interface\");\nvar properties_1 = require(\"./utils/properties\");\n///////////////////////////////\n// Imported Abstracts\nvar abstract_provider_1 = require(\"./providers/abstract-provider\");\nvar abstract_signer_1 = require(\"./abstract-signer\");\n///////////////////////////////\nvar VoidSigner = /** @class */ (function (_super) {\n    __extends(VoidSigner, _super);\n    function VoidSigner(address, provider) {\n        var _this = _super.call(this) || this;\n        properties_1.defineReadOnly(_this, 'address', address);\n        properties_1.defineReadOnly(_this, 'provider', provider);\n        return _this;\n    }\n    VoidSigner.prototype.getAddress = function () {\n        return Promise.resolve(this.address);\n    };\n    VoidSigner.prototype._fail = function (message, operation) {\n        return Promise.resolve().then(function () {\n            errors.throwError(message, errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    };\n    VoidSigner.prototype.signMessage = function (message) {\n        return this._fail('VoidSigner cannot sign messages', 'signMessage');\n    };\n    VoidSigner.prototype.sendTransaction = function (transaction) {\n        return this._fail('VoidSigner cannot sign transactions', 'sendTransaction');\n    };\n    VoidSigner.prototype.connect = function (provider) {\n        return new VoidSigner(this.address, provider);\n    };\n    return VoidSigner;\n}(abstract_signer_1.Signer));\nexports.VoidSigner = VoidSigner;\nvar allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\n// Recursively replaces ENS names with promises to resolve the name and\n// stalls until all promises have returned\n// @TODO: Expand this to resolve any promises too\nfunction resolveAddresses(provider, value, paramType) {\n    if (Array.isArray(paramType)) {\n        var promises_1 = [];\n        paramType.forEach(function (paramType, index) {\n            var v = null;\n            if (Array.isArray(value)) {\n                v = value[index];\n            }\n            else {\n                v = value[paramType.name];\n            }\n            promises_1.push(resolveAddresses(provider, v, paramType));\n        });\n        return Promise.all(promises_1);\n    }\n    if (paramType.type === 'address') {\n        return provider.resolveName(value);\n    }\n    if (paramType.type === 'tuple') {\n        return resolveAddresses(provider, value, paramType.components);\n    }\n    // Strips one level of array indexing off the end to recuse into\n    var isArrayMatch = paramType.type.match(/(.*)(\\[[0-9]*\\]$)/);\n    if (isArrayMatch) {\n        if (!Array.isArray(value)) {\n            throw new Error('invalid value for array');\n        }\n        var promises = [];\n        var subParamType = {\n            components: paramType.components,\n            type: isArrayMatch[1],\n        };\n        value.forEach(function (v) {\n            promises.push(resolveAddresses(provider, v, subParamType));\n        });\n        return Promise.all(promises);\n    }\n    return Promise.resolve(value);\n}\nfunction runMethod(contract, functionName, estimateOnly) {\n    var method = contract.interface.functions[functionName];\n    return function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var tx = {};\n        var blockTag = null;\n        // If 1 extra parameter was passed in, it contains overrides\n        if (params.length === method.inputs.length + 1 && typeof (params[params.length - 1]) === 'object') {\n            tx = properties_1.shallowCopy(params.pop());\n            if (tx.blockTag != null) {\n                blockTag = tx.blockTag;\n            }\n            delete tx.blockTag;\n            // Check for unexpected keys (e.g. using \"gas\" instead of \"gasLimit\")\n            for (var key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error('unknown transaction override ' + key);\n                }\n            }\n        }\n        if (params.length != method.inputs.length) {\n            throw new Error('incorrect number of arguments');\n        }\n        // Check overrides make sense\n        ['data', 'to'].forEach(function (key) {\n            if (tx[key] != null) {\n                errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n            }\n        });\n        tx.to = contract._deployed(blockTag).then(function () {\n            return contract.addressPromise;\n        });\n        return resolveAddresses(contract.provider, params, method.inputs).then(function (params) {\n            tx.data = method.encode(params);\n            if (method.type === 'call') {\n                // Call (constant functions) always cost 0 ether\n                if (estimateOnly) {\n                    return Promise.resolve(constants_1.Zero);\n                }\n                if (!contract.provider) {\n                    errors.throwError('call (constant functions) require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'call' });\n                }\n                // Check overrides make sense\n                ['gasLimit', 'gasPrice', 'value'].forEach(function (key) {\n                    if (tx[key] != null) {\n                        throw new Error('call cannot override ' + key);\n                    }\n                });\n                if (tx.from == null && contract.signer) {\n                    tx.from = contract.signer.getAddress();\n                }\n                return contract.provider.call(tx, blockTag).then(function (value) {\n                    if ((bytes_1.hexDataLength(value) % 32) === 4 && bytes_1.hexDataSlice(value, 0, 4) === '0x08c379a0') {\n                        var reason = abi_coder_1.defaultAbiCoder.decode(['string'], bytes_1.hexDataSlice(value, 4));\n                        errors.throwError('call revert exception', errors.CALL_EXCEPTION, {\n                            address: contract.address,\n                            args: params,\n                            method: method.signature,\n                            errorSignature: 'Error(string)',\n                            errorArgs: [reason],\n                            reason: reason,\n                            transaction: tx\n                        });\n                    }\n                    try {\n                        var result = method.decode(value);\n                        if (method.outputs.length === 1) {\n                            result = result[0];\n                        }\n                        return result;\n                    }\n                    catch (error) {\n                        if (value === '0x' && method.outputs.length > 0) {\n                            errors.throwError('call exception', errors.CALL_EXCEPTION, {\n                                address: contract.address,\n                                method: method.signature,\n                                args: params\n                            });\n                        }\n                        throw error;\n                    }\n                });\n            }\n            else if (method.type === 'transaction') {\n                // Only computing the transaction estimate\n                if (estimateOnly) {\n                    if (!contract.provider) {\n                        errors.throwError('estimate gas require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'estimateGas' });\n                    }\n                    if (tx.from == null && contract.signer) {\n                        tx.from = contract.signer.getAddress();\n                    }\n                    return contract.provider.estimateGas(tx);\n                }\n                if (tx.gasLimit == null && method.gas != null) {\n                    tx.gasLimit = bignumber_1.bigNumberify(method.gas).add(21000);\n                }\n                if (!contract.signer) {\n                    errors.throwError('sending a transaction requires a signer', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction' });\n                }\n                // Make sure they aren't overriding something they shouldn't\n                if (tx.from != null) {\n                    errors.throwError('cannot override from in a transaction', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction' });\n                }\n                return contract.signer.sendTransaction(tx).then(function (tx) {\n                    var wait = tx.wait.bind(tx);\n                    tx.wait = function (confirmations) {\n                        return wait(confirmations).then(function (receipt) {\n                            receipt.events = receipt.logs.map(function (log) {\n                                var event = properties_1.deepCopy(log);\n                                var parsed = contract.interface.parseLog(log);\n                                if (parsed) {\n                                    event.args = parsed.values;\n                                    event.decode = parsed.decode;\n                                    event.event = parsed.name;\n                                    event.eventSignature = parsed.signature;\n                                }\n                                event.removeListener = function () { return contract.provider; };\n                                event.getBlock = function () {\n                                    return contract.provider.getBlock(receipt.blockHash);\n                                };\n                                event.getTransaction = function () {\n                                    return contract.provider.getTransaction(receipt.transactionHash);\n                                };\n                                event.getTransactionReceipt = function () {\n                                    return Promise.resolve(receipt);\n                                };\n                                return event;\n                            });\n                            return receipt;\n                        });\n                    };\n                    return tx;\n                });\n            }\n            throw new Error('invalid type - ' + method.type);\n            return null;\n        });\n    };\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return '*';\n    }\n    return (filter.address || '*') + '@' + (filter.topics ? filter.topics.join(':') : '');\n}\nvar Contract = /** @class */ (function () {\n    // https://github.com/Microsoft/TypeScript/issues/5453\n    // Once this issue is resolved (there are open PR) we can do this nicer\n    // by making addressOrName default to null for 2 operand calls. :)\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function Contract(addressOrName, contractInterface, signerOrProvider) {\n        var _this = this;\n        errors.checkNew(this, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        if (interface_1.Interface.isInterface(contractInterface)) {\n            properties_1.defineReadOnly(this, 'interface', contractInterface);\n        }\n        else {\n            properties_1.defineReadOnly(this, 'interface', new interface_1.Interface(contractInterface));\n        }\n        if (abstract_signer_1.Signer.isSigner(signerOrProvider)) {\n            properties_1.defineReadOnly(this, 'provider', signerOrProvider.provider);\n            properties_1.defineReadOnly(this, 'signer', signerOrProvider);\n        }\n        else if (abstract_provider_1.Provider.isProvider(signerOrProvider)) {\n            properties_1.defineReadOnly(this, 'provider', signerOrProvider);\n            properties_1.defineReadOnly(this, 'signer', null);\n        }\n        else {\n            errors.throwError('invalid signer or provider', errors.INVALID_ARGUMENT, { arg: 'signerOrProvider', value: signerOrProvider });\n        }\n        properties_1.defineReadOnly(this, 'estimate', {});\n        properties_1.defineReadOnly(this, 'functions', {});\n        properties_1.defineReadOnly(this, 'filters', {});\n        Object.keys(this.interface.events).forEach(function (eventName) {\n            var event = _this.interface.events[eventName];\n            properties_1.defineReadOnly(_this.filters, eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return {\n                    address: _this.address,\n                    topics: event.encodeTopics(args)\n                };\n            });\n        });\n        this._events = [];\n        properties_1.defineReadOnly(this, 'address', addressOrName);\n        if (this.provider) {\n            properties_1.defineReadOnly(this, 'addressPromise', this.provider.resolveName(addressOrName).then(function (address) {\n                if (address == null) {\n                    throw new Error('name not found');\n                }\n                return address;\n            }).catch(function (error) {\n                throw error;\n            }));\n        }\n        else {\n            try {\n                properties_1.defineReadOnly(this, 'addressPromise', Promise.resolve(address_1.getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                errors.throwError('provider is required to use non-address contract address', errors.INVALID_ARGUMENT, { argument: 'addressOrName', value: addressOrName });\n            }\n        }\n        Object.keys(this.interface.functions).forEach(function (name) {\n            var run = runMethod(_this, name, false);\n            if (_this[name] == null) {\n                properties_1.defineReadOnly(_this, name, run);\n            }\n            else {\n                errors.warn('WARNING: Multiple definitions for ' + name);\n            }\n            if (_this.functions[name] == null) {\n                properties_1.defineReadOnly(_this.functions, name, run);\n                properties_1.defineReadOnly(_this.estimate, name, runMethod(_this, name, true));\n            }\n        });\n    }\n    // @TODO: Allow timeout?\n    Contract.prototype.deployed = function () {\n        return this._deployed();\n    };\n    Contract.prototype._deployed = function (blockTag) {\n        var _this = this;\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(function () {\n                    return _this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then(function (code) {\n                    if (code === '0x') {\n                        errors.throwError('contract not deployed', errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: _this.address,\n                            operation: 'getDeployed'\n                        });\n                    }\n                    return _this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    };\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    Contract.prototype.fallback = function (overrides) {\n        var _this = this;\n        if (!this.signer) {\n            errors.throwError('sending a transaction requires a signer', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction(fallback)' });\n        }\n        var tx = properties_1.shallowCopy(overrides || {});\n        ['from', 'to'].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.addressPromise;\n        return this.deployed().then(function () {\n            return _this.signer.sendTransaction(tx);\n        });\n    };\n    // Reconnect to a different signer or provider\n    Contract.prototype.connect = function (signerOrProvider) {\n        if (typeof (signerOrProvider) === 'string') {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        var contract = new Contract(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            properties_1.defineReadOnly(contract, 'deployTransaction', this.deployTransaction);\n        }\n        return contract;\n    };\n    // Re-attach to a different on=chain instance of this contract\n    Contract.prototype.attach = function (addressOrName) {\n        return new Contract(addressOrName, this.interface, this.signer || this.provider);\n    };\n    Contract.isIndexed = function (value) {\n        return interface_1.Interface.isIndexed(value);\n    };\n    Contract.prototype._getEventFilter = function (eventName) {\n        var _this = this;\n        if (typeof (eventName) === 'string') {\n            // Listen for any event\n            if (eventName === '*') {\n                return {\n                    prepareEvent: function (e) {\n                        var parsed = _this.interface.parseLog(e);\n                        if (parsed) {\n                            e.args = parsed.values;\n                            e.decode = parsed.decode;\n                            e.event = parsed.name;\n                            e.eventSignature = parsed.signature;\n                        }\n                        return [e];\n                    },\n                    eventTag: '*',\n                    filter: { address: this.address },\n                };\n            }\n            // Normalize the eventName\n            if (eventName.indexOf('(') !== -1) {\n                eventName = abi_coder_1.formatSignature(abi_coder_1.parseSignature('event ' + eventName));\n            }\n            var event_1 = this.interface.events[eventName];\n            if (!event_1) {\n                errors.throwError('unknown event - ' + eventName, errors.INVALID_ARGUMENT, { argumnet: 'eventName', value: eventName });\n            }\n            var filter_1 = {\n                address: this.address,\n                topics: [event_1.topic]\n            };\n            return {\n                prepareEvent: function (e) {\n                    var args = event_1.decode(e.data, e.topics);\n                    e.args = args;\n                    var result = Array.prototype.slice.call(args);\n                    result.push(e);\n                    return result;\n                },\n                event: event_1,\n                eventTag: getEventTag(filter_1),\n                filter: filter_1\n            };\n        }\n        var filter = {\n            address: this.address\n        };\n        // Find the matching event in the ABI; if none, we still allow filtering\n        // since it may be a filter for an otherwise unknown event\n        var event = null;\n        if (eventName.topics && eventName.topics[0]) {\n            filter.topics = eventName.topics;\n            for (var name_1 in this.interface.events) {\n                if (name_1.indexOf('(') === -1) {\n                    continue;\n                }\n                var e = this.interface.events[name_1];\n                if (e.topic === eventName.topics[0].toLowerCase()) {\n                    event = e;\n                    break;\n                }\n            }\n        }\n        return {\n            prepareEvent: function (e) {\n                if (!event) {\n                    return [e];\n                }\n                var args = event.decode(e.data, e.topics);\n                e.args = args;\n                var result = Array.prototype.slice.call(args);\n                result.push(e);\n                return result;\n            },\n            event: event,\n            eventTag: getEventTag(filter),\n            filter: filter\n        };\n    };\n    Contract.prototype._addEventListener = function (eventFilter, listener, once) {\n        var _this = this;\n        if (!this.provider) {\n            errors.throwError('events require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'once' });\n        }\n        var wrappedListener = function (log) {\n            var event = properties_1.deepCopy(log);\n            var args = eventFilter.prepareEvent(event);\n            if (eventFilter.event) {\n                event.decode = eventFilter.event.decode;\n                event.event = eventFilter.event.name;\n                event.eventSignature = eventFilter.event.signature;\n            }\n            event.removeListener = function () { _this.removeListener(eventFilter.filter, listener); };\n            event.getBlock = function () { return _this.provider.getBlock(log.blockHash); };\n            event.getTransaction = function () { return _this.provider.getTransaction(log.transactionHash); };\n            event.getTransactionReceipt = function () { return _this.provider.getTransactionReceipt(log.transactionHash); };\n            _this.emit.apply(_this, [eventFilter.filter].concat(args));\n        };\n        this.provider.on(eventFilter.filter, wrappedListener);\n        this._events.push({ eventFilter: eventFilter, listener: listener, wrappedListener: wrappedListener, once: once });\n    };\n    Contract.prototype.on = function (event, listener) {\n        this._addEventListener(this._getEventFilter(event), listener, false);\n        return this;\n    };\n    Contract.prototype.once = function (event, listener) {\n        this._addEventListener(this._getEventFilter(event), listener, true);\n        return this;\n    };\n    Contract.prototype.addListener = function (eventName, listener) {\n        return this.on(eventName, listener);\n    };\n    Contract.prototype.emit = function (eventName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!this.provider) {\n            return false;\n        }\n        var result = false;\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Not this event (keep it for later)\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            // Call the callback in the next event loop\n            setTimeout(function () {\n                event.listener.apply(_this, args);\n            }, 0);\n            result = true;\n            // Reschedule it if it not \"once\"\n            return !(event.once);\n        });\n        return result;\n    };\n    Contract.prototype.listenerCount = function (eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        return this._events.filter(function (event) {\n            return event.eventFilter.eventTag === eventFilter.eventTag;\n        }).length;\n    };\n    Contract.prototype.listeners = function (eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        return this._events.filter(function (event) {\n            return event.eventFilter.eventTag === eventFilter.eventTag;\n        }).map(function (event) { return event.listener; });\n    };\n    Contract.prototype.removeAllListeners = function (eventName) {\n        var _this = this;\n        if (!this.provider) {\n            return this;\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Keep all other events\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            // Deregister this event from the provider and filter it out\n            _this.provider.removeListener(event.eventFilter.filter, event.wrappedListener);\n            return false;\n        });\n        return this;\n    };\n    Contract.prototype.removeListener = function (eventName, listener) {\n        var _this = this;\n        if (!this.provider) {\n            return this;\n        }\n        var found = false;\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Make sure this event and listener match\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            if (event.listener !== listener) {\n                return true;\n            }\n            _this.provider.removeListener(event.eventFilter.filter, event.wrappedListener);\n            // Already found a matching event in a previous loop\n            if (found) {\n                return true;\n            }\n            // REmove this event (returning false filters us out)\n            found = true;\n            return false;\n        });\n        return this;\n    };\n    return Contract;\n}());\nexports.Contract = Contract;\nvar ContractFactory = /** @class */ (function () {\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function ContractFactory(contractInterface, bytecode, signer) {\n        var bytecodeHex = null;\n        // Allow the bytecode object from the Solidity compiler\n        if (typeof (bytecode) === 'string') {\n            bytecodeHex = bytecode;\n        }\n        else if (bytes_1.isArrayish(bytecode)) {\n            bytecodeHex = bytes_1.hexlify(bytecode);\n        }\n        else if (typeof (bytecode.object) === 'string') {\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            errors.throwError('bytecode must be a valid hex string', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== '0x') {\n            bytecodeHex = '0x' + bytecodeHex;\n        }\n        if (!bytes_1.isHexString(bytecodeHex)) {\n            errors.throwError('bytecode must be a valid hex string', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        if ((bytecodeHex.length % 2) !== 0) {\n            errors.throwError('bytecode must be valid data (even length)', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        properties_1.defineReadOnly(this, 'bytecode', bytecodeHex);\n        if (interface_1.Interface.isInterface(contractInterface)) {\n            properties_1.defineReadOnly(this, 'interface', contractInterface);\n        }\n        else {\n            properties_1.defineReadOnly(this, 'interface', new interface_1.Interface(contractInterface));\n        }\n        if (signer && !abstract_signer_1.Signer.isSigner(signer)) {\n            errors.throwError('invalid signer', errors.INVALID_ARGUMENT, { arg: 'signer', value: null });\n        }\n        properties_1.defineReadOnly(this, 'signer', signer || null);\n    }\n    ContractFactory.prototype.getDeployTransaction = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deployFunction.inputs.length + 1) {\n            tx = properties_1.shallowCopy(args.pop());\n            for (var key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error('unknown transaction override ' + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        ['data', 'from', 'to'].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        // Make sure the call matches the constructor signature\n        errors.checkArgumentCount(args.length, this.interface.deployFunction.inputs.length, ' in Contract constructor');\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = this.interface.deployFunction.encode(this.bytecode, args);\n        return tx;\n    };\n    ContractFactory.prototype.deploy = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Get the deployment transaction (with optional overrides)\n        var tx = this.getDeployTransaction.apply(this, args);\n        // Send the deployment transaction\n        return this.signer.sendTransaction(tx).then(function (tx) {\n            var contract = new Contract(address_1.getContractAddress(tx), _this.interface, _this.signer);\n            properties_1.defineReadOnly(contract, 'deployTransaction', tx);\n            return contract;\n        });\n    };\n    ContractFactory.prototype.attach = function (address) {\n        return new Contract(address, this.interface, this.signer);\n    };\n    ContractFactory.prototype.connect = function (signer) {\n        return new ContractFactory(this.interface, this.bytecode, signer);\n    };\n    ContractFactory.fromSolidity = function (compilerOutput, signer) {\n        if (compilerOutput == null) {\n            errors.throwError('missing compiler output', errors.MISSING_ARGUMENT, { argument: 'compilerOutput' });\n        }\n        if (typeof (compilerOutput) === 'string') {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        var abi = compilerOutput.abi;\n        var bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new ContractFactory(abi, bytecode, signer);\n    };\n    return ContractFactory;\n}());\nexports.ContractFactory = ContractFactory;\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_js_1 = __importDefault(require(\"hash.js\"));\nvar bytes_1 = require(\"./bytes\");\nfunction ripemd160(data) {\n    return '0x' + (hash_js_1.default.ripemd160().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.ripemd160 = ripemd160;\nfunction sha256(data) {\n    return '0x' + (hash_js_1.default.sha256().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.sha256 = sha256;\nfunction sha512(data) {\n    return '0x' + (hash_js_1.default.sha512().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.sha512 = sha512;\n", "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_1 = require(\"./bignumber\");\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar keccak256_1 = require(\"./keccak256\");\nvar sha2_1 = require(\"./sha2\");\nvar regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nvar regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nvar regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nvar Zeros = '0000000000000000000000000000000000000000000000000000000000000000';\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case 'address':\n            if (isArray) {\n                return bytes_1.padZeros(value, 32);\n            }\n            return bytes_1.arrayify(value);\n        case 'string':\n            return utf8_1.toUtf8Bytes(value);\n        case 'bytes':\n            return bytes_1.arrayify(value);\n        case 'bool':\n            value = (value ? '0x01' : '0x00');\n            if (isArray) {\n                return bytes_1.padZeros(value, 32);\n            }\n            return bytes_1.arrayify(value);\n    }\n    var match = type.match(regexNumber);\n    if (match) {\n        //var signed = (match[1] === 'int')\n        var size = parseInt(match[2] || \"256\");\n        if ((size % 8 != 0) || size === 0 || size > 256) {\n            throw new Error('invalid number type - ' + type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = bignumber_1.bigNumberify(value).toTwos(size);\n        return bytes_1.padZeros(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (String(size) != match[1] || size === 0 || size > 32) {\n            throw new Error('invalid number type - ' + type);\n        }\n        if (bytes_1.arrayify(value).byteLength !== size) {\n            throw new Error('invalid value for ' + type);\n        }\n        if (isArray) {\n            return bytes_1.arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        var baseType = match[1];\n        var count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            throw new Error('invalid value for ' + type);\n        }\n        var result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return bytes_1.concat(result);\n    }\n    throw new Error('unknown type - ' + type);\n}\n// @TODO: Array Enum\nfunction pack(types, values) {\n    if (types.length != values.length) {\n        throw new Error('type/value count mismatch');\n    }\n    var tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return bytes_1.hexlify(bytes_1.concat(tight));\n}\nexports.pack = pack;\nfunction keccak256(types, values) {\n    return keccak256_1.keccak256(pack(types, values));\n}\nexports.keccak256 = keccak256;\nfunction sha256(types, values) {\n    return sha2_1.sha256(pack(types, values));\n}\nexports.sha256 = sha256;\n", "\nimport createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\n\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\n\nexport default {\n    createIdentity: createIdentity,\n    publicKey: publicKey,\n    decryptWithPrivateKey: decryptWithPrivateKey,\n    encryptWithPublicKey: encryptWithPublicKey,\n    cipher: cipher,\n    publicKeyByPrivateKey: publicKeyByPrivateKey,\n    recover: recover,\n    recoverPublicKey: recoverPublicKey,\n    sign: sign,\n    signTransaction: signTransaction,\n    txDataByCompiled: txDataByCompiled,\n    calculateContractAddress: calculateContractAddress,\n    hash: hash,\n    hex: hex,\n    vrs: vrs,\n    util: util\n};", "import publicKeyByPrivateKey from './public-key-by-private-key';\n\nimport { fromPrivate } from 'eth-lib/lib/account';\nimport { keccak256 } from 'eth-lib/lib/hash';\nimport Bytes from 'eth-lib/lib/bytes';\n\nvar MIN_ENTROPY_SIZE = 128;\n\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\nexport function createPrivateKey(entropy) {\n    if (entropy) {\n        if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n        if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n\n        var outerHex = keccak256(entropy);\n        return outerHex;\n    } else {\n        // @link https://github.com/MaiaVictor/eth-lib/blob/master/lib/account.js#L8\n        var innerHex = keccak256(Bytes.concat(Bytes.random(32), Bytes.random(32)));\n        var middleHex = Bytes.concat(Bytes.concat(Bytes.random(32), innerHex), Bytes.random(32));\n        var _outerHex = keccak256(middleHex);\n        return _outerHex;\n    }\n}\n\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\nexport default function createIdentity(entropy) {\n    var privateKey = createPrivateKey(entropy);\n    var identity = fromPrivate(privateKey);\n    identity.publicKey = publicKeyByPrivateKey(identity.privateKey);\n    return identity;\n}", "import { privateToPublic } from 'ethereumjs-util';\nimport { addTrailing0x } from './util';\n\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\nexport default function publicKeyOfPrivateKey(privateKey) {\n    privateKey = addTrailing0x(privateKey);\n    var publicKeyBuffer = privateToPublic(privateKey);\n    return publicKeyBuffer.toString('hex');\n}", "export function removeTrailing0x(str) {\n    if (str.startsWith('0x')) return str.substring(2);else return str;\n}\n\nexport function addTrailing0x(str) {\n    if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\n\nexport function uint8ArrayToHex(arr) {\n    return Buffer.from(arr).toString('hex');\n}\n\nexport function hexToUnit8Array(str) {\n    return new Uint8Array(Buffer.from(str, 'hex'));\n}", "import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex } from './util';\n\nexport function compress(startsWith04) {\n\n    // add trailing 04 if not done before\n    var testBuffer = Buffer.from(startsWith04, 'hex');\n    if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n\n    return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\n\nexport function decompress(startsWith02Or03) {\n\n    // if already decompressed an not has trailing 04\n    var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n    if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n\n    var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false));\n\n    // remove trailing 04\n    decompressed = decompressed.substring(2);\n    return decompressed;\n}\n\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\nexport function toAddress(publicKey) {\n\n    // normalize key\n    publicKey = decompress(publicKey);\n\n    var addressBuffer = pubToAddress(Buffer.from(publicKey, 'hex'));\n    var checkSumAdress = toChecksumAddress(addressBuffer.toString('hex'));\n    return checkSumAdress;\n}", "import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeTrailing0x } from './util';\n\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n\n    encrypted = parse(encrypted);\n\n    // remove trailing '0x' from privateKey\n    var twoStripped = removeTrailing0x(privateKey);\n\n    var encryptedBuffer = {\n        iv: Buffer.from(encrypted.iv, 'hex'),\n        ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n        ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n        mac: Buffer.from(encrypted.mac, 'hex')\n    };\n\n    return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n        return decryptedBuffer.toString();\n    });\n}", "import { compress, decompress } from './public-key';\n\nexport function stringify(cipher) {\n    if (typeof cipher === 'string') return cipher;\n\n    // use compressed key because it's smaller\n    var compressedKey = compress(cipher.ephemPublicKey);\n\n    var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'), // 16bit\n    Buffer.from(compressedKey, 'hex'), // 33bit\n    Buffer.from(cipher.mac, 'hex'), // 32bit\n    Buffer.from(cipher.ciphertext, 'hex') // var bit\n    ]);\n\n    return ret.toString('hex');\n}\n\nexport function parse(str) {\n    if (typeof str !== 'string') return str;\n\n    var buf = Buffer.from(str, 'hex');\n\n    var ret = {\n        iv: buf.toString('hex', 0, 16),\n        ephemPublicKey: buf.toString('hex', 16, 49),\n        mac: buf.toString('hex', 49, 81),\n        ciphertext: buf.toString('hex', 81, buf.length)\n    };\n\n    // decompress publicKey\n    ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n\n    return ret;\n}", "import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\n\nexport default function encryptWithPublicKey(publicKey, message) {\n\n    // ensure its an uncompressed publicKey\n    publicKey = decompress(publicKey);\n\n    // re-add the compression-flag\n    var pubString = '04' + publicKey;\n\n    return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message)).then(function (encryptedBuffers) {\n        var encrypted = {\n            iv: encryptedBuffers.iv.toString('hex'),\n            ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n            ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n            mac: encryptedBuffers.mac.toString('hex')\n        };\n        return encrypted;\n    });\n}", "import recoverPublicKey from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\nexport default function recover(sigString, hash) {\n    var pubkey = recoverPublicKey(sigString, hash);\n    var address = addressByPublicKey(pubkey);\n    return address;\n}", "import { ecdsaRecover } from 'secp256k1';\nimport { removeTrailing0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\nexport default function recoverPublicKey(signature, hash) {\n    signature = removeTrailing0x(signature);\n\n    // split into v-value and sig\n    var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n    var vValue = signature.slice(-2); // last 2 chars\n\n    var recoveryNumber = vValue === '1c' ? 1 : 0;\n\n    var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeTrailing0x(hash)), false));\n\n    // remove trailing '04'\n    pubKey = pubKey.slice(2);\n\n    return pubKey;\n}", "import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addTrailing0x, removeTrailing0x } from './util';\n\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\nexport default function sign(privateKey, hash) {\n    hash = addTrailing0x(hash);\n    if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n\n    var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeTrailing0x(hash), 'hex')), new Uint8Array(Buffer.from(removeTrailing0x(privateKey), 'hex')));\n\n    var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n\n    var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n    return newSignature;\n}", "import { Transaction } from 'ethereumjs-tx';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n\nexport default function signTransaction(rawTx, privateKey) {\n\n    // check if privateKey->address matches rawTx.from\n    var publicKey = publicKeyByPrivateKey(privateKey);\n    var address = addressByPublicKey(publicKey);\n    if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n\n    var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n\n    var tx = new Transaction(rawTx);\n    tx.sign(privateKeyBuffer);\n    var serializedTx = tx.serialize().toString('hex');\n    return serializedTx;\n}", "import { ContractFactory } from 'ethers/contract.js';\n\nexport default function txDataByCompiled(abi, bytecode, args) {\n    // solc returns a string which is often passed instead of the json\n    if (typeof abi === 'string') abi = JSON.parse(abi);\n\n    // Construct a Contract Factory\n    var factory = new ContractFactory(abi, '0x' + bytecode);\n\n    var deployTransaction = factory.getDeployTransaction.apply(factory, args);\n\n    return deployTransaction.data;\n}", "import { generateAddress, toChecksumAddress } from 'ethereumjs-util';\n\nexport default function calculateContractAddress(creatorAddress, nonce) {\n    var addressBuffer = generateAddress(creatorAddress, nonce);\n    var address = addressBuffer.toString('hex');\n    return toChecksumAddress(address);\n}", "import { keccak256 as solidityKeccak256 } from 'ethers/utils/solidity.js';\n\nexport function keccak256(params) {\n    var types = [];\n    var values = [];\n    if (!Array.isArray(params)) {\n        types.push('string');\n        values.push(params);\n    } else {\n        params.forEach(function (p) {\n            types.push(p.type);\n            values.push(p.value);\n        });\n    }\n    return solidityKeccak256(types, values);\n}\n\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';", "/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\n\nimport { removeTrailing0x, addTrailing0x } from './util';\n\nexport function compress(hex) {\n    var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    hex = removeTrailing0x(hex);\n\n    // if base64:true, we use our own function because it results in a smaller output\n    if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n\n    var string = '';\n    while (hex.length % 4 != 0) {\n        // we need it to be multiple of 4\n        hex = '0' + hex;\n    }\n    for (var i = 0; i < hex.length; i += 4) {\n        // get char from ascii code which goes from 0 to 65536\n        string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n    }\n    return string;\n}\n\nexport function decompress(compressedString) {\n    var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n    // if base64:true, we use our own function because it results in a smaller output\n    if (base64 === true) {\n        var ret = Buffer.from(compressedString, 'base64').toString('hex');\n        return addTrailing0x(ret);\n    }\n\n    var hex = '';\n    for (var i = 0; i < compressedString.length; i++) {\n        // get character ascii code and convert to hexa string, adding necessary 0s\n        hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n    }\n    hex = hex.toLowerCase();\n    return addTrailing0x(hex);\n}", "import { decodeSignature, encodeSignature } from 'eth-lib/lib/account';\n\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\nexport function fromString(hexString) {\n    var arr = decodeSignature(hexString);\n    return {\n        v: arr[0],\n        r: arr[1],\n        s: arr[2]\n    };\n}\n\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\nexport function toString(sig) {\n    var partsArray = [sig.v, sig.r, sig.s];\n    return encodeSignature(partsArray);\n}"],
  "mappings": "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AA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA;AAAA,MAExE;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;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,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,CAAC,IAAI,KAAK,CAAC,KAAK;AAClB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,IAAI,MAAM,CAAC,MAAM;AACrB,UAAE,EAAE,I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AAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AA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",
  "names": ["require_assert", "import_dist", "toString", "import_dist", "Buffer", "import_dist", "Buffer", "require_lib", "import_dist", "require_elliptic", "import_dist", "Buffer", "require_elliptic", "import_dist", "import_dist", "Buffer", "import_dist", "Buffer", "import_dist", "import_dist", "require_keccak", "import_dist", "Buffer", "import_dist", "__export", "import_dist", "require_bytes", "import_dist", "fromString", "toString", "import_dist", "Bytes", "fromString", "toString", "import_dist", "tree", "require_hash", "import_dist", "require_account", "import_dist", "Bytes", "keccak256", "fromPrivate", "encodeSignature", "decodeSignature", "sign", "recover", "require_lib", "import_dist", "require_elliptic", "import_dist", "data", "require_elliptic", "import_dist", "require_utils", "import_dist", "cachedProperty", "import_dist", "import_dist", "obj", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "curve", "import_dist", "fromPrivate", "sign", "require_signature", "import_dist", "import_dist", "sign", "e", "require_key", "import_dist", "sign", "require_signature", "import_dist", "import_dist", "sign", "hash", "require_elliptic", "import_dist", "require_browser", "import_dist", "Common", "Transaction", "FakeTransaction", "import_dist", "import_dist", "error", "require_bytes", "import_dist", "import_dist", "value", "import_dist", "BigNumber", "require_constants", "import_dist", "import_dist", "bits", "i", "j", "import_dist", "keccak256", "require_rlp", "import_dist", "import_dist", "i", "import_dist", "UnicodeNormalizationForm", "import_dist", "i", "Coder", "CoderAnonymous", "CoderNull", "CoderNumber", "CoderBoolean", "CoderFixedBytes", "CoderAddress", "CoderDynamicBytes", "CoderString", "CoderArray", "CoderTuple", "AbiCoder", "require_hash", "import_dist", "import_dist", "_Indexed", "Description", "_DeployDescription", "_FunctionDescription", "Result", "_EventDescription", "_TransactionDescription", "_LogDescription", "Interface", "import_dist", "Provider", "import_dist", "Signer", "import_dist", "VoidSigner", "paramType", "key", "params", "tx", "Contract", "e", "ContractFactory", "require_utils", "import_dist", "import_dist", "require_common", "import_dist", "import_dist", "require__", "import_dist", "require__", "import_dist", "require__", "import_dist", "require__", "import_dist", "import_dist", "import_dist", "import_dist", "require_hash", "import_dist", "import_dist", "import_dist", "value", "keccak256", "import_dist", "import_dist", "import_dist", "import_dist", "Bytes", "import_dist", "import_ethereumjs_util", "import_dist", "import_dist", "import_dist", "import_eccrypto", "import_dist", "import_dist", "import_secp256k1", "import_dist", "import_secp256k1", "secp256k1_sign", "import_dist", "import_dist", "import_dist", "import_ethereumjs_util", "keccak256", "import_dist", "solidityKeccak256", "compress", "decompress", "import_dist", "compress", "decompress", "import_dist", "import_account"]
}
