import { DID } from 'dids';
import { Doctype, DocOpts, DocParams, Context } from "@ceramicnetwork/ceramic-common";
export interface TileParams extends DocParams {
    content?: Record<string, unknown>;
}
export declare class TileDoctype extends Doctype {
    change(params: TileParams, opts?: DocOpts): Promise<void>;
    static create(params: TileParams, context: Context, opts?: DocOpts): Promise<TileDoctype>;
    static makeGenesis(params: DocParams, context?: Context, opts?: DocOpts): Promise<Record<string, any>>;
    static _makeRecord(doctype: Doctype, did: DID, newContent: any, newControllers?: string[], schema?: string): Promise<any>;
    private static _calculateNonce;
    static _signDagJWS(record: any, did: DID, controller: string): Promise<any>;
}
//# sourceMappingURL=tile-doctype.d.ts.map