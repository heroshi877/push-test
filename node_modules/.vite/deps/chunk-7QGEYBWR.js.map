{
  "version": 3,
  "sources": ["../../get-browser-rtc/index.js", "../../queue-microtask/index.js", "../../simple-peer/index.js", "../../immer/src/immer.ts", "../../immer/src/utils/env.ts", "../../immer/src/utils/errors.ts", "../../immer/src/utils/common.ts", "../../immer/src/utils/plugins.ts", "../../immer/src/core/scope.ts", "../../immer/src/core/finalize.ts", "../../immer/src/core/proxy.ts", "../../immer/src/core/immerClass.ts", "../../immer/src/core/current.ts", "../../immer/src/plugins/patches.ts", "../../immer/src/plugins/mapset.ts", "../../immer/src/immer.ts", "../../immer/src/utils/env.ts", "../../immer/src/utils/errors.ts", "../../immer/src/utils/common.ts", "../../immer/src/utils/plugins.ts", "../../immer/src/core/scope.ts", "../../immer/src/core/finalize.ts", "../../immer/src/core/proxy.ts", "../../immer/src/core/immerClass.ts", "../../immer/src/core/current.ts", "../../immer/src/plugins/patches.ts", "../../immer/src/plugins/mapset.ts", "../../immer/dist/cjs/index.js", "../../../packages/restapi/src/lib/video/helpers/sendVideoCallNotification.ts", "../../../packages/restapi/src/lib/video/helpers/mediaToggle.ts", "../../../packages/restapi/src/lib/video/helpers/isJSON.ts", "../../../packages/restapi/src/lib/video/helpers/getIceServerConfig.ts", "../../../packages/restapi/src/lib/types/messageTypes.ts", "../../@pushprotocol/restapi/src/lib/types/videoTypes.js", "../../../packages/restapi/src/lib/types/index.ts", "../../../packages/restapi/src/lib/video/helpers/getIncomingIndexFromAddress.ts", "../../../packages/restapi/src/lib/space/helpers/getPlainAddress.ts", "../../../packages/restapi/src/lib/video/helpers/getConnectedAddresses.ts", "../../../packages/restapi/src/lib/video/helpers/getConnectToAddresses.ts", "../../../packages/restapi/src/lib/video/helpers/validateVideoRules.ts", "../../../packages/restapi/src/lib/video/Video.ts", "../../../packages/restapi/src/lib/video/index.ts"],
  "sourcesContent": ["// originally pulled out of simple-peer\n\nmodule.exports = function getBrowserRTC () {\n  if (typeof globalThis === 'undefined') return null\n  var wrtc = {\n    RTCPeerConnection: globalThis.RTCPeerConnection || globalThis.mozRTCPeerConnection ||\n      globalThis.webkitRTCPeerConnection,\n    RTCSessionDescription: globalThis.RTCSessionDescription ||\n      globalThis.mozRTCSessionDescription || globalThis.webkitRTCSessionDescription,\n    RTCIceCandidate: globalThis.RTCIceCandidate || globalThis.mozRTCIceCandidate ||\n      globalThis.webkitRTCIceCandidate\n  }\n  if (!wrtc.RTCPeerConnection) return null\n  return wrtc\n}\n", "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n", "/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst debug = require('debug')('simple-peer')\nconst getBrowserRTC = require('get-browser-rtc')\nconst randombytes = require('randombytes')\nconst stream = require('readable-stream')\nconst queueMicrotask = require('queue-microtask') // TODO: remove when Node 10 is not supported\nconst errCode = require('err-code')\nconst { Buffer } = require('buffer')\n\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nclass Peer extends stream.Duplex {\n  constructor (opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts)\n\n    super(opts)\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.channelNegotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this.destroying = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc = (opts.wrtc && typeof opts.wrtc === 'object')\n      ? opts.wrtc\n      : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT')\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT')\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\n    this._firstNegotiation = true\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new (this._wrtc.RTCPeerConnection)(this.config)\n    } catch (err) {\n      this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof this._pc.peerIdentity === 'object') {\n      this._pc.peerIdentity.catch(err => {\n        this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\n      })\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.channelNegotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    this._debug('initial negotiation')\n    this._needsNegotiation()\n\n    this._onFinishBound = () => {\n      this._onFinish()\n    }\n    this.once('finish', this._onFinishBound)\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return (this._connected && this._channel.readyState === 'open')\n  }\n\n  address () {\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\n  }\n\n  signal (data) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new (this._wrtc.RTCSessionDescription)(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'))\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    const iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj)\n      .catch(err => {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.')\n        } else {\n          this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n        }\n      })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n  send (chunk) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', { // request initiator to renegotiate\n        type: 'transceiverRequest',\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTrack()')\n\n    const submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    let sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n    } else {\n      throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('replaceTrack()')\n\n    const submap = this._senderMap.get(oldTrack)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'))\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSender()')\n\n    const submap = this._senderMap.get(track)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      if (this.initiator || !this._firstNegotiation) {\n        this._debug('starting batched negotiation')\n        this.negotiate()\n      } else {\n        this._debug('non-initiator initial negotiation request discarded')\n      }\n      this._firstNegotiation = false\n    })\n  }\n\n  negotiate () {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\n\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', { // request initiator to renegotiate\n          type: 'renegotiate',\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  // TODO: Delete this method once readable-stream is updated to contain a default\n  // implementation of destroy() that automatically calls _destroy()\n  // See: https://github.com/nodejs/readable-stream/issues/283\n  destroy (err) {\n    this._destroy(err, () => {})\n  }\n\n  _destroy (err, cb) {\n    if (this.destroyed || this.destroying) return\n    this.destroying = true\n\n    this._debug('destroying (error: %s)', err && (err.message || err))\n\n    queueMicrotask(() => { // allow events concurrent with the call to _destroy() to fire (see #692)\n      this.destroyed = true\n      this.destroying = false\n\n      this._debug('destroy (error: %s)', err && (err.message || err))\n\n      this.readable = this.writable = false\n\n      if (!this._readableState.ended) this.push(null)\n      if (!this._writableState.finished) this.end()\n\n      this._connected = false\n      this._pcReady = false\n      this._channelReady = false\n      this._remoteTracks = null\n      this._remoteStreams = null\n      this._senderMap = null\n\n      clearInterval(this._closingInterval)\n      this._closingInterval = null\n\n      clearInterval(this._interval)\n      this._interval = null\n      this._chunk = null\n      this._cb = null\n\n      if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\n      this._onFinishBound = null\n\n      if (this._channel) {\n        try {\n          this._channel.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._channel.onmessage = null\n        this._channel.onopen = null\n        this._channel.onclose = null\n        this._channel.onerror = null\n      }\n      if (this._pc) {\n        try {\n          this._pc.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._pc.oniceconnectionstatechange = null\n        this._pc.onicegatheringstatechange = null\n        this._pc.onsignalingstatechange = null\n        this._pc.onicecandidate = null\n        this._pc.ontrack = null\n        this._pc.ondatachannel = null\n      }\n      this._pc = null\n      this._channel = null\n\n      if (err) this.emit('error', err)\n      this.emit('close')\n      cb()\n    })\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = event => {\n      const err = event.error instanceof Error\n        ? event.error\n        : new Error(`Datachannel error: ${event.message} ${event.filename}:${event.lineno}:${event.colno}`)\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _read () {}\n\n  _write (chunk, encoding, cb) {\n    if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'))\n\n    if (this._connected) {\n      try {\n        this.send(chunk)\n      } catch (err) {\n        return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n      }\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n        this._cb = cb\n      } else {\n        cb(null)\n      }\n    } else {\n      this._debug('write before connect')\n      this._chunk = chunk\n      this._cb = cb\n    }\n  }\n\n  // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n  _onFinish () {\n    if (this.destroyed) return\n\n    // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000)\n    }\n\n    if (this._connected) {\n      destroySoon()\n    } else {\n      this.once('connect', destroySoon)\n    }\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc.createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc.createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'))\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    const iceConnectionState = this._pc.iceConnectionState\n    const iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'))\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'))\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats()\n        .then(res => {\n          const reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        }, err => cb(err))\n\n    // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return\n\n        const reports = []\n        res.result().forEach(result => {\n          const report = {}\n          result.names().forEach(name => {\n            report[name] = result.stat(name)\n          })\n          report.id = result.id\n          report.type = result.type\n          report.timestamp = result.timestamp\n          reports.push(flattenValues(report))\n        })\n        cb(null, reports)\n      }, err => cb(err))\n\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\n    // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        const remoteCandidates = {}\n        const localCandidates = {}\n        const candidatePairs = {}\n        let foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item\n          }\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          let remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress,\n            this.localPort,\n            this.remoteAddress,\n            this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          const cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable') {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      } else {\n        this._debug('negotiated')\n        this.emit('negotiated')\n      }\n    }\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        type: 'candidate',\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    let data = event.data\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    this.push(data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n    const cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id\n      })) return // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this._debug('on stream')\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug () {\n    const args = [].slice.call(arguments)\n    args[0] = '[' + this._id + '] ' + args[0]\n    debug.apply(null, args)\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\nmodule.exports = Peer\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n", "// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n", "export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tProxyArrayState,\n\tMapState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tgetPrototypeOf,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tArchType,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING,\n\terrors\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst errorOffset = 16\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\terrors.push(\n\t\t\t'Sets cannot have \"replace\" patches.',\n\t\t\tfunction(op: string) {\n\t\t\t\treturn \"Unsupported patch operation: \" + op\n\t\t\t},\n\t\t\tfunction(path: string) {\n\t\t\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t\t\t},\n\t\t\t\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n\t\t)\n\t}\n\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ArchType.Object:\n\t\t\tcase ArchType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ArchType.Array:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ArchType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tfor (let i = copy_.length - 1; base_.length <= i; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: readonly Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchType.Object || parentType === ArchType.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\")\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(errorOffset + 2, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\tdie(errorOffset)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(errorOffset + 1, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tdie,\n\tArchType,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\tclass DraftMap extends Map {\n\t\t[DRAFT_STATE]: MapState\n\n\t\tconstructor(target: AnyMap, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tset(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tforEach(cb: (value: any, key: any, self: any) => void, thisArg?: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tget(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t}\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tclass DraftSet extends Set {\n\t\t[DRAFT_STATE]: SetState\n\t\tconstructor(target: AnySet, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tadd(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tforEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\t}\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n", "// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n", "export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tProxyArrayState,\n\tMapState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tgetPrototypeOf,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tArchType,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING,\n\terrors\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst errorOffset = 16\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\terrors.push(\n\t\t\t'Sets cannot have \"replace\" patches.',\n\t\t\tfunction(op: string) {\n\t\t\t\treturn \"Unsupported patch operation: \" + op\n\t\t\t},\n\t\t\tfunction(path: string) {\n\t\t\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t\t\t},\n\t\t\t\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n\t\t)\n\t}\n\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ArchType.Object:\n\t\t\tcase ArchType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ArchType.Array:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ArchType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tfor (let i = copy_.length - 1; base_.length <= i; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: readonly Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchType.Object || parentType === ArchType.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\")\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(errorOffset + 2, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\tdie(errorOffset)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(errorOffset + 1, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tdie,\n\tArchType,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\tclass DraftMap extends Map {\n\t\t[DRAFT_STATE]: MapState\n\n\t\tconstructor(target: AnyMap, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tset(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tforEach(cb: (value: any, key: any, self: any) => void, thisArg?: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tget(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t}\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tclass DraftSet extends Set {\n\t\t[DRAFT_STATE]: SetState\n\t\tconstructor(target: AnySet, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tadd(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tforEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\t}\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./immer.cjs.production.js')\n} else {\n  module.exports = require('./immer.cjs.development.js')\n}", null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=videoTypes.js.map", null, null, null, null, null, null, null, null],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "queueMicrotask", "stream", "err", "event", "immer_exports", "__export", "Immer", "applyPatches", "castDraft", "castImmutable", "createDraft", "current", "enableMapSet", "enablePatches", "finishDraft", "freeze", "DRAFTABLE", "isDraft", "isDraftable", "NOTHING", "original", "produce", "produceWithPatches", "setAutoFreeze", "setUseStrictShallowCopy", "__toCommonJS", "DRAFT_STATE", "die", "error", "args", "getPrototypeOf", "value", "isPlainObject", "isMap", "isSet", "objectCtorString", "proto", "Ctor", "base_", "each", "obj", "iter", "getArchtype", "key", "entry", "index", "thing", "state", "type_", "has", "prop", "get", "set", "propOrOldValue", "t", "is", "x", "y", "target", "latest", "copy_", "shallowCopy", "base", "strict", "isPlain", "descriptors", "keys", "i", "desc", "deep", "isFrozen", "dontMutateFrozenCollections", "plugins", "getPlugin", "pluginKey", "plugin", "loadPlugin", "implementation", "currentScope", "getCurrentScope", "createScope", "parent_", "immer_", "drafts_", "canAutoFreeze_", "unfinalizedDrafts_", "usePatchesInScope", "scope", "patchListener", "patches_", "inversePatches_", "patchListener_", "revokeScope", "leaveScope", "revokeDraft", "enterScope", "immer", "draft", "revoke_", "revoked_", "processResult", "result", "baseDraft", "modified_", "finalize", "maybeFreeze", "generateReplacementPatches_", "rootScope", "path", "childValue", "finalizeProperty", "scope_", "finalized_", "resultEach", "generatePatches_", "parentState", "targetObject", "rootPath", "targetIsSet", "assigned_", "res", "autoFreeze_", "createProxyProxy", "parent", "isArray", "draft_", "isManual_", "traps", "objectTraps", "arrayTraps", "revoke", "proxy", "source", "readPropFromProto", "peek", "prepareCopy", "createProxy", "getDescriptorFromProto", "currentState", "markChanged", "owner", "fn", "useStrictShallowCopy_", "config", "recipe", "defaultBase", "self", "hasError", "p", "ip", "patches", "inversePatches", "patch", "applyPatchesImpl", "applyPatches_", "proxyMap_", "proxySet_", "currentImpl", "copy", "REPLACE", "ADD", "REMOVE", "basePath", "generatePatchesFromAssigned", "generateArrayPatches", "generateSetPatches", "clonePatchValueIfNeeded", "assignedValue", "origValue", "op", "baseValue", "replacement", "parentType", "type", "deepClonePatchValue", "k", "v", "cloned", "DraftMap", "assertUnrevoked", "prepareMapCopy", "cb", "thisArg", "_value", "_map", "iterator", "r", "DraftSet", "prepareSetCopy", "Immer", "applyPatches", "castDraft", "castImmutable", "createDraft", "current", "enableMapSet", "enablePatches", "finishDraft", "freeze", "isDraft", "isDraftable", "original", "produce", "produceWithPatches", "setAutoFreeze", "setUseStrictShallowCopy", "__toCommonJS", "immer", "isSet", "base", "import_dist", "import_dist", "ChatStatus", "ConditionType", "GROUP_RULES_CATEGORY", "GROUP_RULES_SUB_CATEGORY", "GROUP_RULES_PERMISSION", "GROUP_INVITER_ROLE", "VideoCallStatus", "NotifictaionType", "recipientAddress"]
}
