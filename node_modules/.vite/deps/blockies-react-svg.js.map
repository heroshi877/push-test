{
  "version": 3,
  "sources": ["../../blockies-react-svg/dist/es/_tslib-5dd6082a.mjs", "../../blockies-react-svg/src/blockies.ts", "../../blockies-react-svg/src/BlockiesSvg.tsx"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nexport { __rest as _ };\n//# sourceMappingURL=_tslib-5dd6082a.mjs.map\n", "// Forked from https://github.com/download13/blockies\n\n// The random number is a js implementation of the Xorshift PRNG\nconst randseed = new Array(4) // Xorshift: [x, y, z, w] 32 bit values\n\nfunction seedrand(seed: string) {\n\trandseed.fill(0)\n\n\tfor (let i = 0; i < seed.length; i++) {\n\t\trandseed[i % 4] = (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i)\n\t}\n}\n\nfunction rand() {\n\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\tconst t = randseed[0] ^ (randseed[0] << 11)\n\n\trandseed[0] = randseed[1]\n\trandseed[1] = randseed[2]\n\trandseed[2] = randseed[3]\n\trandseed[3] = randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8)\n\n\treturn (randseed[3] >>> 0) / ((1 << 31) >>> 0)\n}\n\nfunction createColor() {\n\t//saturation is the whole color spectrum\n\tconst h = Math.floor(rand() * 360)\n\t//saturation goes from 40 to 100, it avoids greyish colors\n\tconst s = (rand() * 60 + 40).toFixed(1) + '%'\n\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\tconst l = ((rand() + rand() + rand() + rand()) * 25).toFixed(1) + '%'\n\n\treturn 'hsl(' + h + ',' + s + ',' + l + ')'\n}\n\nexport function createImageData(size: number) {\n\tconst width = size // Only support square icons for now\n\tconst height = size\n\n\tconst dataWidth = Math.ceil(width / 2)\n\tconst mirrorWidth = width - dataWidth\n\n\tconst data: number[] = []\n\tfor (let y = 0; y < height; y++) {\n\t\tlet row: number[] = []\n\t\tfor (let x = 0; x < dataWidth; x++) {\n\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t// spot color has 13% chance\n\t\t\trow[x] = Math.floor(rand() * 2.3)\n\t\t}\n\t\tconst r = row.slice(0, mirrorWidth)\n\t\tr.reverse()\n\t\trow = row.concat(r)\n\n\t\tfor (let i = 0; i < row.length; i++) {\n\t\t\tdata.push(row[i])\n\t\t}\n\t}\n\n\treturn data\n}\n\nexport function buildOpts(opts: { seed: string; size?: number; scale?: number }) {\n\tseedrand(opts.seed)\n\n\tconst newOpts: BlockiesOptions = {\n\t\tseed: opts.seed,\n\t\tsize: opts.size || 8,\n\t\tscale: opts.scale || 10,\n\t\tcolor: createColor(),\n\t\tbgcolor: createColor(),\n\t\tspotcolor: createColor()\n\t}\n\n\treturn newOpts\n}\n\nexport interface BlockiesOptions {\n\tseed: string\n\tsize: number\n\tscale: number\n\tcolor: string\n\tbgcolor: string\n\tspotcolor: string\n}\n", "import { useEffect, useState } from 'react'\nimport { BlockiesOptions, buildOpts, createImageData } from './blockies'\n\nconst store: Record<string, { opts: BlockiesOptions; imageData: number[] }> = Object.create(null)\n\nexport default function BlockiesSvg(\n\tprops: {\n\t\taddress: string\n\t\tsize?: number\n\t\tscale?: number\n\t\tcaseSensitive?: boolean\n\t\tdefaultBackgroundColor?: string\n\t} & React.SVGProps<SVGSVGElement>\n) {\n\tlet { address, size = 8, scale = 10, caseSensitive = false, defaultBackgroundColor = 'black', ...rest } = props\n\tconst width = size * scale\n\n\tconst [opts, setOpts] = useState<BlockiesOptions | null>(null)\n\tconst [imageData, setImageData] = useState<number[] | null>(null)\n\n\tif (!caseSensitive && address) address = address.toLowerCase()\n\n\tuseEffect(() => {\n\t\tif (address) {\n\t\t\tif (store[address] && store[address].opts.size === size) {\n\t\t\t\tsetOpts(store[address].opts)\n\t\t\t\tsetImageData(store[address].imageData)\n\t\t\t} else {\n\t\t\t\tconst newOpts = buildOpts({ seed: address, size, scale })\n\t\t\t\tconst newImageData = createImageData(newOpts.size)\n\t\t\t\tsetOpts(newOpts)\n\t\t\t\tsetImageData(newImageData)\n\n\t\t\t\tstore[address] = { opts: newOpts, imageData: newImageData }\n\t\t\t}\n\t\t}\n\t}, [address])\n\n\tif (!address)\n\t\treturn (\n\t\t\t<svg {...rest} width={width} height={width} viewBox={`0 0 ${width} ${width}`} xmlns='http://www.w3.org/2000/svg'>\n\t\t\t\t<rect width={width} height={width} fill={defaultBackgroundColor} />\n\t\t\t</svg>\n\t\t)\n\n\tif (opts && imageData) {\n\t\treturn (\n\t\t\t<svg {...rest} width={width} height={width} viewBox={`0 0 ${width} ${width}`} xmlns='http://www.w3.org/2000/svg'>\n\t\t\t\t<rect width={width} height={width} fill={opts.bgcolor} />\n\n\t\t\t\t<g fill={opts.color}>\n\t\t\t\t\t{imageData?.map((value, i) => {\n\t\t\t\t\t\tif (value === 1) {\n\t\t\t\t\t\t\tconst row = (i % size) * scale\n\t\t\t\t\t\t\tconst col = Math.floor(i / size) * scale\n\n\t\t\t\t\t\t\treturn <rect key={`${address}-${i}`} width={scale} height={scale} x={row} y={col} />\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</g>\n\t\t\t\t<g fill={opts.spotcolor}>\n\t\t\t\t\t{imageData?.map((value, i) => {\n\t\t\t\t\t\tif (value === 2) {\n\t\t\t\t\t\t\tconst row = (i % size) * scale\n\t\t\t\t\t\t\tconst col = Math.floor(i / size) * scale\n\n\t\t\t\t\t\t\treturn <rect key={`${address}-${i}`} width={scale} height={scale} x={row} y={col} />\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t)\n\t} else\n\t\treturn (\n\t\t\t<svg {...rest} width={width} height={width} viewBox={`0 0 ${width} ${width}`} xmlns='http://www.w3.org/2000/svg'>\n\t\t\t\t<rect width={width} height={width} fill='black' />\n\t\t\t</svg>\n\t\t)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAeA,SAAS,OAAO,GAAG,GAAG;AAClB,MAAI,IAAI,CAAC;AACT,WAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,MAAE,CAAC,IAAI,EAAE,CAAC;AACd,MAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,aAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AACpE,UAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AACzE,UAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IACxB;AACJ,SAAO;AACX;;;;;;;ACzBA,IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;AAGA,IAAM,WAAW,IAAI,MAAM,CAAC;AAE5B,SAAS,SAAS,MAAY;AAC7B,WAAS,KAAK,CAAC;AAEf,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,aAAS,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC;EAC9E;AACF;AAEA,SAAS,OAAI;AAEZ,QAAM,IAAI,SAAS,CAAC,IAAK,SAAS,CAAC,KAAK;AAExC,WAAS,CAAC,IAAI,SAAS,CAAC;AACxB,WAAS,CAAC,IAAI,SAAS,CAAC;AACxB,WAAS,CAAC,IAAI,SAAS,CAAC;AACxB,WAAS,CAAC,IAAI,SAAS,CAAC,IAAK,SAAS,CAAC,KAAK,KAAM,IAAK,KAAK;AAE5D,UAAQ,SAAS,CAAC,MAAM,MAAO,KAAK,OAAQ;AAC7C;AAEA,SAAS,cAAW;AAEnB,QAAM,IAAI,KAAK,MAAM,KAAI,IAAK,GAAG;AAEjC,QAAM,KAAK,KAAI,IAAK,KAAK,IAAI,QAAQ,CAAC,IAAI;AAE1C,QAAM,MAAM,KAAI,IAAK,KAAI,IAAK,KAAI,IAAK,KAAI,KAAM,IAAI,QAAQ,CAAC,IAAI;AAElE,SAAO,SAAS,IAAI,MAAM,IAAI,MAAM,IAAI;AACzC;AAEM,SAAU,gBAAgB,MAAY;AAC3C,QAAM,QAAQ;AACd,QAAM,SAAS;AAEf,QAAM,YAAY,KAAK,KAAK,QAAQ,CAAC;AACrC,QAAM,cAAc,QAAQ;AAE5B,QAAM,OAAiB,CAAA;AACvB,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,QAAI,MAAgB,CAAA;AACpB,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAGnC,UAAI,CAAC,IAAI,KAAK,MAAM,KAAI,IAAK,GAAG;IAChC;AACD,UAAM,IAAI,IAAI,MAAM,GAAG,WAAW;AAClC,MAAE,QAAO;AACT,UAAM,IAAI,OAAO,CAAC;AAElB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACpC,WAAK,KAAK,IAAI,CAAC,CAAC;IAChB;EACD;AAED,SAAO;AACR;AAEM,SAAU,UAAU,MAAqD;AAC9E,WAAS,KAAK,IAAI;AAElB,QAAM,UAA2B;IAChC,MAAM,KAAK;IACX,MAAM,KAAK,QAAQ;IACnB,OAAO,KAAK,SAAS;IACrB,OAAO,YAAW;IAClB,SAAS,YAAW;IACpB,WAAW,YAAW;;AAGvB,SAAO;AACR;;;ACzEA,IAAM,QAAwE,uBAAO,OAAO,IAAI;AAExE,SAAA,YACvB,OAMiC;AAEjC,MAAI,EAAE,SAAS,OAAO,GAAG,QAAQ,IAAI,gBAAgB,OAAO,yBAAyB,QAAO,IAAc,OAAT,OAAI,OAAK,OAAtG,CAAmG,WAAA,QAAA,SAAA,iBAAA,wBAAA,CAAA;AACvG,QAAM,QAAQ,OAAO;AAErB,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAiC,IAAI;AAC7D,QAAM,CAAC,WAAW,YAAY,QAAI,uBAA0B,IAAI;AAEhE,MAAI,CAAC,iBAAiB;AAAS,cAAU,QAAQ,YAAW;AAE5D,8BAAU,MAAK;AACd,QAAI,SAAS;AACZ,UAAI,MAAM,OAAO,KAAK,MAAM,OAAO,EAAE,KAAK,SAAS,MAAM;AACxD,gBAAQ,MAAM,OAAO,EAAE,IAAI;AAC3B,qBAAa,MAAM,OAAO,EAAE,SAAS;MACrC,OAAM;AACN,cAAM,UAAU,UAAU,EAAE,MAAM,SAAS,MAAM,MAAK,CAAE;AACxD,cAAM,eAAe,gBAAgB,QAAQ,IAAI;AACjD,gBAAQ,OAAO;AACf,qBAAa,YAAY;AAEzB,cAAM,OAAO,IAAI,EAAE,MAAM,SAAS,WAAW,aAAY;MACzD;IACD;EACF,GAAG,CAAC,OAAO,CAAC;AAEZ,MAAI,CAAC;AACJ,eACCC,wBAAS,OAAA,OAAA,OAAA,CAAA,GAAA,MAAM,EAAA,OAAc,QAAQ,OAAO,SAAS,OAAO,KAAK,IAAI,KAAK,IAAI,OAAM,6BAA4B,GAAA,EAAA,cAC/GA,wBAAAA,QAAAA,EAAM,OAAc,QAAQ,OAAO,MAAM,uBAAsB,CAAI,EAAA,CAAA,CAAA;AAItE,MAAI,QAAQ,WAAW;AACtB,eACCC,yBAAA,OAAA,OAAA,OAAA,CAAA,GAAS,MAAI,EAAE,OAAc,QAAQ,OAAO,SAAS,OAAO,KAAK,IAAI,KAAK,IAAI,OAAM,6BAA4B,GAAA,EAAA,UAAA,KAC/GD,wBAAM,QAAA,EAAA,OAAc,QAAQ,OAAO,MAAM,KAAK,QAAO,CAAI,OAEzDA,wBAAG,KAAA,OAAA,OAAA,EAAA,MAAM,KAAK,MAAK,GACjB,EAAA,UAAA,cAAA,QAAA,cAAA,SAAA,SAAA,UAAW,IAAI,CAAC,OAAO,MAAK;AAC5B,UAAI,UAAU,GAAG;AAChB,cAAM,MAAO,IAAI,OAAQ;AACzB,cAAM,MAAM,KAAK,MAAM,IAAI,IAAI,IAAI;AAEnC,mBAAOA,wBAAA,QAAA,EAA8B,OAAO,OAAO,QAAQ,OAAO,GAAG,KAAK,GAAG,IAAG,GAA9D,GAAG,OAAO,IAAI,CAAC,EAAE;MACnC;KACD,EAAC,CAAA,CAAA,OAEHA,wBAAA,KAAA,OAAA,OAAA,EAAG,MAAM,KAAK,UAAS,GACrB,EAAA,UAAA,cAAS,QAAT,cAAS,SAAA,SAAT,UAAW,IAAI,CAAC,OAAO,MAAK;AAC5B,UAAI,UAAU,GAAG;AAChB,cAAM,MAAO,IAAI,OAAQ;AACzB,cAAM,MAAM,KAAK,MAAM,IAAI,IAAI,IAAI;AAEnC,mBAAOA,wBAAA,QAAA,EAA8B,OAAO,OAAO,QAAQ,OAAO,GAAG,KAAK,GAAG,IAAG,GAA9D,GAAG,OAAO,IAAI,CAAC,EAAE;MACnC;IACF,CAAC,EAAC,CAAA,CAAA,CACC,EACC,CAAA,CAAA;EAEP;AACA,eACCA,wBAAS,OAAA,OAAA,OAAA,CAAA,GAAA,MAAM,EAAA,OAAc,QAAQ,OAAO,SAAS,OAAO,KAAK,IAAI,KAAK,IAAI,OAAM,6BAA4B,GAAA,EAAA,cAC/GA,wBAAAA,QAAAA,EAAM,OAAc,QAAQ,OAAO,MAAK,QAAO,CAAG,EAAA,CAAA,CAAA;AAGtD;",
  "names": ["import_dist", "import_dist", "_jsx", "_jsxs"]
}
